{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/vec2.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/fluture/index.js","webpack:///./node_modules/typescript-collections/dist/lib/util.js","webpack:///./node_modules/sanctuary-show/index.js","webpack:///./node_modules/fluture-loaders/dist/lib.esm.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/pure3d/dist/lib.esm.js","webpack:///./node_modules/typescript-collections/dist/lib/Dictionary.js","webpack:///./node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/typescript-collections/dist/lib/arrays.js","webpack:///./node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary/index.js","webpack:///./node_modules/sanctuary/node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/sanctuary-either/index.js","webpack:///./node_modules/typescript-collections/dist/lib/index.js","webpack:///./node_modules/typescript-collections/dist/lib/LinkedList.js","webpack:///./src/app/types/Worker-Types.ts","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/gl-vec3/cross.js","webpack:///./node_modules/mouse-event-offset/index.js","webpack:///./node_modules/typescript-collections/dist/lib/FactoryDictionary.js","webpack:///./node_modules/typescript-collections/dist/lib/Heap.js","webpack:///./node_modules/typescript-collections/dist/lib/Queue.js","webpack:///./node_modules/typescript-collections/dist/lib/BSTreeKV.js","webpack:///./node_modules/typescript-collections/dist/lib/Set.js","webpack:///./src/app/worker/frp/Init-Sinks-FRP.ts","webpack:///./src/app/main/dom/context/Root-Context.tsx","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/fbjs/lib/emptyObject.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/object-assign/index.js","webpack:///./src/app/utils/math/Quadratic.ts","webpack:///./node_modules/sanctuary-type-classes/node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/sanctuary-pair/node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/sanctuary-pair/node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary-pair/index.js","webpack:///./node_modules/sanctuary-maybe/node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/sanctuary-maybe/node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary-maybe/index.js","webpack:///./node_modules/sanctuary/node_modules/sanctuary-type-classes/node_modules/sanctuary-type-identifiers/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/sanctuary-either/node_modules/sanctuary-type-identifiers/index.js","webpack:///./node_modules/sanctuary-either/node_modules/sanctuary-type-classes/index.js","webpack:///./node_modules/sanctuary/node_modules/sanctuary-def/index.js","webpack:///./src/app/utils/Utils.ts","webpack:///./node_modules/gl-vec3/normalize.js","webpack:///./node_modules/gl-vec3/copy.js","webpack:///./node_modules/gl-vec3/transformQuat.js","webpack:///./node_modules/gl-vec3/subtract.js","webpack:///./node_modules/gl-vec3/add.js","webpack:///./node_modules/gl-vec3/length.js","webpack:///./node_modules/gl-quat/invert.js","webpack:///./node_modules/gl-vec4/normalize.js","webpack:///./node_modules/gl-quat/normalize.js","webpack:///./node_modules/gl-vec3/set.js","webpack:///./node_modules/gl-vec3/dot.js","webpack:///./node_modules/quat-from-unit-vec3/index.js","webpack:///./node_modules/dprop/index.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/gl-vec2/distance.js","webpack:///./node_modules/touch-pinch/index.js","webpack:///./node_modules/parse-unit/index.js","webpack:///./node_modules/to-px/topx.js","webpack:///./node_modules/mouse-wheel/wheel.js","webpack:///./node_modules/orbit-controls/lib/input.js","webpack:///./node_modules/clamp/index.js","webpack:///./node_modules/defined/index.js","webpack:///./node_modules/orbit-controls/index.js","webpack:///./src/app/main/io/Controls.ts","webpack:///./src/app/main/io/Output.ts","webpack:///./src/app/main/init/Init-Mixin.ts","webpack:///./src/app/main/io/renderers/skybox/Skybox-Shader-Fragment.glsl","webpack:///./src/app/main/io/renderers/skybox/Skybox-Shader-Vertex.glsl","webpack:///./src/app/main/io/renderers/skybox/Skybox-Data.ts","webpack:///./src/app/main/io/renderers/skybox/Skybox.ts","webpack:///./src/app/main/init/Init-Loader.ts","webpack:///./node_modules/fbjs/lib/isNode.js","webpack:///./node_modules/fbjs/lib/isTextNode.js","webpack:///./node_modules/fbjs/lib/containsNode.js","webpack:///./node_modules/fbjs/lib/shallowEqual.js","webpack:///./node_modules/fbjs/lib/getActiveElement.js","webpack:///./node_modules/fbjs/lib/ExecutionEnvironment.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/react-dom/index.js","webpack:///./node_modules/typescript-collections/dist/lib/MultiRootTree.js","webpack:///./node_modules/typescript-collections/dist/lib/Stack.js","webpack:///./node_modules/typescript-collections/dist/lib/PriorityQueue.js","webpack:///./node_modules/typescript-collections/dist/lib/MultiDictionary.js","webpack:///./node_modules/typescript-collections/dist/lib/LinkedDictionary.js","webpack:///./node_modules/typescript-collections/dist/lib/BSTree.js","webpack:///./node_modules/typescript-collections/dist/lib/Bag.js","webpack:///./node_modules/sodiumjs/dist/sodium.esm.js","webpack:///./src/app/main/dom/view/TopMenu-View.tsx","webpack:///./src/app/main/dom/components/TopMenu-Component.tsx","webpack:///./src/app/main/dom/view/Loading-View.tsx","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./src/app/main/dom/components/Root-Component.tsx","webpack:///./src/app/main/init/Init-Prep.tsx","webpack:///./src/app/utils/math/Kinematic.ts","webpack:///./node_modules/concurrify/index.js","webpack:///./node_modules/denque/index.js","webpack:///./node_modules/inspect-f/index.js","webpack:///./src/app/utils/worker/Worker-Loader.ts","webpack:///./src/app/utils/flags/Flags.ts","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./src/app/utils/sanctuary/Sanctuary-Instance.ts","webpack:///./src/app/utils/sanctuary/Sanctuary.ts","webpack:///./src/app/Worker.ts","webpack:///./src/app/Main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","h","y","_","g","E","b","T","A","S","R","x","M","N","w","I","C","O","F","P","L","k","U","B","j","D","V","G","H","q","z","X","W","K","$","Y","Q","J","Z","tt","et","nt","rt","ot","it","ut","at","st","ct","lt","ft","pt","dt","ht","yt","mt","u","vt","_t","gt","Et","bt","Tt","At","St","Rt","xt","Mt","Nt","wt","It","Ct","Ot","Ft","Pt","Lt","kt","Ut","Bt","jt","Dt","Vt","Gt","Ht","qt","zt","Xt","Wt","Kt","a","$t","Yt","Qt","Jt","Zt","te","ee","ne","re","oe","ie","ue","ae","se","ce","le","fe","pe","de","he","ye","me","ve","_e","ge","Ee","be","Te","Ae","Se","Re","xe","Me","Ne","we","Ie","Ce","Oe","Fe","Pe","Le","ke","Ue","Be","je","De","Ve","Ge","He","qe","ze","Xe","We","Ke","$e","Ye","Qe","Je","Ze","tn","en","nn","rn","on","un","an","sn","cn","ln","fn","pn","dn","hn","yn","mn","vn","_n","gn","En","bn","Tn","An","Sn","Rn","xn","Mn","Nn","wn","In","Cn","On","Fn","Pn","Ln","kn","Un","Bn","jn","Dn","Vn","Gn","Hn","qn","zn","Xn","Wn","Kn","$n","Yn","Qn","Jn","Zn","tr","er","nr","rr","or","ir","ur","ar","sr","cr","lr","fr","pr","dr","hr","yr","mr","vr","_r","gr","Er","br","Tr","Ar","Sr","Rr","xr","Mr","Nr","wr","Ir","Cr","Or","Fr","Pr","Lr","kr","Ur","Br","jr","Dr","Vr","Gr","Hr","qr","zr","Xr","Wr","Kr","$r","Yr","Qr","Jr","Zr","to","f","eo","no","ro","oo","io","uo","ao","so","co","lo","fo","po","ho","yo","mo","vo","_o","go","Eo","bo","To","Ao","So","Ro","xo","Mo","No","wo","Io","Co","Oo","Fo","Po","Lo","ko","Uo","Bo","jo","Do","Vo","Go","Ho","qo","zo","Xo","Wo","Ko","$o","Yo","Qo","Jo","Zo","ti","ei","ni","ri","oi","ii","ui","ai","si","ci","li","fi","pi","di","hi","yi","mi","vi","_i","gi","Ei","bi","Ti","Ai","Si","Ri","xi","Mi","Ni","wi","Ii","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","degree","PI","toRadian","equals","abs","max","out","clone","copy","identity","fromValues","m00","m01","m10","m11","set","transpose","a1","invert","a0","a2","a3","det","adjoint","determinant","multiply","b0","b1","b2","b3","rotate","rad","sin","cos","mat2_scale","v","v0","v1","fromRotation","fromScaling","str","frob","sqrt","pow","LDU","add","subtract","exactEquals","mat2_equals","multiplyScalar","multiplyScalarAndAdd","scale","mul","sub","mat2d_create","mat2d_clone","mat2d_copy","mat2d_identity","mat2d_fromValues","tx","ty","mat2d_set","mat2d_invert","aa","ab","ac","ad","atx","aty","mat2d_determinant","mat2d_multiply","a4","a5","b4","b5","mat2d_rotate","mat2d_scale","translate","mat2d_fromRotation","mat2d_fromScaling","fromTranslation","mat2d_str","mat2d_frob","mat2d_add","mat2d_subtract","mat2d_multiplyScalar","mat2d_multiplyScalarAndAdd","mat2d_exactEquals","mat2d_equals","mat2d_mul","mat2d_sub","mat3_create","fromMat4","mat3_clone","mat3_copy","mat3_fromValues","m02","m12","m20","m21","m22","mat3_set","mat3_identity","mat3_transpose","a01","a02","a12","mat3_invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","mat3_adjoint","mat3_determinant","mat3_multiply","b00","b02","b10","b12","b20","b22","mat3_translate","mat3_rotate","mat3_scale","mat3_fromTranslation","mat3_fromRotation","mat3_fromScaling","fromMat2d","fromQuat","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","projection","width","height","mat3_str","mat3_frob","mat3_add","mat3_subtract","mat3_multiplyScalar","mat3_multiplyScalarAndAdd","mat3_exactEquals","mat3_equals","a6","a7","a8","b6","b7","b8","mat3_mul","mat3_sub","mat4_create","mat4_clone","mat4_copy","mat4_fromValues","m03","m13","m23","m30","m31","m32","m33","mat4_set","mat4_identity","mat4_transpose","mat4_invert","mat4_adjoint","mat4_determinant","mat4_multiply","mat4_translate","mat4_scale","mat4_rotate","axis","len","rotateX","rotateY","rotateZ","mat4_fromTranslation","mat4_fromScaling","mat4_fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","mat","getScaling","getRotation","trace","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","mat4_fromQuat","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","targetTo","target","mat4_str","mat4_frob","mat4_add","mat4_subtract","mat4_multiplyScalar","mat4_multiplyScalarAndAdd","mat4_exactEquals","mat4_equals","a9","a14","a15","b9","b13","b14","b15","mat4_mul","mat4_sub","vec3_create","vec3_clone","vec3_length","vec3_fromValues","vec3_copy","vec3_set","vec3_add","vec3_subtract","vec3_multiply","divide","ceil","floor","min","round","vec3_scale","scaleAndAdd","distance","squaredDistance","squaredLength","negate","inverse","normalize","vec3_dot","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","vec3_rotateX","vec3_rotateY","vec3_rotateZ","angle","tempA","tempB","cosine","acos","vec3_str","vec3_exactEquals","vec3_equals","vec3_sub","vec3_mul","div","dist","sqrDist","vec3_len","sqrLen","forEach","vec","stride","offset","count","arg","length","vec4_create","vec4_clone","vec4_fromValues","vec4_copy","vec4_set","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_ceil","vec4_floor","vec4_min","vec4_max","vec4_round","vec4_scale","vec4_scaleAndAdd","vec4_distance","vec4_squaredDistance","vec4_length","vec4_squaredLength","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","vec4_random","vectorScale","v2","v3","v4","s1","s2","vec4_transformMat4","vec4_transformQuat","ix","iy","iz","iw","vec4_str","vec4_exactEquals","vec4_equals","vec4_sub","vec4_mul","vec4_div","vec4_dist","vec4_sqrDist","vec4_len","vec4_sqrLen","vec4_forEach","quat_create","quat_identity","setAxisAngle","getAxisAngle","out_axis","quat_multiply","quat_rotateX","quat_rotateY","quat_rotateZ","calculateW","slerp","omega","cosom","sinom","scale0","scale1","quat_invert","dot","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","quat_str","quat_clone","quat_fromValues","quat_copy","quat_set","quat_add","quat_mul","quat_scale","quat_dot","quat_lerp","quat_length","quat_len","quat_squaredLength","quat_sqrLen","quat_normalize","quat_exactEquals","quat_equals","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","sqlerp","temp1","temp2","setAxes","matr","view","quat2_create","dq","quat2_clone","quat2_fromValues","w1","fromRotationTranslationValues","quat2_fromRotationTranslation","quat2_fromTranslation","quat2_fromRotation","quat2_fromMat4","outer","quat2_copy","quat2_identity","quat2_set","getReal","getDual","setReal","setDual","quat2_getTranslation","quat2_translate","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","quat2_rotateX","quat2_rotateY","quat2_rotateZ","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","quat2_add","quat2_multiply","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","quat2_mul","quat2_scale","quat2_dot","quat2_lerp","quat2_invert","sqlen","quat2_squaredLength","quat2_conjugate","quat2_length","quat2_len","quat2_sqrLen","quat2_normalize","quat2_str","quat2_exactEquals","quat2_equals","vec2_create","vec2_clone","vec2_fromValues","vec2_copy","vec2_set","vec2_add","vec2_subtract","vec2_multiply","vec2_divide","vec2_ceil","vec2_floor","vec2_min","vec2_max","vec2_round","vec2_scale","vec2_scaleAndAdd","vec2_distance","vec2_squaredDistance","vec2_length","vec2_squaredLength","vec2_negate","vec2_inverse","vec2_normalize","vec2_dot","vec2_cross","vec2_lerp","vec2_random","transformMat2","transformMat2d","vec2_transformMat3","vec2_transformMat4","vec2_rotate","p0","p1","sinC","cosC","vec2_angle","len1","len2","vec2_str","vec2_exactEquals","vec2_equals","vec2_len","vec2_sub","vec2_mul","vec2_div","vec2_dist","vec2_sqrDist","vec2_sqrLen","vec2_forEach","__webpack_amd_options__","global","factory","this","inspectf","Denque","concurrify","scope","self","window","setImmediate","setTimeout","noop","moop","show","toString","showf","sf","replace","partial1","arguments","partial2","partial3","immediately","FL","ordinal","namespace","version","$$type","error","message","Error","typeError","TypeError","invalidArgument","expected","actual","invalidContext","invalidFuture","id","parse","info","isFunction","isThenable","Promise","Boolean","then","isUnsigned","Infinity","isObject","empty","isEmpty","size","head","tail","throwRejection","Future","computation","Computation","isFuture","other","_ap","mapper","_map","lmapper","rmapper","_bimap","_chain","ap","map","bimap","chain","mapRej","_mapRej","chainRej","_chainRej","race","_race","both","_both","and","_and","_or","swap","_swap","fold","_fold","finally","_finally","lastly","fork","rej","res","_fork","done","callback","promise","_this","isRejected","isResolved","isSettled","extractLeft","extractRight","Core","_computation","Rejected","_value","reject","Resolved","of","Never","_isNever","Sequence","open","cancel","never","isNever","Eager","future","rejected","resolved","Action","run","ApAction","MapAction","BimapAction","ChainAction","MapRejAction","ChainRejAction","SwapAction","FoldAction","FinallyAction","AndAction","OrAction","RaceAction","BothAction","RaceActionState","early","BothActionState","spawn","actions","_spawn","_actions","Next","Done","_transform","action","settled","cold","queue","async","settle","unshift","shift","warmupActions","terminator","clear","pop","Undetermined","Synchronous","Asynchronous","ChainRec","step","init","_step","_init","ap$mval","mval","mfunc","Apply","test","alt$left","Alt","alt","map$mapper","Functor","bimap$lmapper$rmapper","Bifunctor","bimap$lmapper","chain$chainer","chainer","Chain","mapRej$mapper","chainRej$chainer","lastly$right","and$left","both$left","or$left","race$right","fold$f$g","fold$f","done$callback","fork$f$g","fork$f","value$cont","cont","ParallelAp","_mval","_mfunc","After$race","_time","After","time","RejectAfter","after$time","rejectAfter$time","reason","Attempt","_fn","attempt","timing","state","drain","func","val","c1","c2","okval","okfunc","ParallelAp$rej","clearTimeout","Cold","Cached","Pending","Rejected$1","Resolved$1","pure","_pure","reset","Encase","_a","Encase2","_b","Encase3","_c","EncaseN","EncaseN2","EncaseN$1","EncaseP","EncaseP2","EncaseP3","check$iteration","generator","_generator","Hook","acquire","dispose","consume","_acquire","_dispose","_consume","hook$acquire$cleanup","cleanup","hook$acquire","Node","check$parallel","Parallel","futures","_futures","_length","_max","_state","_addToQueue","_queue","push","_queued","_drainQueue","resolve","_cancel","err","iterator","next","check$iterator","cancelAcquire","resource","cancelConsume","Hook$done","Hook$dispose","disposal","Hook$cancelConsuption","Hook$consumptionRejected","Hook$consumptionResolved","consumption","cancels","cursor","running","blocked","Parallel$cancel","Parallel$run","idx","Parallel$drain","emptyArray","parallel$max","xs","isArray","ys","TryP","assign","chainRec","Par","isParallel","zero","Fluture","freeze","seq","par","sequential","after","rejectAfter","try","cache","encase","encase2","encase3","encaseN","encaseN2","encaseN3","encaseP","encaseP2","encaseP3","do","hook","node","parallel","tryP","_hasOwnProperty","isUndefined","obj","isString","has","prop","defaultCompare","defaultEquals","defaultToString","item","makeString","join","toret","first","reverseCompareFunction","compareFunction","compareToEquals","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","sanctuaryShow","$$show","seen","entry","indexOf","valueOf","JSON","stringify","isNaN","NaN","toISOString","concat","keys","sort","filter","constructor","String","sanctuary__WEBPACK_IMPORTED_MODULE_0__","checkTypes","env","isNil","sameOrigin","url","URL","webkitURL","origin","location","ImageLoader","crossOrigin","fluture__WEBPACK_IMPORTED_MODULE_1__","img","Image","addEventListener","src","fetchImage","Nothing","Just","loadImageFromUrl","loadImageFromArrayBuffer","data","mimeType","arrayBufferView","Uint8Array","blob","Blob","urlCreator","createObjectURL","__assign","XhrLoader","endpoint","options","opts","method","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","query","requestType","args","encodeURIComponent","responseType","withCredentials","headers","setRequestHeader","send","abort","fletch","response","fetchUrl","_fetchOverride","_fetchUrlOverride","fetchArrayBuffer","fetchText","fetchBlob","fetchXml","fetchJson","fetchArrayBufferUrl","fetchJsonUrl","fetchTextUrl","fetchBlobUrl","fetchXmlUrl","BlobLoader","read","fileReader","FileReader","onload","result","onerror","loadBlobAsArrayBuffer","readAsArrayBuffer","loadBlobAsDataUrl","readAsDataURL","loadblobAsText","readAsText","loadAudioBuffer","ctx","decodeAudioData","VideoPlayer","playing","timeupdate","video","document","createElement","autoplay","muted","loop","checkReady","play","playVideo","GltfAnimationTargetPath","GltfAnimationInterpolation","GltfMaterialAlphaMode","GltfNodeKind","GltfPrimitiveDrawKind","TRANSLATION","ROTATION","SCALE","WEIGHTS","LINEAR","STEP","CUBICSPLINE","OPAQUE","MASK","BLEND","MESH","SKIN","ELEMENTS","ARRAY","GltfIblExtensionName","GltfLightsExtensionName","GltfUnlitExtensionName","CameraKind","NodeKind","LightKind","WebGlConstants","PERSPECTIVE","ORTHOGRAPHIC","CAMERA","LIGHT","Ambient","Directional","Point","Spot","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_MAX_LENGTH","ALIASED_LINE_WIDTH_RANGE","ALIASED_POINT_SIZE_RANGE","ALPHA","ALPHA_BITS","ALWAYS","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ATTACHED_SHADERS","BACK","BLEND_COLOR","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLUE_BITS","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BROWSER_DEFAULT_WEBGL","BUFFER_SIZE","BUFFER_USAGE","BYTE","CCW","CLAMP_TO_EDGE","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","COMPILE_STATUS","COMPRESSED_TEXTURE_FORMATS","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_LOST_WEBGL","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_VERTEX_ATTRIB","CW","DECR","DECR_WRAP","DELETE_STATUS","DEPTH_ATTACHMENT","DEPTH_BITS","DEPTH_BUFFER_BIT","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_FUNC","DEPTH_RANGE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_TEST","DEPTH_WRITEMASK","DITHER","DONT_CARE","DST_ALPHA","DST_COLOR","DYNAMIC_DRAW","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","FASTEST","FLOAT","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRAGMENT_SHADER","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BINDING","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","GENERATE_MIPMAP_HINT","GEQUAL","GREATER","GREEN_BITS","HIGH_FLOAT","HIGH_INT","INCR","INCR_WRAP","INFO_LOG_LENGTH","INT","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_OPERATION","INVALID_VALUE","INVERT","KEEP","LEQUAL","LESS","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINE_LOOP","LINE_STRIP","LINE_WIDTH","LINK_STATUS","LOW_FLOAT","LOW_INT","LUMINANCE","LUMINANCE_ALPHA","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","MEDIUM_FLOAT","MEDIUM_INT","MIRRORED_REPEAT","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEVER","NICEST","NONE","NOTEQUAL","NO_ERROR","NUM_COMPRESSED_TEXTURE_FORMATS","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OUT_OF_MEMORY","PACK_ALIGNMENT","POINTS","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_UNITS","RED_BITS","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RGB","RGB5_A1","RGB565","RGBA","RGBA4","SAMPLER_2D","SAMPLER_CUBE","SAMPLES","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SCISSOR_BOX","SCISSOR_TEST","SHADER_COMPILER","SHADER_SOURCE_LENGTH","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","STATIC_DRAW","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BITS","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STREAM_DRAW","SUBPIXEL_BITS","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","TEXTURE_2D","TEXTURE_BINDING_2D","TEXTURE_BINDING_CUBE_MAP","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TRIANGLES","TRIANGLE_FAN","TRIANGLE_STRIP","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNSIGNED_BYTE","UNSIGNED_INT","UNSIGNED_SHORT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_SHADER","VIEWPORT","ZERO","createVec2","Float64Array","createVec4","createVec3","createMat4","createQuat","createIdentityMat4","gl_matrix__WEBPACK_IMPORTED_MODULE_0__","mat4","getTrsFromMatrix","matrix","scaledMatrix","rotation","getMatrixFromTrs","trs","getModelMatrix","parentModelMatrix","localMatrix","slice","getNormalMatrix","modelMatrix","getViewMatrices","camera","modelViewMatrix","modelViewProjectionMatrix","updateTransform","transform","updateLocal","updateModel","normalMatrix","updateView","getCameraProjection","cam","kind","values","xmag","ymag","znear","zfar","aspectRatio","yfov","getCameraView","getCameraPosition","updateCameraWithTransform","position","filterNodeDeep","children","filterNodesDeep","nodes","forEachNode","forEachNodes","countNodes","findNode","pred","nodesOrNode","targetNode","mapNode","mapNodeWithParent","parent","mapNodesWithParent","mapNodes","updateNodeTransforms","_parent","_node","pModelMatrix","updateNodeListTransforms","createPointLight","interpolate_linear","xs0","xs1","vec2","vec3","vec4","findKeyframeBounds","getValue","arr","_withinBounds","pValue","nValue","_binarySearch","mid","GLTF_PARSE_ACCESSOR_TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","GLTF_PARSE_COMPONENT_BYTE_SIZE","[object Object]","getComponentTypedData","buffer","componentType","Int8Array","Int16Array","Uint16Array","Uint32Array","getTypedDataFromInfo","buffers","bufferViewIndex","ArrayBuffer","bufferLength","bufferIndex","byteOffset","GLTF_PARSE_getAccessorTypedData","gltf","sparse","typeCount","accessorType","sparseIndices","indices","sparseValues","indexOfValue","valueIndex","GLTF_PARSE_getAccessorDataInfo","accessorId","accessor","accessors","byteLength","bufferView","bufferViews","byteStride","GLTF_PARSE_animationPathToString","GLTF_PARSE_animationStringToPath","weights","GLTF_PARSE_interpolationLookup","linear","cubicspline","gltf_setAnimationTime","animation","bounds","keyframes","k0","k1","interpolation","targetPath","quat","morphWeights","gltf_createAnimator","animations","totalTimes","Map","lastTs","ts","nextTime","timeMax","timeMin","animationIds","GLTF_PARSE_attributeNames","HAS_PREPPED","prepWebGlRenderer","renderer","extras","aName","attributes","globalLocations","getExtension","createTextureSwitcher","gl","activeTextureMap","_switchTexture","samplerIndex","texture","cacheInfo","activeTexture","bindTexture","switchTexture","switchCubeTexture","createTextureFromTarget","targets","createTexture","bindTarget","dataSize","setParameters","mipLevel","Element","texImage2D","format","createCubeTextureFromTarget","mipTarget","faceTarget","textureSetterSimple","_opts","isPowerOf2","flipY","pixelStorei","useMips","generateMipmap","texParameteri","wrapS","wrapT","filterMin","filterMag","createSimpleTextureFromTarget","alpha","nextHighestPowerOfTwo","defaultSampler","getBasePath","path","idx1","lastIndexOf","idx2","substr","getIblConfig","extensionsUsed","extensions","getConfig","lights","getLight","originalLight","light","ambient","directional","point","spot","color","from","intensity","innerConeAngle","outerConeAngle","GltfExtensions","loadAssets","coreData","config","fluture_loaders__WEBPACK_IMPORTED_MODULE_2__","jsonData","basePath","imageUrls","brdf","cubeMaps","cubeMapName","urls","list","imageFutures","ldrs","ldr","imageMap","ibl","createData","assets","colorSpace","useLod","images","faces","mipLevels","faceIndex","createScene","originalScene","scene","settings","createNode","originalNode","initialShaderConfig","primitive","shaderConfig","runtimeShaderConfig","shaderSource","source","defines","defineString","vertex","fragment","sceneConfig","nodeConfig","nPointLights","nDirectionalLights","nSpotLights","hasAmbient","console","warn","vs","fs","GLTF_PARSE_LoadDataAssets","glbBuffers","ext","reduce","acc","uri","image","bufferViewId","bufferId","loadImages","imageElements","GLTF_PARSE_CreateData","textures","textureMap","textureId","sampler","samplers","defaultColorSpace","materials","material","emissiveTexture","index","normalTexture","occlusionTexture","pbrMetallicRoughness","baseColorTexture","metallicRoughnessTexture","display","check","naturalWidth","naturalHeight","canvas","getContext","drawImage","wTexture","GLTF_PARSE_createTextures","bufferViewInfo","accessorLookup","indicesList","meshes","mesh","primitives","some","isElements","strategy","normalized","rendererBufferId","bvInfo","usagePattern","vaoIdLookup","GLTF_PARSE_createAttributes","animationId","channels","channel","toLowerCase","timeAccessor","input","timings","output","valuesAccessor","subarray","shaders","original","initConfig","utf8ArrayToStr","charCache","charFromCodePt","fromCodePoint","fromCharCode","array","codePt","byte1","buffLen","getJsonFromArrayBuffer","aBuffer","bytes","TextDecoder","decode","getChunk","dv","DataView","chunkLength","getUint32","chunkType","chunkStart","chunkEnd","chunkData","log","GLTF_PARSE_getOriginalFromArrayBuffer","magic","GLTF_PARSE_isBinaryFile","gltfEndOffset","bin","endOffset","_vaoIdCounter","attributeShaderNameLookup","POSITION","NORMAL","TANGENT","TEXCOORD_0","COLOR_0","JOINTS_0","WEIGHTS_0","GLTF_PARSE_sortPrimitiveAttributeKeys","ORDER","oa","ob","GLTF_PARSE_getPrimitiveAttributeKeys","originalPrimitive","UNIFORM_TYPE","createUniforms","activateShader","uniformLocations","uniformValues","uniformSingleValues","uniformMatrixTranspose","getLocation","uName","program","getUniformLocation","validLocation","loc","_isEqual","_assignCacheValues","uType","Int32Array","_setSingleValue","setterFn","_setValues","_setMatrixValues","setters","uniform1f","uniform1fv","uniform1i","uniform1iv","uniform2f","uniform2fv","uniform2i","uniform2iv","uniform3f","uniform3fv","uniform3i","uniform3iv","uniform4f","uniform4fv","uniform4i","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","hasLocation","current","_activateShader","shaderId","useProgram","createShader","vShader","fShader","createProgram","WebGLShader","deleteShader","deleteProgram","loadShader","shaderType","sourceText","shader","compileShader","getShaderParameter","errorMessage","getShaderInfoLog","attachShader","bindAttribLocation","linkProgram","getProgramParameter","getProgramInfoLog","_compileShader","uniforms","baseArray","morphsArray","skinArray","lightsArray","hashBooleans32","updateRuntimeShaderConfig","getCoreRuntimeShaderConfig","getShaderSource","originalMeshId","originalPrimitiveId","hasNormalAttributes","hasTangentAttributes","hasUvAttributes","hasColorAttributes","hasBaseColorMap","hasNormalMap","hasEmissiveMap","hasMetalRoughnessMap","hasOcclusionMap","manualSRGB","fastSRGB","nSkinJoints","alphaMode","originalNodeId","shaderMorphVarLookup","MORPH_VARS","MORPH_FUNCS","morphIndex","weightIndex","aMorph","SKIN_JOINT_COUNT","skin","skins","joints","getCoreVertexShader","getCoreFragmentShader","GLTF_PARSE_createPrimitives","meshPrimitives","nodeId","primitiveIdx","vaoId","vao","elementBufferId","attributeKey","attributeName","getLocationInRenderer","sym","vertexArrays","_primitive","drawKind","drawMode","elementsId","attributeKeys","arrayCount","materialId","_m","metallicRoughnessValues","baseColorFactor","metallicFactor","roughnessFactor","baseColorSamplerIndex","metallicRoughnessSamplerIndex","normal","strength","occlusion","emissiveSamplerIndex","emissiveFactor","doubleSided","alphaCutoff","hasAttribute","attr","nMorphWeights","nPositionMorphs","nNormalMorphs","nTangentMorphs","getCoreInitialShaderConfig","GLTF_PARSE_getNodes","skinLookup","originalSkin","skinId","inverseBindMatrices","numbers","ret","skeletonRootId","skinData","joint","inverseBindMatrix","skeleton","GLTF_PARSE_createSkins","getGltfNode","baseNode","nodeTrsProp","originalCamera","orthographic","cameras","cameraIndex","finalNode","renderScene","shaderGroupByAlpha","renderThunksByShader","meshList","lightList","skinMatrices","shaderHash","unlit","shaderKey","generateShader","shaderGroup","thunk","glToggle","diffuse","specular","scaleDiffBaseMR","scaleFGDSpec","scaleIBLAmbient","lightNode","assignMeshTexture","textureInfo","activate","elementsAccessor","drawElements","drawArrays","Set","glDepthFunc","glBlendFunc","render","_render","shaderGroups","gltf_load","bridge","_allNodes","_data","updateShaderConfigs","getAllNodes","getData","getOriginalScene","sceneNumber","scenes","sceneList","getCameraNode","loadFile","start","gltf_serializeScene","gltf_parseScene","gltf_updatePrimitiveShaderConfig","gltf_updateNodeTransforms","updatedNodes","gltf_setJointTransforms","gltf_findNodeById","nodeOrNodes","fullTree","jointList","getJointList","getSkeletonRootTransform","find","pos","inverseRootMatrix","jMat","meshNode","jointIds","delete","createAttributes","currentBuffer","currentTarget","_perShaderCache","_globalCache","activateElements","bindBuffer","getLocationInShader","getAttribLocation","activateData","vertexAttribPointer","enableVertexAttribArray","createWebGlBuffers","infoMap","bData","createBuffer","bufferData","makeFramebufferPicker","renderBuffer","createRenderbuffer","bindRenderbuffer","renderbufferStorage","frameBuffer","createFramebuffer","bindFramebuffer","framebufferTexture2D","framebufferRenderbuffer","unbind","readPixel","readout","readPixels","deleteFramebuffer","deleteRenderbuffer","deleteTexture","bits","createVertexArrays","_cache","currentSym","_bind","bindVertexArrayOES","bindVertexArray","_activate","force","createVertexArrayOES","createVertexArray","release","getVersionString","getParameter","_isNumber","chr","getMajorVersion","numberString","charAt","parseInt","createWebGlRenderer","contextAttributes","_gl","lastScreenSize","flagMap","extensionMap","extName","depthFunc","_sFactor","_dFactor","textureSwitcher","resize","setAttribute","viewport","drawingBufferWidth","drawingBufferHeight","setting","flag","enable","disable","sFactor","dFactor","blendFunc","util","Dictionary","toStrFunction","table","nElements","toStr","pair","setValue","previousElement","remove","name_1","name_2","name_3","containsKey","sanctuaryTypeIdentifiers","pattern","RegExp","groups","exec","Number","equalsFunction","contains","splice","frequency","freq","array1","array2","temp","array_1","sanctuaryTypeClasses","__doctest","require","List","Maybe","Nil","Cons","concat_","constant","forEachKey","strMap","sameType","iterationNext","iterationDone","TypeClass","dependencies","every","Constructor","Value","_funcPath","allowInheritedProps","_x","funcPath","implPath","implementations","functionName","match","_name","requirements","getBoundMethod","typeRep","typeClass","methods","Setoid","Ord","lte","Semigroupoid","compose","Category","Semigroup","Monoid","Group","Filterable","Profunctor","promap","Applicative","Monad","Plus","Alternative","Foldable","Traversable","traverse","Extend","extend","Comonad","extract","Contravariant","contramap","Array$of","Array$prototype$equals","Array$prototype$lte","Array$prototype$concat","Object$prototype$concat","Null","fantasy-land/equals","fantasy-land/lte","Undefined","Date","ignoreCase","multiline","sticky","unicode","fantasy-land/empty","fantasy-land/concat","fantasy-land/of","fantasy-land/chainRec","nil","todo","more","steps","fantasy-land/zero","reprs","fantasy-land/filter","fantasy-land/map","fantasy-land/ap","fantasy-land/chain","fantasy-land/alt","fantasy-land/reduce","initial","fantasy-land/traverse","lift2","fantasy-land/extend","Arguments","theseKeys","otherKeys","applicative","singleton","Function","fantasy-land/id","fantasy-land/compose","semigroupoid","functor","fantasy-land/promap","profunctor","fantasy-land/contramap","contravariant","$seen","xType","$pairs","filterable","bifunctor","applyF","applyX","chain_","foldable","sortBy","rs","fx","lte_","traversable","extend_","gte","group","flip","mapLeft","lift3","apFirst","apSecond","append","prepend","elem","foldMap","monoid","reverse","takeWhile","take","dropWhile","sequence","duplicate","comonad","sanctuary","sanctuaryDef","sanctuaryEither","sanctuaryMaybe","sanctuaryPair","Either","Pair","Descending","Sum","DescendingType","UnaryType","typeEq","Unknown","Type","Left","Right","get_","toObject","invoke0","invoke1","typeIdent","TypeVariable","UnaryTypeVariable","BinaryTypeVariable","$Either","BinaryType","either","$Maybe","maybe","$Pair","fst","snd","TypeRep","AnyFunction","_test","Options","RecordType","Any","def","is","MaybeType","EitherType","PairType","consts","types","impl","unchecked","curry2","curry3","curry4","isJust","toMaybe","maybe_","justs","maybes","eitherToMaybe","encaseEither","isLeft","isRight","encaseEither2","encaseEither3","not","ifElse","unfoldr","zipWith","mult","requiredNonCapturingGroup","NonNegativeInteger","Predicate","curry5","pipe","pipeK","isNothing","fromMaybe","fromMaybe_","Thunk","maybeToNullable","Nullable","mapMaybe","maybeToEither","fromEither","toEither","lefts","rights","tagBy","complement","when","unless","allPass","preds","anyPass","Integer","end","fromIdx","toIdx","last","takeLast","drop","dropLast","joinWith","range","groupBy","active","zip","props","gets","StrMap","insert","pairs","fromPairs","ValidNumber","FiniteNumber","sum","product","NonZeroFiniteNumber","exp","base","mean","total","even","odd","parseDate","ValidDate","date","validFloatRepr","parseFloat","Radix","NullaryType","radix","charset","parseJson","Match","toMatch","ss","withRegex","lastIndex","regex","RegexFlags","flags","regexEscape","NonGlobalRegExp","matchAll","GlobalRegExp","toUpper","toLower","trim","stripPrefix","prefix","stripSuffix","suffix","words","split","unwords","lines","unlines","splitOn","splitOnRegex","process","NODE_ENV","BROADCAST","BUILD_VERSION","Array2","formatRegExp","objects","inspect","isNull","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","debugEnviron","debugs","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","simple","isNumber","visibleKeys","hash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","braces","toUTCString","formatProperty","prev","cur","desc","getOwnPropertyDescriptor","line","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","Left$prototype","@@show","Left$prototype$show","fantasy-land/bimap","Right$prototype","Right$prototype$show","custom","Left$prototype$equals","Left$prototype$lte","Left$prototype$concat","Right$prototype$equals","Right$prototype$lte","Right$prototype$concat","tag","_arrays","arrays","Bag_1","Bag","BSTree_1","BSTree","BSTreeKV_1","BSTreeKV","Dictionary_1","Heap_1","Heap","LinkedDictionary_1","LinkedDictionary","LinkedList_1","LinkedList","MultiDictionary_1","MultiDictionary","FactoryDictionary_1","FactoryDictionary","FactoryDictionary_2","DefaultDictionary","Queue_1","Queue","PriorityQueue_1","PriorityQueue","Set_1","Stack_1","Stack","MultiRootTree_1","MultiRootTree","_util","firstNode","lastNode","newNode","nodeAtIndex","element","elementAtIndex","equalsF","currentNode","previous","eqF","equalsAux","n1","n2","removeElementAtIndex","toArray","WorkerCommands","TICK","RENDER","READY","INIT","WORLD_START","BALL_START","BALL_STOP","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","Item","nextTick","title","browser","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","rootPosition","ev","srcElement","clientX","clientY","rect","body","getBoundingClientRect","__extends","extendStatics","setPrototypeOf","__proto__","__","_super","defaultFactoryFunction","setDefault","defaultValue","currentValue","collections","compare","leftChildIndex","nodeIndex","rightChildIndex","parentIndex","minIndex","leftChild","rightChild","siftUp","siftDown","peek","removeRoot","equF","enqueue","dequeue","el","root","insertNode","searchNode","search","removeNode","inorderTraversal","inorderTraversalAux","stop","preorderTraversal","preorderTraversalAux","postorderTraversal","postorderTraversalAux","levelTraversal","levelTraversalAux","minimum","minimumAux","maximum","maximumAux","heightAux","cmp","leftCh","rightCh","transplant","signal","toStringFunction","dictionary","intersection","otherSet","union","difference","isSubsetOf","isSub","sodiumjs_1","sLoadingFinished","StreamSink","React","RootContext","createContext","makeEmptyFunction","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","argIndex","framesToPop","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","symbols","Quadratic","root_part","denom","Pair$prototype$show","fantasy-land/extract","Pair$prototype$equals","Pair$prototype$lte","Pair$prototype$concat","Pair$prototype$ap","Pair$prototype$chain","Nothing$prototype","Nothing$prototype$show","Just$prototype","Just$prototype$show","just","Just$prototype$equals","Just$prototype$lte","Just$prototype$concat","eval","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","always2","isPrefix","candidate","separator","memberOf","strRepeat","times","sortedKeys","stripOutermostParens","toMarkdownList","trimTrailingSpaces","bool","wrap","parenthesize","stripNamespace","_Type","validate","propPath","extractor","BINARY","FUNCTION","INCONSISTENT","NO_ARGUMENTS","NULLARY","RECORD","UNARY","UNKNOWN","VARIABLE","Inconsistent","NoArguments","typeofEq","typeof_","functionUrl","NullaryTypeWithUrl","UnaryTypeWithUrl","_1","Array_","Array0","Array1","_2","Boolean_","Date_","Error_","isFinite","augmentThunk","Function_","_types","$keys","$types","inner","RegExp_","HtmlElement","NegativeFiniteNumber","NegativeInteger","NegativeNumber","Number_","NonEmpty","NonZeroInteger","NonZeroValidNumber","nullable","Object_","PositiveFiniteNumber","PositiveInteger","PositiveNumber","members","EnumType","String_","Symbol_","Unchecked","_create","numArgs","expandUnknown","_determineActualTypes","seen$","fromUnaryType","$1","xprod","$2","isConsistent","determineActualTypesLoose","updateTypeVarMap","typeVarMap","typeVar","$typeVarMap","typeVarName","$entry","valuesByPath","isNullaryTypeVar","isValid","expandUnknownStrict","satisfactoryTypes","typeInfo","expType","recur","invalidValue","constraints","typeClasses","typeClassConstraintViolation","typeVarMap$","okTypes","typeVarConstraintViolation","$1s","$2s","CheckedNullaryType","CheckedUnaryType","CheckedBinaryType","specialize","CheckedEnumType","fields","missing","CheckedRecordType","CheckedTypeVariable","CheckedUnaryTypeVariable","CheckedBinaryTypeVariable","invalidArgumentsCount","numArgsExpected","index_","constraintsRepr","$reprs","typeVarNames","showTypeWith","names","code","charCodeAt","showTypeQuoted","showValuesAndTypes","showType","typeSignature","arity","_underline","formatType3","underlineConstraint","formatType5","formatType4","label","delta","counter","carets","repr","parenthesized","resolvePropPath","formatType6","indexedPropPath","propPath_","indexedPropPath_","see","record","tvn","tc","values_","underlinedTypeVars","paths","$valuesByPath","assertRight","withTypeChecking","wrapFunctionCond","_typeVarMap","checkValue","wrapped","wrapNext","_values","expTypes","fromUncheckedUnaryType","typeConstructor","__export","tmp","configurable","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler","context","listener","newListener","fired","listenerCount","evlistener","emitter","getDistance","dprop","eventOffset","Finger","touch","fingers","activeCount","lastDistance","ended","enabled","defineProperties","pinching","removeEventListener","onTouchStart","onTouchMove","onTouchRemoved","indexOfTouch","identifier","changedTouches","newTouch","newIndex","oldIndex","newFinger","oldTouch","initialDistance","computeDistance","changed","movedTouch","currentDistance","removed","otherIdx","otherTouch","num","parseUnit","toPX","PIXELS_PER_INCH","getPropertyInPX","parts","getComputedStyle","getPropertyValue","clientHeight","unit","testDIV","appendChild","removeChild","innerWidth","innerHeight","noScroll","lineHeight","preventDefault","dx","deltaX","dy","deltaY","dz","deltaZ","deltaMode","mouseWheel","createPinch","opt","pinch","mouseWheelListener","mouseStart","dragging","tmp2","zoomFn","zoom","rotateFn","pinchFn","isDragging","isPinching","onInputDown","onInputMove","onInputUp","onPinchPlace","onPinchLift","onPinchChange","lastFinger","lifted","remaining","documentElement","clientWidth","defined","clamp","inputEvents","quatFromVec3","quatInvert","glVec3","Y_UP","tmpVec3","inputDelta","upQuat","upQuatInverse","_phi","phi","_theta","theta","controls","update","updateDirection","damp","damping","copyInto","direction","rotateSpeed","zoomSpeed","pinchSpeed","phiBounds","thetaBounds","distanceBounds","PI2","applyPhiTheta","cameraUp","atan2","radius","pure3d_1","setupOrbitControls","gl_matrix_1","createControls","orbitControls","updateCamera","makeOutput","gltfBridges","renderSkybox","Utils_1","addGltfExtensions","meta","addExtension","__webpack_exports__","GEOMETRY_BUFFER_ID","ELEMENTS_BUFFER_ID","uploadData","cube","vertexPositions","side","coords","normals","texCoords","face","xyz","nrm","vertexNormals","vertexTextureCoords","fluture_1","fluture_loaders_1","Skybox_Data_1","Skybox_Shader_Vertex_glsl_1","Skybox_Shader_Fragment_glsl_1","createSkybox","imgElements","posX","negX","posY","negY","posZ","negZ","cameraMatrix","Skybox_1","Init_Mixin_1","loadModel","defaultView","ownerDocument","nodeType","nodeName","isNode","isTextNode","containsNode","outerNode","innerNode","parentNode","compareDocumentPosition","objA","objB","keysA","keysB","doc","activeElement","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","isInWorker","ba","da","ea","fa","ha","_caughtError","_hasCaughtError","_rethrowError","_hasRethrowError","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","hasCaughtError","clearCaughtError","rethrowCaughtError","la","ma","na","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","ta","ua","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","wa","xa","ya","za","Aa","Ba","Ca","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","Ea","Fa","Ga","Ha","stateNode","disabled","Ia","Ja","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","Ma","Na","Oa","Pa","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","return","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","bb","animationend","animationiteration","animationstart","transitionend","cb","db","eb","transition","fb","gb","hb","ib","jb","kb","lb","_root","_startText","_fallbackText","mb","nb","pb","eventPhase","bubbles","cancelable","timeStamp","now","defaultPrevented","isTrusted","nativeEvent","Interface","isDefaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","stopPropagation","cancelBubble","persist","ub","vb","wb","xb","documentMode","yb","zb","Ab","Bb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","Cb","Db","keyCode","Eb","detail","Fb","Ib","which","ctrlKey","altKey","metaKey","char","Jb","Kb","injectFiberControlledHostComponent","Lb","Mb","Nb","restoreControlledState","Ob","Pb","Qb","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","Sb","Tb","Ub","Vb","Wb","Xb","datetime","datetime-local","email","month","password","tel","text","week","Yb","Zb","correspondingUseElement","$b","cc","_valueTracker","stopTracking","dc","checked","ec","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","fc","for","gc","hc","ic","jc","kc","lc","mc","pc","qc","rc","sc","uc","displayName","pendingProps","$$typeof","vc","_debugOwner","_debugSource","fileName","lineNumber","wc","xc","zc","acceptsBooleans","attributeNamespace","mustUseProperty","propertyName","Dc","Ec","Fc","removeAttribute","setAttributeNS","Gc","defaultChecked","_wrapperState","initialChecked","Hc","Ic","initialValue","controlled","Jc","Kc","Lc","Mc","tabIndex","Nc","change","Oc","Pc","Qc","Rc","Sc","Tc","Uc","Vc","detachEvent","Wc","Xc","Yc","Zc","$c","_isInputEventSupported","bd","cd","Control","Meta","Shift","dd","getModifierState","ed","fd","screenX","screenY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","pointerId","pressure","tiltX","tiltY","pointerType","isPrimary","hd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","parentWindow","jd","effectTag","kd","md","child","sibling","ld","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","rd","charCode","sd","Esc","Spacebar","Up","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","repeat","locale","vd","dataTransfer","wd","touches","targetTouches","xd","yd","wheelDeltaX","wheelDeltaY","wheelDelta","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Kd","Ld","Md","Nd","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Od","Pd","Qd","Rd","Sd","firstChild","Td","textContent","nextSibling","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","requestAnimationFrame","performance","didTimeout","timeRemaining","scheduledCallback","postMessage","timeoutTime","Children","selected","defaultSelected","wasMultiple","multiple","dangerouslySetInnerHTML","html","mathml","svg","MSApp","execUnsafeLocalFunction","namespaceURI","innerHTML","lastChild","nodeValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setProperty","substring","menuitem","area","col","embed","keygen","link","param","track","wbr","blur","focus","createElementNS","createTextNode","__html","onClick","onclick","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","af","bf","cf","autoFocus","df","ef","ff","gf","hf","jf","kf","lf","mf","pf","qf","rf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","tf","uf","vf","getChildContext","wf","__reactInternalMemoizedMergedChildContext","xf","yf","ref","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","zf","Af","isReactComponent","Bf","Cf","Df","pendingChildren","implementation","Ff","Gf","Hf","Lf","Mf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Nf","Of","payload","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","stack","Yf","Zf","$f","ag","_context","_changedBits","_currentValue","bg","cg","dg","eg","fg","gg","ig","tagName","jg","kg","lg","pg","isMounted","_reactInternalFiber","enqueueSetState","mg","ng","og","enqueueReplaceState","enqueueForceUpdate","qg","shouldComponentUpdate","isPureReactComponent","rg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","sg","refs","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","tg","ug","_owner","_stringRef","vg","wg","nc","Jd","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","pendingContext","Mg","Sg","Tg","Ug","Vg","Wg","Xg","suppressReactErrorLogging","Yg","Zg","$g","Kf","componentWillUnmount","ah","bh","ch","insertBefore","dh","eh","fh","gh","componentDidCatch","hh","componentStack","ih","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","updater","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","hydrate","hidden","_calculateChangedBits","unstable_observedBits","Rg","yh","pendingCommitExpirationTime","zh","remainingExpirationTime","Ah","getDerivedStateFromCatch","Dh","Eh","Fh","Gh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","nextScheduledRoot","Vh","Wh","Xh","Yh","Zh","_onComplete","finishedWork","firstBatch","_expirationTime","_defer","rangeCount","Wa","focusedElem","selectionRange","ja","__reactInternalSnapshotBeforeUpdate","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","hg","oc","ca","Ng","Og","yc","Pg","zi","Jf","ji","Ch","_callbacks","_next","_hasChildren","_didComplete","_children","_didCommit","_onCommit","qi","_internalRoot","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","Ef","_reactRootContainer","legacy_renderSubtreeIntoContainer","commit","$h","unmount","createBatch","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","findHostInstanceByFiber","ki","bundleType","rendererPackageName","Bi","checkDCE","Direction","BEFORE","AFTER","INSIDE_AT_END","INSIDE_AT_START","rootIds","initRootIds","initNodes","rootId","createEmptyNodeIfNotExist","nodeKey","nodeListItem","getRootIds","getNodes","getObject","flatten","extraPropsObject","level","hasParent","childrenCount","extraPropsObject_1","countChildren","startId","returnArray","idsList","moveIdBeforeId","moveId","beforeId","moveIdAfterId","afterId","moveIdIntoId","insideId","atStart","swapRootIdWithRootId","withRootId","leftIndex","findRootId","rightIndex","swapRootPositionWithRootPosition","swapRootPosition","withRootPosition","deleteId","rootDeleteId","nodeAndSubNodesDelete","nodeRefrencesDelete","insertIdBeforeId","insertId","foundRootIdIndex","insertIdIntoRoot","foundNodeIdIndex","findNodeId","insertIdIntoNode","insertIdAfterId","belowId","insertIdIntoId","nodeInsertAtEnd","rootInsertAtEnd","length_1","length_2","sourceId","sourceRootIndex","targetId","targetRootIndex","rootDelete","nodeInsertAtStart","nodeDeleteAtIndex","swapArrayElements","indexA","indexB","toDeleteLater","nodeDelete","rootInsertAtStart","heap","valuesEqualsFunction","allowDuplicateValues","dict","allowDuplicate","values_1","v_1","LinkedDictionaryPair","unlink","HeadOrTailLinkedDictionaryPair","isHeadOrTailLinkedDictionaryPair","appendToTail","getLinkedDictionaryPair","oldPair","newPair","existingPair","crawlNode","toStrF","nCopies","copies","toSet","elements_1","totalRegistrations","getTotalRegistrations","Color","Source","register_","registered","deregister_","register","increment","decrement","deregister","gray","purple","roots","nextID","Vertex","rank","sources","childrn","visited","buffered","refCountAdj","refCount","collectCycles","incRefCount","anyChanged","ensureBiggerThan","decRefCount","matched","addSource","limit","descr","colStr","chs","referrer","possibleRoots","free","collectingCycles","markRoots","scanRoots","collectRoots","newRoots","markGray","scan","collectWhite","scanBlack","NULL","Lambda1","deps","lambda1","Lambda1_deps","Lambda1_toFunction","Lambda2","lambda2","Lambda2_deps","Lambda2_toFunction","Lambda3","lambda3","Lambda3_deps","Lambda3_toFunction","Lambda4","lambda4","Lambda4_deps","Lambda4_toFunction","Lambda5","lambda5","Lambda5_deps","Lambda5_toFunction","Lambda6","lambda6","Lambda6_deps","Lambda6_toFunction","toSources","dep","getVertex__","Entry","nextSeq","Transaction","inCallback","toRegen","prioritizedQ","typescript_collections__WEBPACK_IMPORTED_MODULE_0__","entries","sampleQ","lastQ","postQ","requestRegen","prioritized","sample","post","childIx","existing","neu","checkRegen","es","isActive","currentTransaction","close","sq","parent_1","onStart","onStartHooks","transWas","runningOnStartHooks","CoalesceHandler","accumValid","send_","accum","Lazy","lift","lift4","Unit","UNIT","Operational","updates","getStream__","sSpark","StreamWithSend","sInitial","snapshot1","orElse","defer","setVertex__","listen_","as","_loop_1","LazySample","cell","hasValue","ApplyState","f_present","a_present","Cell","initValue","setStream","Stream","valueUpdate","lazyInitValue","sampleNoTrans__","sampleLazy","sampleLazyNoTrans__","holdLazy","fn0","lift5","lift6","cf_value","ca_value","src1","src2","coalesce__","switchC","cca","last_ca","cca_value","kill2","kill1","switchS","csa","h2","listen","Listener","LazyCell","firings","mapTo","merge","merge_","coalescer","filterNotNull","gate","snapshot","f_","snapshot3","snapshot4","snapshot5","snapshot6","hold","collect","initState","collectLazy","StreamLoop","ebs","bs","es_out","accumLazy","suppressEarlierFirings","firings_1","sanctuary_type_classes__WEBPACK_IMPORTED_MODULE_1__","assigned__","sa_out","CellLoop","a_out","CellSink","Tuple2","TimerSystemImpl","Event","sAlarm","TimerSystem","eventQueue","tMinimum","timeSnk","mev","tAlarm","cancelCurrent","tAl","sampled","updateTimer","setTimer","kill","oAlarm","SecondsTimerSystem","SecondsTimerSystemImpl","MillisecondsTimerSystem","MillisecondsTimerSystemImpl","IOAction","fromAsync","performIO","fontFamily","fontSize","borderRadius","margin","padding","textAlign","border","styleGreen","backgroundColor","styleRed","Waiting","Bouncing","PHASE","TopMenu_View_1","Root_Context_1","Worker_Types_1","WAITING","BOUNCING","TopMenu","phase","Consumer","worker","setState","cmd","Component","Loading","forceUpdate","__self","__source","defaultProps","keyPrefix","=",":","only","createRef","PureComponent","_defaultValue","_currentValue2","_changedBits2","Provider","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement","Loading_View_1","TopMenu_Component_1","Init_Sinks_FRP_1","Root","isLoading","unlistener","Root_Component_1","ReactDOM","prepReact","getElementById","prepCanvas","prepRenderer","clearColor","prepCamera","cameraLook","Quadratic_1","Kinematic1","Kinematic2","Kinematic3","Kinematic4","vSquared","Kinematic5","root1","root2","Kinematic6","Kinematic7","isBinary","Repr","INNERTYPE","OUTERTYPE","INNERNAME","OUTERNAME","Concurrently","isInner","isOuter","construct","proto","mzero","_head","_tail","_capacityMask","_list","_fromArray","peekAt","peekFront","peekBack","_growArray","_shrinkArray","removeOne","del_count","arg_len","arguments_index","leng","_copyArray","fullCopy","newArray","RSPACE","RCODE","RTABS","REOL","isCode","getPadding","fixIndentation","indentation","paddings","tabsize","RPAD","shown","MESSAGE","loadWorker","onInitial","initWorker","getCompileFlags","buildMode","buildVersion","isProduction","ctor","superCtor","super_","writable","TempCtor","fill","readUInt8","sanctuary_1","__rest","MyWorker","Init_Prep_1","Init_Loader_1","Output_1","Controls_1","readyForUpdate","tick","frameTs"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 112);\n","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\"\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nexport function fromValues(m00, m01, m10, m11) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    let a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\n  // Calculate the determinant\n  let det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] =  a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] =  a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  let a0 = a[0];\n  out[0] =  a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] =  a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2]/a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nexport function fromValues(a, b, c, d, tx, ty) {\n  let out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nexport function invert(out, a) {\n  let aa = a[0], ab = a[1], ac = a[2], ad = a[3];\n  let atx = a[4], aty = a[5];\n\n  let det = aa * ad - ab * ac;\n  if(!det){\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function multiply(out, a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function rotate(out, a, rad) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  out[0] = a0 *  c + a2 * s;\n  out[1] = a1 *  c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nexport function scale(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nexport function translate(out, a, v) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let v0 = v[0], v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  let out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b01 = a22 * a11 - a12 * a21;\n  let b11 = -a22 * a10 + a12 * a20;\n  let b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  out[0] = (a11 * a22 - a12 * a21);\n  out[1] = (a02 * a21 - a01 * a22);\n  out[2] = (a01 * a12 - a02 * a11);\n  out[3] = (a12 * a20 - a10 * a22);\n  out[4] = (a00 * a22 - a02 * a20);\n  out[5] = (a02 * a10 - a00 * a12);\n  out[6] = (a10 * a21 - a11 * a20);\n  out[7] = (a01 * a20 - a00 * a21);\n  out[8] = (a00 * a11 - a01 * a10);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2];\n  let a10 = a[3], a11 = a[4], a12 = a[5];\n  let a20 = a[6], a21 = a[7], a22 = a[8];\n\n  let b00 = b[0], b01 = b[1], b02 = b[2];\n  let b10 = b[3], b11 = b[4], b12 = b[5];\n  let b20 = b[6], b21 = b[7], b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n    x = v[0], y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n  let a00 = a[0], a01 = a[1], a02 = a[2],\n    a10 = a[3], a11 = a[4], a12 = a[5],\n    a20 = a[6], a21 = a[7], a22 = a[8],\n\n    s = Math.sin(rad),\n    c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function fromRotation(out, rad) {\n  let s = Math.sin(rad), c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nexport function normalFromMat4(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' +\n          a[3] + ', ' + a[4] + ', ' + a[5] + ', ' +\n          a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] &&\n         a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&\n         a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  let out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    let a01 = a[1], a02 = a[2], a03 = a[3];\n    let a12 = a[6], a13 = a[7];\n    let a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function adjoint(out, a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n  out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n  out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n  out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n  out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n  out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  let b00 = a00 * a11 - a01 * a10;\n  let b01 = a00 * a12 - a02 * a10;\n  let b02 = a00 * a13 - a03 * a10;\n  let b03 = a01 * a12 - a02 * a11;\n  let b04 = a01 * a13 - a03 * a11;\n  let b05 = a02 * a13 - a03 * a12;\n  let b06 = a20 * a31 - a21 * a30;\n  let b07 = a20 * a32 - a22 * a30;\n  let b08 = a20 * a33 - a23 * a30;\n  let b09 = a21 * a32 - a22 * a31;\n  let b10 = a21 * a33 - a23 * a31;\n  let b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n  let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n  let a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n  let a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n  let a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  let b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n  out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n  out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n  b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n  out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n  out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n  out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n  out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n    out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n    out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n  let x = v[0], y = v[1], z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n  let a00, a01, a02, a03;\n  let a10, a11, a12, a13;\n  let a20, a21, a22, a23;\n  let b00, b01, b02;\n  let b10, b11, b12;\n  let b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n  a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n  a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateX(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[0]  = a[0];\n    out[1]  = a[1];\n    out[2]  = a[2];\n    out[3]  = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateY(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a20 = a[8];\n  let a21 = a[9];\n  let a22 = a[10];\n  let a23 = a[11];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged rows\n    out[4]  = a[4];\n    out[5]  = a[5];\n    out[6]  = a[6];\n    out[7]  = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function rotateZ(out, a, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n  let a00 = a[0];\n  let a01 = a[1];\n  let a02 = a[2];\n  let a03 = a[3];\n  let a10 = a[4];\n  let a11 = a[5];\n  let a12 = a[6];\n  let a13 = a[7];\n\n  if (a !== out) { // If the source and destination differ, copy the unchanged last row\n    out[8]  = a[8];\n    out[9]  = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function fromRotation(out, rad, axis) {\n  let x = axis[0], y = axis[1], z = axis[2];\n  let len = Math.sqrt(x * x + y * y + z * z);\n  let s, c, t;\n\n  if (len < glMatrix.EPSILON) { return null; }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromXRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = 1;\n  out[1]  = 0;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromYRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = 0;\n  out[2]  = -s;\n  out[3]  = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nexport function fromZRotation(out, rad) {\n  let s = Math.sin(rad);\n  let c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0]  = c;\n  out[1]  = s;\n  out[2]  = 0;\n  out[3]  = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {quat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\nexport function fromQuat2(out, a) {\n  let translation = new glMatrix.ARRAY_TYPE(3);\n  let bx = -a[0], by = -a[1], bz = -a[2], bw = a[3],\n  ax = a[4], ay = a[5], az = a[6], aw = a[7];\n\n  let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n  //Only scale if it makes sense\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n  let m11 = mat[0];\n  let m12 = mat[1];\n  let m13 = mat[2];\n  let m21 = mat[4];\n  let m22 = mat[5];\n  let m23 = mat[6];\n  let m31 = mat[8];\n  let m32 = mat[9];\n  let m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport function getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  let trace = mat[0] + mat[5] + mat[10];\n  let S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if ((mat[0] > mat[5]) && (mat[0] > mat[10])) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let xy = x * y2;\n  let xz = x * z2;\n  let yy = y * y2;\n  let yz = y * z2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  let sx = s[0];\n  let sy = s[1];\n  let sz = s[2];\n\n  let ox = o[0];\n  let oy = o[1];\n  let oz = o[2];\n\n  let out0 = (1 - (yy + zz)) * sx;\n  let out1 = (xy + wz) * sx;\n  let out2 = (xz - wy) * sx;\n  let out4 = (xy - wz) * sy;\n  let out5 = (1 - (xx + zz)) * sy;\n  let out6 = (yz + wx) * sy;\n  let out8 = (xz + wy) * sz;\n  let out9 = (yz - wx) * sz;\n  let out10 = (1 - (xx + yy)) * sz;\n\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n  let x = q[0], y = q[1], z = q[2], w = q[3];\n  let x2 = x + x;\n  let y2 = y + y;\n  let z2 = z + z;\n\n  let xx = x * x2;\n  let yx = y * x2;\n  let yy = y * y2;\n  let zx = z * x2;\n  let zy = z * y2;\n  let zz = z * z2;\n  let wx = w * x2;\n  let wy = w * y2;\n  let wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function frustum(out, left, right, bottom, top, near, far) {\n  let rl = 1 / (right - left);\n  let tb = 1 / (top - bottom);\n  let nf = 1 / (near - far);\n  out[0] = (near * 2) * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = (near * 2) * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (far * near * 2) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n  let f = 1.0 / Math.tan(fovy / 2);\n  let nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = (2 * far * near) * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  let upTan = Math.tan(fov.upDegrees * Math.PI/180.0);\n  let downTan = Math.tan(fov.downDegrees * Math.PI/180.0);\n  let leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0);\n  let rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0);\n  let xScale = 2.0 / (leftTan + rightTan);\n  let yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = ((upTan - downTan) * yScale * 0.5);\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = (far * near) / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n  let lr = 1 / (left - right);\n  let bt = 1 / (bottom - top);\n  let nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function lookAt(out, eye, center, up) {\n  let x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  let eyex = eye[0];\n  let eyey = eye[1];\n  let eyez = eye[2];\n  let upx = up[0];\n  let upy = up[1];\n  let upz = up[2];\n  let centerx = center[0];\n  let centery = center[1];\n  let centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n      Math.abs(eyey - centery) < glMatrix.EPSILON &&\n      Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n  let eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  let z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  let len = z0*z0 + z1*z1 + z2*z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  let x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  len = x0*x0 + x1*x1 + x2*x2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nexport function str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n          a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n          a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +\n          a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nexport function frob(a) {\n  return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  out[4] = a[4] + (b[4] * scale);\n  out[5] = a[5] + (b[5] * scale);\n  out[6] = a[6] + (b[6] * scale);\n  out[7] = a[7] + (b[7] * scale);\n  out[8] = a[8] + (b[8] * scale);\n  out[9] = a[9] + (b[9] * scale);\n  out[10] = a[10] + (b[10] * scale);\n  out[11] = a[11] + (b[11] * scale);\n  out[12] = a[12] + (b[12] * scale);\n  out[13] = a[13] + (b[13] * scale);\n  out[14] = a[14] + (b[14] * scale);\n  out[15] = a[15] + (b[15] * scale);\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n         a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] &&\n         a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&\n         a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3];\n  let a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7];\n  let a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11];\n  let a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];\n\n  let b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3];\n  let b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7];\n  let b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11];\n  let b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];\n\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n          Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n          Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n          Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n          Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\n          Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\n          Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\n          Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\n          Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\n          Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\n          Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\n          Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\n          Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nexport const sub = subtract;\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nexport function fromValues(x, y, z) {\n  let out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return Math.sqrt(x*x + y*y + z*z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  return x*x + y*y + z*z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let len = x*x + y*y + z*z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2];\n  let bx = b[0], by = b[1], bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function hermite(out, a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\nexport function bezier(out, a, b, c, d, t) {\n  let inverseFactor = 1 - t;\n  let inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  let factorTimes2 = t * t;\n  let factor1 = inverseFactorTimesTwo * inverseFactor;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * inverseFactor;\n  let factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n\n  let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  let z = (glMatrix.RANDOM() * 2.0) - 1.0;\n  let zScale = Math.sqrt(1.0-z*z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n  let x = a[0], y = a[1], z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n    let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n    let x = a[0], y = a[1], z = a[2];\n    // var qvec = [qx, qy, qz];\n    // var uv = vec3.cross([], qvec, a);\n    let uvx = qy * z - qz * y,\n        uvy = qz * x - qx * z,\n        uvz = qx * y - qy * x;\n    // var uuv = vec3.cross([], qvec, uv);\n    let uuvx = qy * uvz - qz * uvy,\n        uuvy = qz * uvx - qx * uvz,\n        uuvz = qx * uvy - qy * uvx;\n    // vec3.scale(uv, uv, 2 * w);\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n    // vec3.scale(uuv, uuv, 2);\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n    // return vec3.add(out, a, vec3.add(out, uv, uuv));\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateX(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateY(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nexport function rotateZ(out, a, b, c){\n  let p = [], r=[];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let tempA = fromValues(a[0], a[1], a[2]);\n  let tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  let cosine = dot(tempA, tempB);\n\n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2];\n  let b0 = b[0], b1 = b[1], b2 = b[2];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 3;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nexport function fromValues(x, y, z, w) {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  out[2] = a[2] + (b[2] * scale);\n  out[3] = a[3] + (b[3] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  let x = b[0] - a[0];\n  let y = b[1] - a[1];\n  let z = b[2] - a[2];\n  let w = b[3] - a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return Math.sqrt(x*x + y*y + z*z + w*w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  return x*x + y*y + z*z + w*w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n  let x = a[0];\n  let y = a[1];\n  let z = a[2];\n  let w = a[3];\n  let len = x*x + y*y + z*z + w*w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n  let ax = a[0];\n  let ay = a[1];\n  let az = a[2];\n  let aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nexport function random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n  var v1, v2, v3, v4;\n  var s1, s2;\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0], y = a[1], z = a[2], w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nexport function transformQuat(out, a, q) {\n  let x = a[0], y = a[1], z = a[2];\n  let qx = q[0], qy = q[1], qz = q[2], qw = q[3];\n\n  // calculate quat * vec\n  let ix = qw * x + qy * z - qz * y;\n  let iy = qw * y + qz * x - qx * z;\n  let iz = qw * z + qx * y - qy * x;\n  let iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n          Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n          Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 4;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n    }\n\n    return a;\n  };\n})();\n","import * as glMatrix from \"./common.js\"\nimport * as mat3 from \"./mat3.js\"\nimport * as vec3 from \"./vec3.js\"\nimport * as vec4 from \"./vec4.js\"\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nexport function getAxisAngle(out_axis, q) {\n  let rad = Math.acos(q[3]) * 2.0;\n  let s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let by = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bz = Math.sin(rad), bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nexport function calculateW(out, a) {\n  let x = a[0], y = a[1], z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  let ax = a[0], ay = a[1], az = a[2], aw = a[3];\n  let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n  let omega, cosom, sinom, scale0, scale1;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if ( cosom < 0.0 ) {\n    cosom = -cosom;\n    bx = - bx;\n    by = - by;\n    bz = - bz;\n    bw = - bw;\n  }\n  // calculate coefficients\n  if ( (1.0 - cosom) > 0.000001 ) {\n    // standard case (slerp)\n    omega  = Math.acos(cosom);\n    sinom  = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n  let a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n  let dot = a0*a0 + a1*a1 + a2*a2 + a3*a3;\n  let invDot = dot ? 1.0/dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0*invDot;\n  out[1] = -a1*invDot;\n  out[2] = -a2*invDot;\n  out[3] = a3*invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  let fTrace = m[0] + m[4] + m[8];\n  let fRoot;\n\n  if ( fTrace > 0.0 ) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5/fRoot;  // 1/(4w)\n    out[0] = (m[5]-m[7])*fRoot;\n    out[1] = (m[6]-m[2])*fRoot;\n    out[2] = (m[1]-m[3])*fRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n    if ( m[4] > m[0] )\n      i = 1;\n    if ( m[8] > m[i*3+i] )\n      i = 2;\n    let j = (i+1)%3;\n    let k = (i+2)%3;\n\n    fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n    out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n    out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, x, y, z) {\n    let halfToRad = 0.5 * Math.PI / 180.0;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n\n    let sx = Math.sin(x);\n    let cx = Math.cos(x);\n    let sy = Math.sin(y);\n    let cy = Math.cos(y);\n    let sz = Math.sin(z);\n    let cz = Math.cos(z);\n\n    out[0] = sx * cy * cz - cx * sy * sz;\n    out[1] = cx * sy * cz + sx * cy * sz;\n    out[2] = cx * cy * sz - sx * sy * cz;\n    out[3] = cx * cy * cz + sx * sy * sz;\n\n    return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nexport const clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nexport const fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport const equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nexport const rotationTo = (function() {\n  let tmpvec3 = vec3.create();\n  let xUnitVec3 = vec3.fromValues(1,0,0);\n  let yUnitVec3 = vec3.fromValues(0,1,0);\n\n  return function(out, a, b) {\n    let dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001)\n        vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n})();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\nexport const sqlerp = (function () {\n  let temp1 = create();\n  let temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}());\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nexport const setAxes = (function() {\n  let matr = mat3.create();\n\n  return function(out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n})();\n","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\nexport function create() {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = 0;\n  dq[1] = 0;\n  dq[2] = 0;\n  dq[3] = 1;\n  dq[4] = 0;\n  dq[5] = 0;\n  dq[6] = 0;\n  dq[7] = 0;\n  return dq;\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function clone(a) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  let dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  let ax = x2 * 0.5,\n    ay = y2 * 0.5,\n    az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q quaternion\n * @param {vec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotationTranslation(out, q, t) {\n  let ax = t[0] * 0.5,\n    ay = t[1] * 0.5,\n    az = t[2] * 0.5,\n    bx = q[0],\n    by = q[1],\n    bz = q[2],\n    bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Creates a dual quat from a translation\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {vec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {quat2} dual quaternion receiving operation result\n * @param {quat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {mat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  let outer = quat.create();\n  mat4.getRotation(outer, a);\n  let t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} real part\n */\nexport const getReal = quat.copy;\n\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {quat2} a Dual Quaternion\n * @return {quat} dual part\n */\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\nexport const setReal = quat.copy;\n\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {quat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\nexport function getTranslation(out, a) {\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to translate\n * @param {vec3} v vector to translate by\n * @returns {quat2} out\n */\nexport function translate(out, a, v) {\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3],\n    bx1 = v[0] * 0.5,\n    by1 = v[1] * 0.5,\n    bz1 = v[2] * 0.5,\n    ax2 = a[4],\n    ay2 = a[5],\n    az2 = a[6],\n    aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateX(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateY(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\nexport function rotateZ(out, a, rad) {\n  let bx = -a[0],\n    by = -a[1],\n    bz = -a[2],\n    bw = a[3],\n    ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7],\n    ax1 = ax * bw + aw * bx + ay * bz - az * by,\n    ay1 = ay * bw + aw * by + az * bx - ax * bz,\n    az1 = az * bw + aw * bz + ax * by - ay * bx,\n    aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {quat} q quaternion to rotate by\n * @returns {quat2} out\n */\nexport function rotateByQuatAppend(out, a, q) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3];\n\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat} q quaternion to rotate by\n * @param {quat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\nexport function rotateByQuatPrepend(out, q, a) {\n  let qx = q[0],\n    qy = q[1],\n    qz = q[2],\n    qw = q[3],\n    bx = a[0],\n    by = a[1],\n    bz = a[2],\n    bw = a[3];\n\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the dual quaternion to rotate\n * @param {vec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n  let axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n  rad = rad * 0.5;\n  let s = Math.sin(rad);\n  let bx = s * axis[0] / axisLength;\n  let by = s * axis[1] / axisLength;\n  let bz = s * axis[2] / axisLength;\n  let bw = Math.cos(rad);\n\n  let ax1 = a[0],\n    ay1 = a[1],\n    az1 = a[2],\n    aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n\n  let ax = a[4],\n    ay = a[5],\n    az = a[6],\n    aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return out;\n}\n\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n * @function\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {quat2} out\n */\nexport function multiply(out, a, b) {\n  let ax0 = a[0],\n    ay0 = a[1],\n    az0 = a[2],\n    aw0 = a[3],\n    bx1 = b[4],\n    by1 = b[5],\n    bz1 = b[6],\n    bw1 = b[7],\n    ax1 = a[4],\n    ay1 = a[5],\n    az1 = a[6],\n    aw1 = a[7],\n    bx0 = b[0],\n    by0 = b[1],\n    bz0 = b[2],\n    bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = quat.dot;\n\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {quat2} a the first operand\n * @param {quat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\nexport function lerp(out, a, b, t) {\n  let mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\nexport function invert(out, a) {\n  let sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {quat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n\n/**\n * Calculates the length of a dual quat\n *\n * @param {quat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\nexport const length = quat.length;\n\n/**\n * Alias for {@link quat2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {quat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nexport const squaredLength = quat.squaredLength;\n\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {quat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\nexport function normalize(out, a) {\n  let magnitude = squaredLength(a);\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    out[0] = a[0] / magnitude;\n    out[1] = a[1] / magnitude;\n    out[2] = a[2] / magnitude;\n    out[3] = a[3] / magnitude;\n    out[4] = a[4] / magnitude;\n    out[5] = a[5] / magnitude;\n    out[6] = a[6] / magnitude;\n    out[7] = a[7] / magnitude;\n  }\n  return out;\n}\n\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {quat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\nexport function str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat2} a the first dual quaternion.\n * @param {quat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] &&\n    a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {quat2} a the first dual quat.\n * @param {quat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0],\n    a1 = a[1],\n    a2 = a[2],\n    a3 = a[3],\n    a4 = a[4],\n    a5 = a[5],\n    a6 = a[6],\n    a7 = a[7];\n  let b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n    Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n    Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n    Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n    Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n    Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n    Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n    Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('sanctuary-type-classes'), require('inspect-f'), require('sanctuary-type-identifiers'), require('denque'), require('concurrify')) :\n\ttypeof define === 'function' && define.amd ? define(['sanctuary-type-classes', 'inspect-f', 'sanctuary-type-identifiers', 'denque', 'concurrify'], factory) :\n\t(global.Fluture = factory(global.sanctuaryTypeClasses,global.inspectf,global.sanctuaryTypeIdentifiers,global.Denque,global.concurrify));\n}(this, (function (Z,inspectf,type,Denque,concurrify) { 'use strict';\n\nZ = Z && Z.hasOwnProperty('default') ? Z['default'] : Z;\ninspectf = inspectf && inspectf.hasOwnProperty('default') ? inspectf['default'] : inspectf;\ntype = type && type.hasOwnProperty('default') ? type['default'] : type;\nDenque = Denque && Denque.hasOwnProperty('default') ? Denque['default'] : Denque;\nconcurrify = concurrify && concurrify.hasOwnProperty('default') ? concurrify['default'] : concurrify;\n\n/* istanbul ignore file: environment-specific */\n\n/* eslint-disable no-undef */\nconst scope = typeof self === 'object' ? self :\n                     typeof global === 'object' ? global :\n                     typeof window === 'object' ? window :\n                     {};\n/* eslint-enable no-undef */\n\nconst setImmediate = typeof scope.setImmediate === 'function' ?\n                            scope.setImmediate :\n                            function setImmediate(f, x){ return setTimeout(f, 0, x) };\n\nfunction noop(){}\nfunction moop(){ return this }\nvar show = Z.toString;\nfunction padf(sf, s){ return s.replace(/^/gm, sf).replace(sf, '') }\nfunction showf(f){ return padf('  ', inspectf(2, f)) }\n\nfunction mapArray(xs, f){\n  var l = xs.length, ys = new Array(l);\n  for(var i = 0; i < l; i++) ys[i] = f(xs[i], i, xs);\n  return ys;\n}\n\nfunction partial1(f, a){\n  return function bound1(b, c, d){\n    switch(arguments.length){\n      case 1: return f(a, b);\n      case 2: return f(a, b, c);\n      default: return f(a, b, c, d);\n    }\n  };\n}\n\nfunction partial2(f, a, b){\n  return function bound2(c, d){\n    return arguments.length === 1 ? f(a, b, c) : f(a, b, c, d);\n  };\n}\n\nfunction partial3(f, a, b, c){\n  return function bound3(d){\n    return f(a, b, c, d);\n  };\n}\n\nfunction immediately(f){\n  return function immediate(x){ return setImmediate(f, x) };\n}\n\nvar FL = {\n  map: 'fantasy-land/map',\n  bimap: 'fantasy-land/bimap',\n  chain: 'fantasy-land/chain',\n  chainRec: 'fantasy-land/chainRec',\n  ap: 'fantasy-land/ap',\n  of: 'fantasy-land/of',\n  zero: 'fantasy-land/zero'\n};\n\nvar ordinal = ['first', 'second', 'third', 'fourth', 'fifth'];\n\nvar namespace = 'fluture';\nvar name = 'Future';\nvar version = 3;\n\nvar $$type = namespace + '/' + name + '@' + version;\n\nfunction error(message){\n  throw new Error(message);\n}\n\nfunction typeError(message){\n  throw new TypeError(message);\n}\n\nfunction invalidArgument(it, at, expected, actual){\n  typeError(\n    it + ' expects its ' + ordinal[at] + ' argument to ' + expected + '\\n  Actual: ' + show(actual)\n  );\n}\n\nfunction invalidContext(it, actual){\n  typeError(\n    it + ' was invoked outside the context of a Future. You might want to use'\n  + ' a dispatcher instead\\n  Called on: ' + (show(actual))\n  );\n}\n\nfunction invalidNamespace(m, x){\n  return (\n    'The Future was not created by ' + namespace + '. '\n  + 'Make sure you transform other Futures to ' + namespace + ' Futures. '\n  + 'Got ' + (x ? ('a Future from ' + x) : 'an unscoped Future') + '.'\n  + '\\n  See: https://github.com/fluture-js/Fluture#casting-futures'\n  );\n}\n\nfunction invalidVersion(m, x){\n  return (\n    'The Future was created by ' + (x < version ? 'an older' : 'a newer')\n  + ' version of ' + namespace + '. '\n  + 'This means that one of the sources which creates Futures is outdated. '\n  + 'Update this source, or transform its created Futures to be compatible.'\n  + '\\n  See: https://github.com/fluture-js/Fluture#casting-futures'\n  );\n}\n\nfunction invalidFuture(it, at, m, s){\n  var id = type.parse(type(m));\n  var info = id.name === name ? '\\n' + (\n    id.namespace !== namespace ? invalidNamespace(m, id.namespace)\n  : id.version !== version ? invalidVersion(m, id.version)\n  : 'Nothing seems wrong. Contact the Fluture maintainers.') : '';\n  typeError(\n    it + ' expects ' + (ordinal[at] ? 'its ' + ordinal[at] + ' argument to be a valid Future' : at)\n  + '.' + info + '\\n  Actual: ' + (show(m)) + ' :: ' + (id.name) + (s || '')\n  );\n}\n\nfunction isFunction(f){\n  return typeof f === 'function';\n}\n\nfunction isThenable(m){\n  return m instanceof Promise || Boolean(m) && isFunction(m.then);\n}\n\nfunction isBoolean(f){\n  return typeof f === 'boolean';\n}\n\nfunction isNumber(f){\n  return typeof f === 'number';\n}\n\nfunction isUnsigned(n){\n  return (n === Infinity || isNumber(n) && n > 0 && n % 1 === 0);\n}\n\nfunction isObject(o){\n  return o !== null && typeof o === 'object';\n}\n\nfunction isIterator(i){\n  return isObject(i) && isFunction(i.next);\n}\n\nfunction isArray(x){\n  return Array.isArray(x);\n}\n\n/*eslint no-cond-assign:0, no-constant-condition:0 */\n\nfunction interpreter(rej, res){\n\n  //This is the primary queue of actions. All actions in here will be \"cold\",\n  //meaning they haven't had the chance yet to run concurrent computations.\n  var cold = new Denque(this._actions.size);\n\n  //This is the secondary queue of actions. All actions in here will be \"hot\",\n  //meaning they have already had a chance to run a concurrent computation.\n  var queue = new Denque(this._actions.size);\n\n  //These combined variables define our current state.\n  // future  = the future we are currently forking\n  // action  = the action to be informed when the future settles\n  // cancel  = the cancel function of the current future\n  // settled = a boolean indicating whether a new tick should start\n  // async   = a boolean indicating whether we are awaiting a result asynchronously\n  var future, action, cancel = noop, settled, async = true, it;\n\n  //This function is called with a future to use in the next tick.\n  //Here we \"flatten\" the actions of another Sequence into our own actions,\n  //this is the magic that allows for infinitely stack safe recursion because\n  //actions like ChainAction will return a new Sequence.\n  //If we settled asynchronously, we call drain() directly to run the next tick.\n  function settle(m){\n    settled = true;\n    future = m;\n\n    if(future._spawn){\n      var tail = future._actions;\n\n      while(!tail.isEmpty){\n        cold.unshift(tail.head);\n        tail = tail.tail;\n      }\n\n      future = future._spawn;\n    }\n\n    if(async) drain();\n  }\n\n  //This function serves as a rejection handler for our current future.\n  //It will tell the current action that the future rejected, and it will\n  //settle the current tick with the action's answer to that.\n  function rejected(x){\n    settle(action.rejected(x));\n  }\n\n  //This function serves as a resolution handler for our current future.\n  //It will tell the current action that the future resolved, and it will\n  //settle the current tick with the action's answer to that.\n  function resolved(x){\n    settle(action.resolved(x));\n  }\n\n  //This function is passed into actions when they are \"warmed up\".\n  //If the action decides that it has its result, without the need to await\n  //anything else, then it can call this function to force \"early termination\".\n  //When early termination occurs, all actions which were queued prior to the\n  //terminator will be skipped. If they were already hot, they will also receive\n  //a cancel signal so they can cancel their own concurrent computations, as\n  //their results are no longer needed.\n  function early(m, terminator){\n    cancel();\n    cold.clear();\n\n    if(async && action !== terminator){\n      action.cancel();\n      while((it = queue.shift()) && it !== terminator) it.cancel();\n    }\n\n    settle(m);\n  }\n\n  //This function serves to kickstart concurrent computations.\n  //Takes all actions from the cold queue *back-to-front*, and calls run() on\n  //each of them, passing them the \"early\" function. If any of them settles (by\n  //calling early()), we abort. After warming up all actions in the cold queue,\n  //we warm up the current action as well.\n  function warmupActions(){\n    while(it = cold.pop()){\n      it = it.run(early);\n      if(settled) return;\n      queue.unshift(it);\n    }\n\n    action = action.run(early);\n  }\n\n  //This function represents our main execution loop.\n  //When we refer to a \"tick\", we mean the execution of the body inside the\n  //primary while-loop of this function.\n  //Every tick follows the following algorithm:\n  // 1. We try to take an action from the cold queue, if we fail, go to step 2.\n  //      1a. We fork the future.\n  //      1b. We warmupActions() if the we haven't settled yet.\n  // 2. We try to take an action from the hot queue, if we fail, go to step 3.\n  //      2a. We fork the Future, if settles, we continue to the next tick.\n  // 3. If we couldn't take actions from either queues, we fork the Future into\n  //    the user provided continuations. This is the end of the interpretation.\n  // 4. If we did take an action from one of queues, but none of the steps\n  //    caused a settle(), it means we are asynchronously waiting for something\n  //    to settle and start the next tick, so we return from the function.\n  function drain(){\n    async = false;\n\n    while(true){\n      settled = false;\n      if(action = cold.shift()){\n        cancel = future._fork(rejected, resolved);\n        if(!settled) warmupActions();\n      }else if(action = queue.shift()){\n        cancel = future._fork(rejected, resolved);\n      }else break;\n      if(settled) continue;\n      async = true;\n      return;\n    }\n\n    cancel = future._fork(rej, res);\n  }\n\n  //Start the execution loop.\n  settle(this);\n\n  //Return a cancellation function. It will cancel the current Future, the\n  //current action, and all queued hot actions.\n  return function Sequence$cancel(){\n    cancel();\n    action && action.cancel();\n    while(it = queue.shift()) it.cancel();\n  };\n\n}\n\nvar empty = ({isEmpty: true, size: 0, head: null, tail: null});\n\nfunction cons(head, tail){\n  return {isEmpty: false, size: tail.size + 1, head: head, tail: tail};\n}\n\nfunction throwRejection(x){\n  error('Future#value was called on a rejected Future\\n  Actual: Future.reject(' + show(x) + ')');\n}\n\nfunction Future(computation){\n  if(!isFunction(computation)) invalidArgument('Future', 0, 'be a Function', computation);\n  return new Computation(computation);\n}\n\nfunction isFuture(x){\n  return x instanceof Future || type(x) === $$type;\n}\n\nFuture['@@type'] = $$type;\n\nFuture.prototype[FL.ap] = function Future$FL$ap(other){\n  return other._ap(this);\n};\n\nFuture.prototype[FL.map] = function Future$FL$map(mapper){\n  return this._map(mapper);\n};\n\nFuture.prototype[FL.bimap] = function Future$FL$bimap(lmapper, rmapper){\n  return this._bimap(lmapper, rmapper);\n};\n\nFuture.prototype[FL.chain] = function Future$FL$chain(mapper){\n  return this._chain(mapper);\n};\n\nFuture.prototype.ap = function Future$ap(other){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  if(!isFuture(other)) invalidFuture('Future#ap', 0, other);\n  return this._ap(other);\n};\n\nFuture.prototype.map = function Future$map(mapper){\n  if(!isFuture(this)) invalidContext('Future#map', this);\n  if(!isFunction(mapper)) invalidArgument('Future#map', 0, 'to be a Function', mapper);\n  return this._map(mapper);\n};\n\nFuture.prototype.bimap = function Future$bimap(lmapper, rmapper){\n  if(!isFuture(this)) invalidContext('Future#bimap', this);\n  if(!isFunction(lmapper)) invalidArgument('Future#bimap', 0, 'to be a Function', lmapper);\n  if(!isFunction(rmapper)) invalidArgument('Future#bimap', 1, 'to be a Function', rmapper);\n  return this._bimap(lmapper, rmapper);\n};\n\nFuture.prototype.chain = function Future$chain(mapper){\n  if(!isFuture(this)) invalidContext('Future#chain', this);\n  if(!isFunction(mapper)) invalidArgument('Future#chain', 0, 'to be a Function', mapper);\n  return this._chain(mapper);\n};\n\nFuture.prototype.mapRej = function Future$mapRej(mapper){\n  if(!isFuture(this)) invalidContext('Future#mapRej', this);\n  if(!isFunction(mapper)) invalidArgument('Future#mapRej', 0, 'to be a Function', mapper);\n  return this._mapRej(mapper);\n};\n\nFuture.prototype.chainRej = function Future$chainRej(mapper){\n  if(!isFuture(this)) invalidContext('Future#chainRej', this);\n  if(!isFunction(mapper)) invalidArgument('Future#chainRej', 0, 'to be a Function', mapper);\n  return this._chainRej(mapper);\n};\n\nFuture.prototype.race = function Future$race(other){\n  if(!isFuture(this)) invalidContext('Future#race', this);\n  if(!isFuture(other)) invalidFuture('Future#race', 0, other);\n  return this._race(other);\n};\n\nFuture.prototype.both = function Future$both(other){\n  if(!isFuture(this)) invalidContext('Future#both', this);\n  if(!isFuture(other)) invalidFuture('Future#both', 0, other);\n  return this._both(other);\n};\n\nFuture.prototype.and = function Future$and(other){\n  if(!isFuture(this)) invalidContext('Future#and', this);\n  if(!isFuture(other)) invalidFuture('Future#and', 0, other);\n  return this._and(other);\n};\n\nFuture.prototype.or = function Future$or(other){\n  if(!isFuture(this)) invalidContext('Future#or', this);\n  if(!isFuture(other)) invalidFuture('Future#or', 0, other);\n  return this._or(other);\n};\n\nFuture.prototype.swap = function Future$swap(){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  return this._swap();\n};\n\nFuture.prototype.fold = function Future$fold(lmapper, rmapper){\n  if(!isFuture(this)) invalidContext('Future#ap', this);\n  if(!isFunction(lmapper)) invalidArgument('Future#fold', 0, 'to be a Function', lmapper);\n  if(!isFunction(rmapper)) invalidArgument('Future#fold', 1, 'to be a Function', rmapper);\n  return this._fold(lmapper, rmapper);\n};\n\nFuture.prototype.finally = function Future$finally(other){\n  if(!isFuture(this)) invalidContext('Future#finally', this);\n  if(!isFuture(other)) invalidFuture('Future#finally', 0, other);\n  return this._finally(other);\n};\n\nFuture.prototype.lastly = function Future$lastly(other){\n  if(!isFuture(this)) invalidContext('Future#lastly', this);\n  if(!isFuture(other)) invalidFuture('Future#lastly', 0, other);\n  return this._finally(other);\n};\n\nFuture.prototype.fork = function Future$fork(rej, res){\n  if(!isFuture(this)) invalidContext('Future#fork', this);\n  if(!isFunction(rej)) invalidArgument('Future#fork', 0, 'to be a Function', rej);\n  if(!isFunction(res)) invalidArgument('Future#fork', 0, 'to be a Function', res);\n  return this._fork(rej, res);\n};\n\nFuture.prototype.value = function Future$value(res){\n  if(!isFuture(this)) invalidContext('Future#value', this);\n  if(!isFunction(res)) invalidArgument('Future#value', 0, 'to be a Function', res);\n  return this._fork(throwRejection, res);\n};\n\nFuture.prototype.done = function Future$done(callback){\n  if(!isFuture(this)) invalidContext('Future#done', this);\n  if(!isFunction(callback)) invalidArgument('Future#done', 0, 'to be a Function', callback);\n  return this._fork(function Future$done$rej(x){ callback(x); },\n                    function Future$done$res(x){ callback(null, x); });\n};\n\nFuture.prototype.promise = function Future$promise(){\n  var _this = this;\n  return new Promise(function Future$promise$computation(res, rej){\n    _this._fork(rej, res);\n  });\n};\n\nFuture.prototype.isRejected = function Future$isRejected(){\n  return false;\n};\n\nFuture.prototype.isResolved = function Future$isResolved(){\n  return false;\n};\n\nFuture.prototype.isSettled = function Future$isSettled(){\n  return this.isRejected() || this.isResolved();\n};\n\nFuture.prototype.extractLeft = function Future$extractLeft(){\n  return [];\n};\n\nFuture.prototype.extractRight = function Future$extractRight(){\n  return [];\n};\n\nvar Core = Object.create(Future.prototype);\n\nCore._ap = function Core$ap(other){\n  return new Sequence(this)._ap(other);\n};\n\nCore._map = function Core$map(mapper){\n  return new Sequence(this)._map(mapper);\n};\n\nCore._bimap = function Core$bimap(lmapper, rmapper){\n  return new Sequence(this)._bimap(lmapper, rmapper);\n};\n\nCore._chain = function Core$chain(mapper){\n  return new Sequence(this)._chain(mapper);\n};\n\nCore._mapRej = function Core$mapRej(mapper){\n  return new Sequence(this)._mapRej(mapper);\n};\n\nCore._chainRej = function Core$chainRej(mapper){\n  return new Sequence(this)._chainRej(mapper);\n};\n\nCore._race = function Core$race(other){\n  return new Sequence(this)._race(other);\n};\n\nCore._both = function Core$both(other){\n  return new Sequence(this)._both(other);\n};\n\nCore._and = function Core$and(other){\n  return new Sequence(this)._and(other);\n};\n\nCore._or = function Core$or(other){\n  return new Sequence(this)._or(other);\n};\n\nCore._swap = function Core$swap(){\n  return new Sequence(this)._swap();\n};\n\nCore._fold = function Core$fold(lmapper, rmapper){\n  return new Sequence(this)._fold(lmapper, rmapper);\n};\n\nCore._finally = function Core$finally(other){\n  return new Sequence(this)._finally(other);\n};\n\nfunction check$fork(f, c){\n  if(!(f === undefined || (isFunction(f) && f.length === 0))) typeError(\n    'Future expected its computation to return a nullary function or void'\n    + '\\n  Actual: ' + show(f) + '\\n  From calling: ' + showf(c)\n  );\n}\n\nfunction Computation(computation){\n  this._computation = computation;\n}\n\nComputation.prototype = Object.create(Core);\n\nComputation.prototype._fork = function Computation$_fork(rej, res){\n  var open = true;\n  var cancel = this._computation(function Computation$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }, function Computation$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  });\n  check$fork(cancel, this._computation);\n\n  return function Computation$cancel(){\n    if(open){\n      open = false;\n      cancel && cancel();\n    }\n  };\n};\n\nComputation.prototype.toString = function Computation$toString(){\n  return 'Future(' + showf(this._computation) + ')';\n};\n\nfunction Rejected(value){\n  this._value = value;\n}\n\nRejected.prototype = Object.create(Core);\n\nRejected.prototype._ap = moop;\nRejected.prototype._map = moop;\nRejected.prototype._chain = moop;\nRejected.prototype._race = moop;\nRejected.prototype._both = moop;\nRejected.prototype._and = moop;\n\nRejected.prototype._or = function Rejected$or(other){\n  return other;\n};\n\nRejected.prototype._finally = function Rejected$finally(other){\n  return other._and(this);\n};\n\nRejected.prototype._swap = function Rejected$swap(){\n  return new Resolved(this._value);\n};\n\nRejected.prototype._fork = function Rejected$_fork(rej){\n  rej(this._value);\n  return noop;\n};\n\nRejected.prototype.isRejected = function Rejected$isRejected(){\n  return true;\n};\n\nRejected.prototype.extractLeft = function Rejected$extractLeft(){\n  return [this._value];\n};\n\nRejected.prototype.toString = function Rejected$toString(){\n  return 'Future.reject(' + show(this._value) + ')';\n};\n\nfunction reject(x){\n  return new Rejected(x);\n}\n\nfunction Resolved(value){\n  this._value = value;\n}\n\nResolved.prototype = Object.create(Core);\n\nResolved.prototype._race = moop;\nResolved.prototype._mapRej = moop;\nResolved.prototype._or = moop;\n\nResolved.prototype._and = function Resolved$and(other){\n  return other;\n};\n\nResolved.prototype._both = function Resolved$both(other){\n  var left = this._value;\n  return other._map(function Resolved$both$mapper(right){\n    return [left, right];\n  });\n};\n\nResolved.prototype._swap = function Resolved$swap(){\n  return new Rejected(this._value);\n};\n\nResolved.prototype._finally = function Resolved$finally(other){\n  var value = this._value;\n  return other._map(function Resolved$finally$mapper(){\n    return value;\n  });\n};\n\nResolved.prototype._fork = function _fork(rej, res){\n  res(this._value);\n  return noop;\n};\n\nResolved.prototype.isResolved = function Resolved$isResolved(){\n  return true;\n};\n\nResolved.prototype.extractRight = function Resolved$extractRight(){\n  return [this._value];\n};\n\nResolved.prototype.toString = function Resolved$toString(){\n  return 'Future.of(' + show(this._value) + ')';\n};\n\nfunction of(x){\n  return new Resolved(x);\n}\n\nfunction Never(){\n  this._isNever = true;\n}\n\nNever.prototype = Object.create(Future.prototype);\n\nNever.prototype._ap = moop;\nNever.prototype._map = moop;\nNever.prototype._bimap = moop;\nNever.prototype._chain = moop;\nNever.prototype._mapRej = moop;\nNever.prototype._chainRej = moop;\nNever.prototype._both = moop;\nNever.prototype._or = moop;\nNever.prototype._swap = moop;\nNever.prototype._fold = moop;\nNever.prototype._finally = moop;\n\nNever.prototype._race = function Never$race(other){\n  return other;\n};\n\nNever.prototype._fork = function Never$_fork(){\n  return noop;\n};\n\nNever.prototype.toString = function Never$toString(){\n  return 'Future.never';\n};\n\nvar never = new Never();\n\nfunction isNever(x){\n  return isFuture(x) && x._isNever === true;\n}\n\nfunction Eager(future){\n  var _this = this;\n  _this.rej = noop;\n  _this.res = noop;\n  _this.rejected = false;\n  _this.resolved = false;\n  _this.value = null;\n  _this.cancel = future._fork(function Eager$reject(x){\n    _this.value = x;\n    _this.rejected = true;\n    _this.cancel = noop;\n    _this.rej(x);\n  }, function Eager$resolve(x){\n    _this.value = x;\n    _this.resolved = true;\n    _this.cancel = noop;\n    _this.res(x);\n  });\n}\n\nEager.prototype = Object.create(Core);\n\nEager.prototype._fork = function Eager$_fork(rej, res){\n  if(this.rejected) rej(this.value);\n  else if(this.resolved) res(this.value);\n  else{\n    this.rej = rej;\n    this.res = res;\n  }\n  return this.cancel;\n};\n\nfunction check$ap(f){\n  return isFunction(f) ? f : typeError(\n    'Future#ap expects its first argument to be a Future of a Function'\n    + '\\n  Actual: Future.of(' + show(f) + ')'\n  );\n}\n\nfunction check$chain(m, f, x){\n  return isFuture(m) ? m : invalidFuture(\n    'Future#chain',\n    'the function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction check$chainRej(m, f, x){\n  return isFuture(m) ? m : invalidFuture(\n    'Future#chainRej',\n    'the function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nvar Action = {\n  rejected: function Action$rejected(x){ this.cancel(); return new Rejected(x) },\n  resolved: function Action$resolved(x){ this.cancel(); return new Resolved(x) },\n  run: function Action$run(){ return this },\n  cancel: function Action$cancel(){}\n};\n\nfunction ApAction(other){ this.other = other; }\nApAction.prototype = Object.create(Action);\n\nApAction.prototype.resolved = function ApAction$resolved(f){\n  check$ap(f);\n  return this.other._map(function ApAction$resolved$mapper(x){ return f(x) });\n};\n\nApAction.prototype.toString = function ApAction$toString(){\n  return 'ap(' + this.other.toString() + ')';\n};\n\nfunction MapAction(mapper){ this.mapper = mapper; }\nMapAction.prototype = Object.create(Action);\n\nMapAction.prototype.resolved = function MapAction$resolved(x){\n  return new Resolved(this.mapper(x));\n};\n\nMapAction.prototype.toString = function MapAction$toString(){\n  return 'map(' + showf(this.mapper) + ')';\n};\n\nfunction BimapAction(lmapper, rmapper){ this.lmapper = lmapper; this.rmapper = rmapper; }\nBimapAction.prototype = Object.create(Action);\n\nBimapAction.prototype.rejected = function BimapAction$rejected(x){\n  return new Rejected(this.lmapper(x));\n};\n\nBimapAction.prototype.resolved = function BimapAction$resolved(x){\n  return new Resolved(this.rmapper(x));\n};\n\nBimapAction.prototype.toString = function BimapAction$toString(){\n  return 'bimap(' + showf(this.lmapper) + ', ' + showf(this.rmapper) + ')';\n};\n\nfunction ChainAction(mapper){ this.mapper = mapper; }\nChainAction.prototype = Object.create(Action);\n\nChainAction.prototype.resolved = function ChainAction$resolved(x){\n  return check$chain(this.mapper(x), this.mapper, x);\n};\n\nChainAction.prototype.toString = function ChainAction$toString(){\n  return 'chain(' + showf(this.mapper) + ')';\n};\n\nfunction MapRejAction(mapper){ this.mapper = mapper; }\nMapRejAction.prototype = Object.create(Action);\n\nMapRejAction.prototype.rejected = function MapRejAction$rejected(x){\n  return new Rejected(this.mapper(x));\n};\n\nMapRejAction.prototype.toString = function MapRejAction$toString(){\n  return 'mapRej(' + showf(this.mapper) + ')';\n};\n\nfunction ChainRejAction(mapper){ this.mapper = mapper; }\nChainRejAction.prototype = Object.create(Action);\n\nChainRejAction.prototype.rejected = function ChainRejAction$rejected(x){\n  return check$chainRej(this.mapper(x), this.mapper, x);\n};\n\nChainRejAction.prototype.toString = function ChainRejAction$toString(){\n  return 'chainRej(' + showf(this.mapper) + ')';\n};\n\nfunction SwapAction(){}\nSwapAction.prototype = Object.create(Action);\n\nSwapAction.prototype.rejected = function SwapAction$rejected(x){\n  return new Resolved(x);\n};\n\nSwapAction.prototype.resolved = function SwapAction$resolved(x){\n  return new Rejected(x);\n};\n\nSwapAction.prototype.toString = function SwapAction$toString(){\n  return 'swap()';\n};\n\nfunction FoldAction(lmapper, rmapper){ this.lmapper = lmapper; this.rmapper = rmapper; }\nFoldAction.prototype = Object.create(Action);\n\nFoldAction.prototype.rejected = function FoldAction$rejected(x){\n  return new Resolved(this.lmapper(x));\n};\n\nFoldAction.prototype.resolved = function FoldAction$resolved(x){\n  return new Resolved(this.rmapper(x));\n};\n\nFoldAction.prototype.toString = function FoldAction$toString(){\n  return 'fold(' + showf(this.lmapper) + ', ' + showf(this.rmapper) + ')';\n};\n\nfunction FinallyAction(other){ this.other = other; }\nFinallyAction.prototype = Object.create(Action);\n\nFinallyAction.prototype.rejected = function FinallyAction$rejected(x){\n  return this.other._and(new Rejected(x));\n};\n\nFinallyAction.prototype.resolved = function FinallyAction$resolved(x){\n  return this.other._map(function FoldAction$resolved$mapper(){ return x });\n};\n\nFinallyAction.prototype.cancel = function FinallyAction$cancel(){\n  this.other._fork(noop, noop)();\n};\n\nFinallyAction.prototype.toString = function FinallyAction$toString(){\n  return 'finally(' + this.other.toString() + ')';\n};\n\nfunction AndAction(other){ this.other = other; }\nAndAction.prototype = Object.create(Action);\n\nAndAction.prototype.resolved = function AndAction$resolved(){\n  return this.other;\n};\n\nAndAction.prototype.toString = function AndAction$toString(){\n  return 'and(' + this.other.toString() + ')';\n};\n\nfunction OrAction(other){ this.other = other; }\nOrAction.prototype = Object.create(Action);\n\nOrAction.prototype.rejected = function OrAction$rejected(){\n  return this.other;\n};\n\nOrAction.prototype.toString = function OrAction$toString(){\n  return 'or(' + this.other.toString() + ')';\n};\n\nfunction RaceAction(other){ this.other = other; }\nRaceAction.prototype = Object.create(Action);\n\nRaceAction.prototype.run = function RaceAction$run(early){\n  return new RaceActionState(early, new Eager(this.other));\n};\n\nRaceAction.prototype.toString = function RaceAction$toString(){\n  return 'race(' + this.other.toString() + ')';\n};\n\nfunction BothAction(other){ this.other = other; }\nBothAction.prototype = Object.create(Action);\n\nBothAction.prototype.resolved = function BothAction$resolved(x){\n  return this.other._map(function BothAction$resolved$mapper(y){ return [x, y] });\n};\n\nBothAction.prototype.run = function BothAction$run(early){\n  return new BothActionState(early, new Eager(this.other));\n};\n\nBothAction.prototype.toString = function BothAction$toString(){\n  return 'both(' + this.other.toString() + ')';\n};\n\nfunction RaceActionState(early, other){\n  var _this = this;\n  _this.other = other;\n  _this.cancel = other._fork(\n    function RaceActionState$rej(x){ early(new Rejected(x), _this); },\n    function RaceActionState$res(x){ early(new Resolved(x), _this); }\n  );\n}\n\nRaceActionState.prototype = Object.create(RaceAction.prototype);\n\nfunction BothActionState(early, other){\n  var _this = this;\n  _this.other = other;\n  _this.cancel = other._fork(\n    function BothActionState$rej(x){ early(new Rejected(x), _this); },\n    noop\n  );\n}\n\nBothActionState.prototype = Object.create(BothAction.prototype);\n\nfunction Sequence(spawn, actions){\n  this._spawn = spawn;\n  this._actions = actions || empty;\n}\n\nSequence.prototype = Object.create(Future.prototype);\n\nSequence.prototype._transform = function Sequence$_transform(action){\n  return new Sequence(this._spawn, cons(action, this._actions));\n};\n\nSequence.prototype._ap = function Sequence$ap(other){\n  return this._transform(new ApAction(other));\n};\n\nSequence.prototype._map = function Sequence$map(mapper){\n  return this._transform(new MapAction(mapper));\n};\n\nSequence.prototype._bimap = function Sequence$bimap(lmapper, rmapper){\n  return this._transform(new BimapAction(lmapper, rmapper));\n};\n\nSequence.prototype._chain = function Sequence$chain(mapper){\n  return this._transform(new ChainAction(mapper));\n};\n\nSequence.prototype._mapRej = function Sequence$mapRej(mapper){\n  return this._transform(new MapRejAction(mapper));\n};\n\nSequence.prototype._chainRej = function Sequence$chainRej(mapper){\n  return this._transform(new ChainRejAction(mapper));\n};\n\nSequence.prototype._race = function Sequence$race(other){\n  return isNever(other) ? this : this._transform(new RaceAction(other));\n};\n\nSequence.prototype._both = function Sequence$both(other){\n  return this._transform(new BothAction(other));\n};\n\nSequence.prototype._and = function Sequence$and(other){\n  return this._transform(new AndAction(other));\n};\n\nSequence.prototype._or = function Sequence$or(other){\n  return this._transform(new OrAction(other));\n};\n\nSequence.prototype._swap = function Sequence$swap(){\n  return this._transform(new SwapAction);\n};\n\nSequence.prototype._fold = function Sequence$fold(lmapper, rmapper){\n  return this._transform(new FoldAction(lmapper, rmapper));\n};\n\nSequence.prototype._finally = function Sequence$finally(other){\n  return this._transform(new FinallyAction(other));\n};\n\nSequence.prototype._fork = interpreter;\n\nSequence.prototype.toString = function Sequence$toString(){\n  var str = '', tail = this._actions;\n\n  while(!tail.isEmpty){\n    str = '.' + tail.head.toString() + str;\n    tail = tail.tail;\n  }\n\n  return this._spawn.toString() + str;\n};\n\nfunction Next(x){\n  return {done: false, value: x};\n}\n\nfunction Done(x){\n  return {done: true, value: x};\n}\n\nfunction isIteration(x){\n  return isObject(x) && isBoolean(x.done);\n}\n\nvar Undetermined = 0;\nvar Synchronous = 1;\nvar Asynchronous = 2;\n\nfunction ChainRec(step, init){\n  this._step = step;\n  this._init = init;\n}\n\nChainRec.prototype = Object.create(Core);\n\nChainRec.prototype._fork = function ChainRec$_fork(rej, res){\n\n  var _step = this._step;\n  var _init = this._init;\n  var timing = Undetermined, cancel = noop, state = Next(_init);\n\n  function resolved(it){\n    state = it;\n    timing = timing === Undetermined ? Synchronous : drain();\n  }\n\n  function drain(){\n    while(!state.done){\n      timing = Undetermined;\n      var m = _step(Next, Done, state.value);\n      cancel = m._fork(rej, resolved);\n\n      if(timing !== Synchronous){\n        timing = Asynchronous;\n        return;\n      }\n    }\n\n    res(state.value);\n  }\n\n  drain();\n\n  return function Future$chainRec$cancel(){ cancel(); };\n\n};\n\nChainRec.prototype.toString = function ChainRec$toString(){\n  return 'Future.chainRec(' + showf(this._step) + ', ' + show(this._init) + ')';\n};\n\nfunction chainRec(step, init){\n  return new ChainRec(step, init);\n}\n\nfunction ap$mval(mval, mfunc){\n  if(!Z.Apply.test(mfunc)) invalidArgument('Future.ap', 1, 'be an Apply', mfunc);\n  return Z.ap(mval, mfunc);\n}\n\nfunction ap(mval, mfunc){\n  if(!Z.Apply.test(mval)) invalidArgument('Future.ap', 0, 'be an Apply', mval);\n  if(arguments.length === 1) return partial1(ap$mval, mval);\n  return ap$mval(mval, mfunc);\n}\n\nfunction alt$left(left, right){\n  if(!Z.Alt.test(right)) invalidArgument('alt', 1, 'be an Alt', right);\n  return Z.alt(left, right);\n}\n\nfunction alt(left, right){\n  if(!Z.Alt.test(left)) invalidArgument('alt', 0, 'be an Alt', left);\n  if(arguments.length === 1) return partial1(alt$left, left);\n  return alt$left(left, right);\n}\n\nfunction map$mapper(mapper, m){\n  if(!Z.Functor.test(m)) invalidArgument('Future.map', 1, 'be a Functor', m);\n  return Z.map(mapper, m);\n}\n\nfunction map(mapper, m){\n  if(!isFunction(mapper)) invalidArgument('Future.map', 0, 'be a Function', mapper);\n  if(arguments.length === 1) return partial1(map$mapper, mapper);\n  return map$mapper(mapper, m);\n}\n\nfunction bimap$lmapper$rmapper(lmapper, rmapper, m){\n  if(!Z.Bifunctor.test(m)) invalidArgument('Future.bimap', 2, 'be a Bifunctor', m);\n  return Z.bimap(lmapper, rmapper, m);\n}\n\nfunction bimap$lmapper(lmapper, rmapper, m){\n  if(!isFunction(rmapper)) invalidArgument('Future.bimap', 1, 'be a Function', rmapper);\n  if(arguments.length === 2) return partial2(bimap$lmapper$rmapper, lmapper, rmapper);\n  return bimap$lmapper$rmapper(lmapper, rmapper, m);\n}\n\nfunction bimap(lmapper, rmapper, m){\n  if(!isFunction(lmapper)) invalidArgument('Future.bimap', 0, 'be a Function', lmapper);\n  if(arguments.length === 1) return partial1(bimap$lmapper, lmapper);\n  if(arguments.length === 2) return bimap$lmapper(lmapper, rmapper);\n  return bimap$lmapper(lmapper, rmapper, m);\n}\n\nfunction chain$chainer(chainer, m){\n  if(!Z.Chain.test(m)) invalidArgument('Future.chain', 1, 'be a Chain', m);\n  return Z.chain(chainer, m);\n}\n\nfunction chain(chainer, m){\n  if(!isFunction(chainer)) invalidArgument('Future.chain', 0, 'be a Function', chainer);\n  if(arguments.length === 1) return partial1(chain$chainer, chainer);\n  return chain$chainer(chainer, m);\n}\n\nfunction mapRej$mapper(mapper, m){\n  if(!isFuture(m)) invalidFuture('Future.mapRej', 1, m);\n  return m.mapRej(mapper);\n}\n\nfunction mapRej(mapper, m){\n  if(!isFunction(mapper)) invalidArgument('Future.mapRej', 0, 'be a Function', mapper);\n  if(arguments.length === 1) return partial1(mapRej$mapper, mapper);\n  return mapRej$mapper(mapper, m);\n}\n\nfunction chainRej$chainer(chainer, m){\n  if(!isFuture(m)) invalidFuture('Future.chainRej', 1, m);\n  return m.chainRej(chainer);\n}\n\nfunction chainRej(chainer, m){\n  if(!isFunction(chainer)) invalidArgument('Future.chainRej', 0, 'be a Function', chainer);\n  if(arguments.length === 1) return partial1(chainRej$chainer, chainer);\n  return chainRej$chainer(chainer, m);\n}\n\nfunction lastly$right(right, left){\n  if(!isFuture(left)) invalidFuture('Future.finally', 1, left);\n  return left.finally(right);\n}\n\nfunction lastly(right, left){\n  if(!isFuture(right)) invalidFuture('Future.finally', 0, right);\n  if(arguments.length === 1) return partial1(lastly$right, right);\n  return lastly$right(right, left);\n}\n\nfunction and$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.and', 1, right);\n  return left.and(right);\n}\n\nfunction and(left, right){\n  if(!isFuture(left)) invalidFuture('Future.and', 0, left);\n  if(arguments.length === 1) return partial1(and$left, left);\n  return and$left(left, right);\n}\n\nfunction both$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.both', 1, right);\n  return left.both(right);\n}\n\nfunction both(left, right){\n  if(!isFuture(left)) invalidFuture('Future.both', 0, left);\n  if(arguments.length === 1) return partial1(both$left, left);\n  return both$left(left, right);\n}\n\nfunction or$left(left, right){\n  if(!isFuture(right)) invalidFuture('Future.or', 1, right);\n  return left.or(right);\n}\n\nfunction or(left, right){\n  if(!isFuture(left)) invalidFuture('Future.or', 0, left);\n  if(arguments.length === 1) return partial1(or$left, left);\n  return or$left(left, right);\n}\n\nfunction race$right(right, left){\n  if(!isFuture(left)) invalidFuture('Future.race', 1, left);\n  return left.race(right);\n}\n\nfunction race(right, left){\n  if(!isFuture(right)) invalidFuture('Future.race', 0, right);\n  if(arguments.length === 1) return partial1(race$right, right);\n  return race$right(right, left);\n}\n\nfunction swap(m){\n  if(!isFuture(m)) invalidFuture('Future.swap', 0, m);\n  return m.swap();\n}\n\nfunction fold$f$g(f, g, m){\n  if(!isFuture(m)) invalidFuture('Future.fold', 2, m);\n  return m.fold(f, g);\n}\n\nfunction fold$f(f, g, m){\n  if(!isFunction(g)) invalidArgument('Future.fold', 1, 'be a function', g);\n  if(arguments.length === 2) return partial2(fold$f$g, f, g);\n  return fold$f$g(f, g, m);\n}\n\nfunction fold(f, g, m){\n  if(!isFunction(f)) invalidArgument('Future.fold', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(fold$f, f);\n  if(arguments.length === 2) return fold$f(f, g);\n  return fold$f(f, g, m);\n}\n\nfunction done$callback(callback, m){\n  if(!isFuture(m)) invalidFuture('Future.done', 1, m);\n  return m.done(callback);\n}\n\nfunction done(callback, m){\n  if(!isFunction(callback)) invalidArgument('Future.done', 0, 'be a Function', callback);\n  if(arguments.length === 1) return partial1(done$callback, callback);\n  return done$callback(callback, m);\n}\n\nfunction fork$f$g(f, g, m){\n  if(!isFuture(m)) invalidFuture('Future.fork', 2, m);\n  return m._fork(f, g);\n}\n\nfunction fork$f(f, g, m){\n  if(!isFunction(g)) invalidArgument('Future.fork', 1, 'be a function', g);\n  if(arguments.length === 2) return partial2(fork$f$g, f, g);\n  return fork$f$g(f, g, m);\n}\n\nfunction fork(f, g, m){\n  if(!isFunction(f)) invalidArgument('Future.fork', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(fork$f, f);\n  if(arguments.length === 2) return fork$f(f, g);\n  return fork$f(f, g, m);\n}\n\nfunction promise(m){\n  if(!isFuture(m)) invalidFuture('Future.promise', 0, m);\n  return m.promise();\n}\n\nfunction value$cont(cont, m){\n  if(!isFuture(m)) invalidFuture('Future.value', 1, m);\n  return m.value(cont);\n}\n\nfunction value(cont, m){\n  if(!isFunction(cont)) invalidArgument('Future.value', 0, 'be a Function', cont);\n  if(arguments.length === 1) return partial1(value$cont, cont);\n  return value$cont(cont, m);\n}\n\nfunction extractLeft(m){\n  if(!isFuture(m)) invalidFuture('Future.extractLeft', 0, m);\n  return m.extractLeft();\n}\n\nfunction extractRight(m){\n  if(!isFuture(m)) invalidFuture('Future.extractRight', 0, m);\n  return m.extractRight();\n}\n\nfunction check$ap$f(f){\n  if(!isFunction(f)) typeError(\n    'Future#ap expects its first argument to be a Future of a Function'\n    + '\\n  Actual: Future.of(' + show(f) + ')'\n  );\n}\n\nfunction ParallelAp(mval, mfunc){\n  this._mval = mval;\n  this._mfunc = mfunc;\n}\n\nParallelAp.prototype = Object.create(Core);\n\nParallelAp.prototype._fork = function ParallelAp$fork(rej, res){\n  var func, val, okval = false, okfunc = false, rejected = false, c1, c2;\n\n  function ParallelAp$rej(x){\n    if(!rejected){\n      rejected = true;\n      rej(x);\n    }\n  }\n\n  c1 = this._mval._fork(ParallelAp$rej, function ParallelAp$fork$resVal(x){\n    c1 = noop;\n    if(!okval) return void (okfunc = true, val = x);\n    res(func(x));\n  });\n  c2 = this._mfunc._fork(ParallelAp$rej, function ParallelAp$fork$resFunc(f){\n    c2 = noop;\n    check$ap$f(f);\n    if(!okfunc) return void (okval = true, func = f);\n    res(f(val));\n  });\n\n  return function ParallelAp$fork$cancel(){\n    c1();\n    c2();\n  };\n};\n\nParallelAp.prototype.toString = function ParallelAp$toString(){\n  return 'new ParallelAp(' + this._mval.toString() + ', ' + this._mfunc.toString() + ')';\n};\n\nfunction parallelAp(mval, mfunc){\n  return new ParallelAp(mval, mfunc);\n}\n\nfunction After$race(other){\n  return other.isSettled()\n       ? other\n       : isNever(other)\n       ? this\n       : typeof other._time === 'number'\n       ? other._time < this._time ? other : this\n       : Core._race.call(this, other);\n}\n\nfunction After(time, value){\n  this._time = time;\n  this._value = value;\n}\n\nAfter.prototype = Object.create(Core);\n\nAfter.prototype._race = After$race;\n\nAfter.prototype._swap = function After$swap(){\n  return new RejectAfter(this._time, this._value);\n};\n\nAfter.prototype._fork = function After$_fork(rej, res){\n  var id = setTimeout(res, this._time, this._value);\n  return function After$cancel(){ clearTimeout(id); };\n};\n\nAfter.prototype.extractRight = function After$extractRight(){\n  return [this._value];\n};\n\nAfter.prototype.toString = function After$toString(){\n  return 'Future.after(' + show(this._time) + ', ' + show(this._value) + ')';\n};\n\nfunction RejectAfter(time, value){\n  this._time = time;\n  this._value = value;\n}\n\nRejectAfter.prototype = Object.create(Core);\n\nRejectAfter.prototype._race = After$race;\n\nRejectAfter.prototype._swap = function RejectAfter$swap(){\n  return new After(this._time, this._value);\n};\n\nRejectAfter.prototype._fork = function RejectAfter$_fork(rej){\n  var id = setTimeout(rej, this._time, this._value);\n  return function RejectAfter$cancel(){ clearTimeout(id); };\n};\n\nRejectAfter.prototype.extractLeft = function RejectAfter$extractLeft(){\n  return [this._value];\n};\n\nRejectAfter.prototype.toString = function RejectAfter$toString(){\n  return 'Future.rejectAfter(' + show(this._time) + ', ' + show(this._value) + ')';\n};\n\nfunction after$time(time, value){\n  return time === Infinity ? never : new After(time, value);\n}\n\nfunction after(time, value){\n  if(!isUnsigned(time)) invalidArgument('Future.after', 0, 'be a positive integer', time);\n  if(arguments.length === 1) return partial1(after$time, time);\n  return after$time(time, value);\n}\n\nfunction rejectAfter$time(time, reason){\n  return time === Infinity ? never : new RejectAfter(time, reason);\n}\n\nfunction rejectAfter(time, reason){\n  if(!isUnsigned(time)) invalidArgument('Future.rejectAfter', 0, 'be a positive integer', time);\n  if(arguments.length === 1) return partial1(rejectAfter$time, time);\n  return rejectAfter$time(time, reason);\n}\n\nfunction Attempt(fn){\n  this._fn = fn;\n}\n\nAttempt.prototype = Object.create(Core);\n\nAttempt.prototype._fork = function Attempt$fork(rej, res){\n  var r;\n  try{ r = this._fn(); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nAttempt.prototype.toString = function Attempt$toString(){\n  return 'Future.try(' + showf(this._fn) + ')';\n};\n\nfunction attempt(f){\n  if(!isFunction(f)) invalidArgument('Future.try', 0, 'be a function', f);\n  return new Attempt(f);\n}\n\nvar Cold = Cached.Cold = 0;\nvar Pending = Cached.Pending = 1;\nvar Rejected$1 = Cached.Rejected = 2;\nvar Resolved$1 = Cached.Resolved = 3;\n\nfunction Queued(rej, res){\n  this[Rejected$1] = rej;\n  this[Resolved$1] = res;\n}\n\nfunction Cached(pure){\n  this._pure = pure;\n  this.reset();\n}\n\nCached.prototype = Object.create(Core);\n\nCached.prototype.isRejected = function Cached$isRejected(){\n  return this._state === Rejected$1;\n};\n\nCached.prototype.isResolved = function Cached$isResolved(){\n  return this._state === Resolved$1;\n};\n\nCached.prototype.extractLeft = function Cached$extractLeft(){\n  return this.isRejected() ? [this._value] : [];\n};\n\nCached.prototype.extractRight = function Cached$extractRight(){\n  return this.isResolved() ? [this._value] : [];\n};\n\nCached.prototype._addToQueue = function Cached$addToQueue(rej, res){\n  var _this = this;\n  if(_this._state > Pending) return noop;\n  var i = _this._queue.push(new Queued(rej, res)) - 1;\n  _this._queued = _this._queued + 1;\n\n  return function Cached$removeFromQueue(){\n    if(_this._state > Pending) return;\n    _this._queue[i] = undefined;\n    _this._queued = _this._queued - 1;\n    if(_this._queued === 0) _this.reset();\n  };\n};\n\nCached.prototype._drainQueue = function Cached$drainQueue(){\n  if(this._state <= Pending) return;\n  if(this._queued === 0) return;\n  var queue = this._queue;\n  var length = queue.length;\n  var state = this._state;\n  var value = this._value;\n\n  for(var i = 0; i < length; i++){\n    queue[i] && queue[i][state](value);\n    queue[i] = undefined;\n  }\n\n  this._queue = undefined;\n  this._queued = 0;\n};\n\nCached.prototype.reject = function Cached$reject(reason){\n  if(this._state > Pending) return;\n  this._value = reason;\n  this._state = Rejected$1;\n  this._drainQueue();\n};\n\nCached.prototype.resolve = function Cached$resolve(value){\n  if(this._state > Pending) return;\n  this._value = value;\n  this._state = Resolved$1;\n  this._drainQueue();\n};\n\nCached.prototype.run = function Cached$run(){\n  var _this = this;\n  if(_this._state > Cold) return;\n  _this._state = Pending;\n  _this._cancel = _this._pure._fork(\n    function Cached$fork$rej(x){ _this.reject(x); },\n    function Cached$fork$res(x){ _this.resolve(x); }\n  );\n};\n\nCached.prototype.reset = function Cached$reset(){\n  if(this._state === Cold) return;\n  if(this._state > Pending) this._cancel();\n  this._cancel = noop;\n  this._queue = [];\n  this._queued = 0;\n  this._value = undefined;\n  this._state = Cold;\n};\n\nCached.prototype._fork = function Cached$_fork(rej, res){\n  var cancel = noop;\n\n  switch(this._state){\n    case Pending: cancel = this._addToQueue(rej, res); break;\n    case Rejected$1: rej(this._value); break;\n    case Resolved$1: res(this._value); break;\n    default: cancel = this._addToQueue(rej, res); this.run();\n  }\n\n  return cancel;\n};\n\nCached.prototype.toString = function Cached$toString(){\n  return 'Future.cache(' + this._pure.toString() + ')';\n};\n\nfunction cache(m){\n  if(!isFuture(m)) invalidFuture('Future.cache', 0, m);\n  return new Cached(m);\n}\n\nfunction Encase(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncase.prototype = Object.create(Core);\n\nEncase.prototype._fork = function Encase$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase.prototype.toString = function Encase$toString(){\n  return 'Future.encase(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encase(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encase', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encase, f);\n  return new Encase(f, x);\n}\n\nfunction Encase2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncase2.prototype = Object.create(Core);\n\nEncase2.prototype._fork = function Encase2$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a, this._b); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase2.prototype.toString = function Encase2$toString(){\n  return 'Future.encase2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encase2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encase2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encase2, f);\n    case 2: return partial2(encase2, f, x);\n    default: return new Encase2(f, x, y);\n  }\n}\n\nfunction Encase3(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncase3.prototype = Object.create(Core);\n\nEncase3.prototype._fork = function Encase3$fork(rej, res){\n  var r;\n  try{ r = this._fn(this._a, this._b, this._c); }catch(e){ rej(e); return noop }\n  res(r);\n  return noop;\n};\n\nEncase3.prototype.toString = function Encase3$toString(){\n  return 'Future.encase3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encase3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encase3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encase3, f);\n    case 2: return partial2(encase3, f, x);\n    case 3: return partial3(encase3, f, x, y);\n    default: return new Encase3(f, x, y, z);\n  }\n}\n\nfunction EncaseN(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncaseN.prototype = Object.create(Core);\n\nEncaseN.prototype._fork = function EncaseN$fork(rej, res){\n  var open = true;\n  this._fn(this._a, function EncaseN$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN$cancel(){ open = false; };\n};\n\nEncaseN.prototype.toString = function EncaseN$toString(){\n  return 'Future.encaseN(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encaseN(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encaseN', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encaseN, f);\n  return new EncaseN(f, x);\n}\n\nfunction EncaseN2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncaseN2.prototype = Object.create(Core);\n\nEncaseN2.prototype._fork = function EncaseN2$fork(rej, res){\n  var open = true;\n  this._fn(this._a, this._b, function EncaseN2$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN2$cancel(){ open = false; };\n};\n\nEncaseN2.prototype.toString = function EncaseN2$toString(){\n  return 'Future.encaseN2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encaseN2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encaseN2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseN2, f);\n    case 2: return partial2(encaseN2, f, x);\n    default: return new EncaseN2(f, x, y);\n  }\n}\n\nfunction EncaseN$1(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncaseN$1.prototype = Object.create(Core);\n\nEncaseN$1.prototype._fork = function EncaseN$3$fork(rej, res){\n  var open = true;\n  this._fn(this._a, this._b, this._c, function EncaseN$3$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function EncaseN$3$cancel(){ open = false; };\n};\n\nEncaseN$1.prototype.toString = function EncaseN$3$toString(){\n  return 'Future.encaseN3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encaseN3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encaseN3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseN3, f);\n    case 2: return partial2(encaseN3, f, x);\n    case 3: return partial3(encaseN3, f, x, y);\n    default: return new EncaseN$1(f, x, y, z);\n  }\n}\n\nfunction check$promise(p, f, a){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With: ' + (show(a))\n  );\n}\n\nfunction EncaseP(fn, a){\n  this._fn = fn;\n  this._a = a;\n}\n\nEncaseP.prototype = Object.create(Core);\n\nEncaseP.prototype._fork = function EncaseP$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var open = true;\n  check$promise(_fn(_a), _fn, _a).then(immediately(function EncaseP$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP$cancel(){ open = false; };\n};\n\nEncaseP.prototype.toString = function EncaseP$toString(){\n  return 'Future.encaseP(' + showf(this._fn) + ', ' + show(this._a) + ')';\n};\n\nfunction encaseP(f, x){\n  if(!isFunction(f)) invalidArgument('Future.encaseP', 0, 'be a function', f);\n  if(arguments.length === 1) return partial1(encaseP, f);\n  return new EncaseP(f, x);\n}\n\nfunction check$promise$1(p, f, a, b){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP2 expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With 1: ' + (show(a))\n    + '\\n  With 2: ' + (show(b))\n  );\n}\n\nfunction EncaseP2(fn, a, b){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n}\n\nEncaseP2.prototype = Object.create(Core);\n\nEncaseP2.prototype._fork = function EncaseP2$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var _b = this._b;\n  var open = true;\n  check$promise$1(_fn(_a, _b), _fn, _a, _b).then(immediately(function EncaseP2$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP2$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP2$cancel(){ open = false; };\n};\n\nEncaseP2.prototype.toString = function EncaseP2$toString(){\n  return 'Future.encaseP2(' + showf(this._fn) + ', ' + show(this._a) + ', ' + show(this._b) + ')';\n};\n\nfunction encaseP2(f, x, y){\n  if(!isFunction(f)) invalidArgument('Future.encaseP2', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseP2, f);\n    case 2: return partial2(encaseP2, f, x);\n    default: return new EncaseP2(f, x, y);\n  }\n}\n\nfunction check$promise$2(p, f, a, b, c){\n  return isThenable(p) ? p : typeError(\n    'Future.encaseP3 expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + (show(p)) + '\\n  From calling: ' + (showf(f))\n    + '\\n  With 1: ' + (show(a))\n    + '\\n  With 2: ' + (show(b))\n    + '\\n  With 3: ' + (show(c))\n  );\n}\n\nfunction EncaseP3(fn, a, b, c){\n  this._fn = fn;\n  this._a = a;\n  this._b = b;\n  this._c = c;\n}\n\nEncaseP3.prototype = Object.create(Core);\n\nEncaseP3.prototype._fork = function EncaseP3$fork(rej, res){\n  var _fn = this._fn;\n  var _a = this._a;\n  var _b = this._b;\n  var _c = this._c;\n  var open = true;\n  check$promise$2(_fn(_a, _b, _c), _fn, _a, _b, _c).then(immediately(function EncaseP3$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function EncaseP3$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function EncaseP3$cancel(){ open = false; };\n};\n\nEncaseP3.prototype.toString = function EncaseP3$toString(){\n  return 'Future.encaseP3('\n       + showf(this._fn)\n       + ', '\n       + show(this._a)\n       + ', '\n       + show(this._b)\n       + ', '\n       + show(this._c)\n       + ')';\n};\n\nfunction encaseP3(f, x, y, z){\n  if(!isFunction(f)) invalidArgument('Future.encaseP3', 0, 'be a function', f);\n\n  switch(arguments.length){\n    case 1: return partial1(encaseP3, f);\n    case 2: return partial2(encaseP3, f, x);\n    case 3: return partial3(encaseP3, f, x, y);\n    default: return new EncaseP3(f, x, y, z);\n  }\n}\n\n/*eslint consistent-return: 0*/\n\nfunction check$iterator(g){\n  return isIterator(g) ? g : invalidArgument(\n    'Future.do', 0, 'return an iterator, maybe you forgot the \"*\"', g\n  );\n}\n\nfunction check$iteration(o){\n  if(!isIteration(o)) typeError(\n    'Future.do was given an invalid generator:'\n    + ' Its iterator did not return a valid iteration from iterator.next()'\n    + '\\n  Actual: ' + show(o)\n  );\n  if(o.done || isFuture(o.value)) return o;\n  return invalidFuture(\n    'Future.do',\n    'the iterator to produce only valid Futures',\n    o.value,\n    '\\n  Tip: If you\\'re using a generator, make sure you always yield a Future'\n  );\n}\n\nfunction Go(generator){\n  this._generator = generator;\n}\n\nGo.prototype = Object.create(Core);\n\nGo.prototype._fork = function Go$_fork(rej, res){\n\n  var iterator = check$iterator(this._generator());\n\n  var timing = Undetermined, cancel = noop, state, value;\n\n  function resolved(x){\n    value = x;\n    if(timing === Asynchronous) return drain();\n    timing = Synchronous;\n    state = check$iteration(iterator.next(value));\n  }\n\n  function drain(){\n    state = check$iteration(iterator.next(value));\n\n    while(!state.done){\n      timing = Undetermined;\n      cancel = state.value._fork(rej, resolved);\n\n      if(timing !== Synchronous){\n        timing = Asynchronous;\n        return;\n      }\n    }\n\n    res(state.value);\n  }\n\n  drain();\n\n  return function Go$cancel(){ cancel(); };\n\n};\n\nGo.prototype.toString = function Go$toString(){\n  return 'Future.do(' + showf(this._generator) + ')';\n};\n\nfunction go(generator){\n  if(!isFunction(generator)) invalidArgument('Future.do', 0, 'be a Function', generator);\n  return new Go(generator);\n}\n\nfunction check$dispose(m, f, x){\n  if(!isFuture(m)) invalidFuture(\n    'Future.hook',\n    'the first function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction check$consume(m, f, x){\n  if(!isFuture(m)) invalidFuture(\n    'Future.hook',\n    'the second function it\\'s given to return a Future',\n    m,\n    '\\n  From calling: ' + showf(f) + '\\n  With: ' + show(x)\n  );\n}\n\nfunction Hook(acquire, dispose, consume){\n  this._acquire = acquire;\n  this._dispose = dispose;\n  this._consume = consume;\n}\n\nHook.prototype = Object.create(Core);\n\nHook.prototype._fork = function Hook$fork(rej, res){\n\n  var _acquire = this._acquire, _dispose = this._dispose, _consume = this._consume;\n  var cancel, cancelAcquire = noop, cancelConsume = noop, resource, value, cont = noop;\n\n  function Hook$done(){\n    cont(value);\n  }\n\n  function Hook$dispose(){\n    var disposal = _dispose(resource);\n    check$dispose(disposal, _dispose, resource);\n    cancel = disposal._fork(rej, Hook$done);\n    return cancel;\n  }\n\n  function Hook$cancelConsuption(){\n    cancelConsume();\n    Hook$dispose()();\n  }\n\n  function Hook$consumptionRejected(x){\n    cont = rej;\n    value = x;\n    Hook$dispose();\n  }\n\n  function Hook$consumptionResolved(x){\n    cont = res;\n    value = x;\n    Hook$dispose();\n  }\n\n  function Hook$acquireResolved(x){\n    resource = x;\n    var consumption = _consume(resource);\n    check$consume(consumption, _consume, resource);\n    cancel = Hook$cancelConsuption;\n    cancelConsume = consumption._fork(Hook$consumptionRejected, Hook$consumptionResolved);\n  }\n\n  cancelAcquire = _acquire._fork(rej, Hook$acquireResolved);\n\n  cancel = cancel || cancelAcquire;\n\n  return function Hook$fork$cancel(){ cancel(); };\n\n};\n\nHook.prototype.toString = function Hook$toString(){\n  return 'Future.hook('\n       + this._acquire.toString()\n       + ', '\n       + showf(this._dispose)\n       + ', '\n       + showf(this._consume)\n       + ')';\n};\n\nfunction hook$acquire$cleanup(acquire, cleanup, consume){\n  if(!isFunction(consume)) invalidArgument('Future.hook', 2, 'be a Future', consume);\n  return new Hook(acquire, cleanup, consume);\n}\n\nfunction hook$acquire(acquire, cleanup, consume){\n  if(!isFunction(cleanup)) invalidArgument('Future.hook', 1, 'be a function', cleanup);\n  if(arguments.length === 2) return partial2(hook$acquire$cleanup, acquire, cleanup);\n  return hook$acquire$cleanup(acquire, cleanup, consume);\n}\n\nfunction hook(acquire, cleanup, consume){\n  if(!isFuture(acquire)) invalidFuture('Future.hook', 0, acquire);\n  if(arguments.length === 1) return partial1(hook$acquire, acquire);\n  if(arguments.length === 2) return hook$acquire(acquire, cleanup);\n  return hook$acquire(acquire, cleanup, consume);\n}\n\nfunction Node(fn){\n  this._fn = fn;\n}\n\nNode.prototype = Object.create(Core);\n\nNode.prototype._fork = function Node$fork(rej, res){\n  var open = true;\n  this._fn(function Node$done(err, val){\n    if(open){\n      open = false;\n      err ? rej(err) : res(val);\n    }\n  });\n  return function Node$cancel(){ open = false; };\n};\n\nNode.prototype.toString = function Node$toString(){\n  return 'Future.node(' + showf(this._fn) + ')';\n};\n\nfunction node(f){\n  if(!isFunction(f)) invalidArgument('Future.node', 0, 'be a function', f);\n  return new Node(f);\n}\n\nfunction check$parallel(m, i){\n  return isFuture(m) ? m : invalidFuture(\n    'Future.parallel',\n    'its second argument to be an array of valid Futures. '\n  + 'The value at position ' + i + ' in the array is not a Future',\n    m\n  );\n}\n\nfunction Parallel(max, futures){\n  this._futures = futures;\n  this._length = futures.length;\n  this._max = Math.min(this._length, max);\n}\n\nParallel.prototype = Object.create(Core);\n\nParallel.prototype._fork = function Parallel$_fork(rej, res){\n\n  var _futures = this._futures, _length = this._length, _max = this._max;\n  var cancels = new Array(_length), out = new Array(_length);\n  var cursor = 0, running = 0, blocked = false;\n\n  function Parallel$cancel(){\n    cursor = _length;\n    for(var n = 0; n < _length; n++) cancels[n] && cancels[n]();\n  }\n\n  function Parallel$run(idx){\n    running++;\n    cancels[idx] = _futures[idx]._fork(function Parallel$rej(reason){\n      cancels[idx] = noop;\n      Parallel$cancel();\n      rej(reason);\n    }, function Parallel$res(value){\n      cancels[idx] = noop;\n      out[idx] = value;\n      running--;\n      if(cursor === _length && running === 0) res(out);\n      else if(blocked) Parallel$drain();\n    });\n  }\n\n  function Parallel$drain(){\n    blocked = false;\n    while(cursor < _length && running < _max) Parallel$run(cursor++);\n    blocked = true;\n  }\n\n  Parallel$drain();\n\n  return Parallel$cancel;\n\n};\n\nParallel.prototype.toString = function Parallel$toString(){\n  return 'Future.parallel(' + this._max + ', ' + show(this._futures) + ')';\n};\n\nvar emptyArray = new Resolved([]);\n\nfunction parallel$max(max, xs){\n  if(!isArray(xs)) invalidArgument('Future.parallel', 1, 'be an array', xs);\n  var futures = mapArray(xs, check$parallel);\n  return futures.length === 0 ? emptyArray : new Parallel(max, futures);\n}\n\nfunction parallel(max, xs){\n  if(!isUnsigned(max)) invalidArgument('Future.parallel', 0, 'be a positive integer', max);\n  if(arguments.length === 1) return partial1(parallel$max, max);\n  return parallel$max(max, xs);\n}\n\nfunction check$promise$3(p, f){\n  return isThenable(p) ? p : typeError(\n    'Future.tryP expects the function it\\'s given to return a Promise/Thenable'\n    + '\\n  Actual: ' + show(p) + '\\n  From calling: ' + showf(f)\n  );\n}\n\nfunction TryP(fn){\n  this._fn = fn;\n}\n\nTryP.prototype = Object.create(Core);\n\nTryP.prototype._fork = function TryP$fork(rej, res){\n  var open = true;\n  check$promise$3(this._fn(), this._fn).then(immediately(function TryP$res(x){\n    if(open){\n      open = false;\n      res(x);\n    }\n  }), immediately(function TryP$rej(x){\n    if(open){\n      open = false;\n      rej(x);\n    }\n  }));\n  return function TryP$cancel(){ open = false; };\n};\n\nTryP.prototype.toString = function TryP$toString(){\n  return 'Future.tryP(' + show(this._fn) + ')';\n};\n\nfunction tryP(f){\n  if(!isFunction(f)) invalidArgument('Future.tryP', 0, 'be a function', f);\n  return new TryP(f);\n}\n\nif(typeof Object.create !== 'function') error('Please polyfill Object.create to use Fluture');\nif(typeof Object.assign !== 'function') error('Please polyfill Object.assign to use Fluture');\nif(typeof Array.isArray !== 'function') error('Please polyfill Array.isArray to use Fluture');\n\nFuture.of = Future[FL.of] = of;\nFuture.chainRec = Future[FL.chainRec] = chainRec;\nFuture.reject = reject;\nFuture.ap = ap;\nFuture.map = map;\nFuture.bimap = bimap;\nFuture.chain = chain;\n\nvar Par = concurrify(Future, never, race, parallelAp);\nPar.of = Par[FL.of];\nPar.zero = Par[FL.zero];\nPar.map = map;\nPar.ap = ap;\nPar.alt = alt;\n\nfunction isParallel(x){\n  return x instanceof Par || type(x) === Par['@@type'];\n}\n\nfunction seq(par){\n  if(!isParallel(par)) invalidArgument('Future.seq', 0, 'to be a Par', par);\n  return par.sequential;\n}\n\n\n\n\nvar Fluture = Object.freeze({\n\tFuture: Future,\n\tdefault: Future,\n\tPar: Par,\n\tisParallel: isParallel,\n\tseq: seq,\n\tisFuture: isFuture,\n\treject: reject,\n\tof: of,\n\tnever: never,\n\tisNever: isNever,\n\tafter: after,\n\trejectAfter: rejectAfter,\n\tattempt: attempt,\n\ttry: attempt,\n\tcache: cache,\n\tencase: encase,\n\tencase2: encase2,\n\tencase3: encase3,\n\tencaseN: encaseN,\n\tencaseN2: encaseN2,\n\tencaseN3: encaseN3,\n\tencaseP: encaseP,\n\tencaseP2: encaseP2,\n\tencaseP3: encaseP3,\n\tgo: go,\n\tdo: go,\n\thook: hook,\n\tnode: node,\n\tparallel: parallel,\n\ttryP: tryP,\n\tap: ap,\n\talt: alt,\n\tmap: map,\n\tbimap: bimap,\n\tchain: chain,\n\tmapRej: mapRej,\n\tchainRej: chainRej,\n\tlastly: lastly,\n\tfinally: lastly,\n\tand: and,\n\tboth: both,\n\tor: or,\n\trace: race,\n\tswap: swap,\n\tfold: fold,\n\tdone: done,\n\tfork: fork,\n\tpromise: promise,\n\tvalue: value,\n\textractLeft: extractLeft,\n\textractRight: extractRight\n});\n\nvar index_cjs = Object.assign(Future, Fluture);\n\nreturn index_cjs;\n\n})));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.has = function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n};\n/**\n * Default function to compare element order.\n * @function\n */\nfunction defaultCompare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a === b) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\n/**\n * Default function to test equality.\n * @function\n */\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nexports.defaultEquals = defaultEquals;\n/**\n * Default function to convert an object to a string.\n * @function\n */\nfunction defaultToString(item) {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\nexports.defaultToString = defaultToString;\n/**\n* Joins all the properies of the object using the provided join string\n*/\nfunction makeString(item, join) {\n    if (join === void 0) { join = ','; }\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return item.toString();\n    }\n    else {\n        var toret = '{';\n        var first = true;\n        for (var prop in item) {\n            if (exports.has(item, prop)) {\n                if (first) {\n                    first = false;\n                }\n                else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + item[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\nexports.makeString = makeString;\n/**\n * Checks if the given argument is a function.\n * @function\n */\nfunction isFunction(func) {\n    return (typeof func) === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nfunction isUndefined(obj) {\n    return (typeof obj) === 'undefined';\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks if the given argument is a string.\n * @function\n */\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Reverses a compare function.\n * @function\n */\nfunction reverseCompareFunction(compareFunction) {\n    if (isUndefined(compareFunction) || !isFunction(compareFunction)) {\n        return function (a, b) {\n            if (a < b) {\n                return 1;\n            }\n            else if (a === b) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        };\n    }\n    else {\n        return function (d, v) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\nexports.reverseCompareFunction = reverseCompareFunction;\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nfunction compareToEquals(compareFunction) {\n    return function (a, b) {\n        return compareFunction(a, b) === 0;\n    };\n}\nexports.compareToEquals = compareToEquals;\n//# sourceMappingURL=util.js.map","//. # sanctuary-show\n//.\n//. Haskell has a `show` function which can be applied to a compatible value to\n//. produce a descriptive string representation of that value. The idea is that\n//. the string representation should, if possible, be an expression which would\n//. produce the original value if evaluated.\n//.\n//. This library provides a similar [`show`](#show) function.\n//.\n//. In general, this property should hold: `eval (show (x)) = x`. In some cases\n//. parens are necessary to ensure correct interpretation (`{}`, for example,\n//. is an empty block rather than an empty object in some contexts). Thus the\n//. property is more accurately stated `eval ('(' + show (x) + ')') = x`.\n//.\n//. One can make values of a custom type compatible with [`show`](#show) by\n//. defining a `@@show` method. For example:\n//.\n//. ```javascript\n//. //# Maybe#@@show :: Maybe a ~> () -> String\n//. //.\n//. //. ```javascript\n//. //. > show (Nothing)\n//. //. 'Nothing'\n//. //.\n//. //. > show (Just (['foo', 'bar', 'baz']))\n//. //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n//. //. ```\n//. Maybe.prototype['@@show'] = function() {\n//.   return this.isNothing ? 'Nothing' : 'Just (' + show (this.value) + ')';\n//. };\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryShow = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$show :: String\n  var $$show = '@@show';\n\n  //  seen :: Array Any\n  var seen = [];\n\n  //  entry :: Object -> String -> String\n  function entry(o) {\n    return function(k) {\n      return show(k) + ': ' + show(o[k]);\n    };\n  }\n\n  //# show :: Showable a => a -> String\n  //.\n  //. Returns a useful string representation of the given value.\n  //.\n  //. Dispatches to the value's `@@show` method if present.\n  //.\n  //. Where practical, `show (eval ('(' + show (x) + ')')) = show (x)`.\n  //.\n  //. ```javascript\n  //. > show (null)\n  //. 'null'\n  //.\n  //. > show (undefined)\n  //. 'undefined'\n  //.\n  //. > show (true)\n  //. 'true'\n  //.\n  //. > show (new Boolean (false))\n  //. 'new Boolean (false)'\n  //.\n  //. > show (-0)\n  //. '-0'\n  //.\n  //. > show (NaN)\n  //. 'NaN'\n  //.\n  //. > show (new Number (Infinity))\n  //. 'new Number (Infinity)'\n  //.\n  //. > show ('foo\\n\"bar\"\\nbaz\\n')\n  //. '\"foo\\\\n\\\\\"bar\\\\\"\\\\nbaz\\\\n\"'\n  //.\n  //. > show (new String (''))\n  //. 'new String (\"\")'\n  //.\n  //. > show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > show ([[[[[0]]]]])\n  //. '[[[[[0]]]]]'\n  //.\n  //. > show ({x: [1, 2], y: [3, 4], z: [5, 6]})\n  //. '{\"x\": [1, 2], \"y\": [3, 4], \"z\": [5, 6]}'\n  //. ```\n  function show(x) {\n    if (seen.indexOf(x) >= 0) return '<Circular>';\n\n    switch (Object.prototype.toString.call(x)) {\n\n      case '[object Boolean]':\n        return typeof x === 'object' ?\n          'new Boolean (' + show(x.valueOf()) + ')' :\n          x.toString();\n\n      case '[object Number]':\n        return typeof x === 'object' ?\n          'new Number (' + show(x.valueOf()) + ')' :\n          1 / x === -Infinity ? '-0' : x.toString(10);\n\n      case '[object String]':\n        return typeof x === 'object' ?\n          'new String (' + show(x.valueOf()) + ')' :\n          JSON.stringify(x);\n\n      case '[object Date]':\n        return 'new Date (' +\n               show(isNaN(x.valueOf()) ? NaN : x.toISOString()) +\n               ')';\n\n      case '[object Error]':\n        return 'new ' + x.name + ' (' + show(x.message) + ')';\n\n      case '[object Arguments]':\n        return 'function () { return arguments; } (' +\n               Array.prototype.map.call(x, show).join(', ') +\n               ')';\n\n      case '[object Array]':\n        seen.push(x);\n        try {\n          return '[' + x.map(show).concat(\n            Object.keys(x)\n            .sort()\n            .filter(function(k) { return !/^\\d+$/.test(k); })\n            .map(entry(x))\n          ).join(', ') + ']';\n        } finally {\n          seen.pop();\n        }\n\n      case '[object Object]':\n        seen.push(x);\n        try {\n          return (\n            $$show in x &&\n            (x.constructor == null || x.constructor.prototype !== x) ?\n              x[$$show]() :\n              '{' + Object.keys(x).sort().map(entry(x)).join(', ') + '}'\n          );\n        } finally {\n          seen.pop();\n        }\n\n      default:\n        return String(x);\n\n    }\n  }\n\n  return show;\n\n}));\n","import { create, env } from 'sanctuary';\nimport { Future } from 'fluture';\n\nvar checkTypes = false; //process.env.BUILD_TYPE !== 'build';\r\nvar S = create({ checkTypes: checkTypes, env: env });\n\nvar isNil = function (x) { return x == undefined || x == null; };\r\nvar getDomUrl = function (url) {\r\n    var ctor = window.URL || window.webkitURL || window;\r\n    return new ctor(url);\r\n};\r\nvar sameOrigin = function (url) {\r\n    return url.indexOf(\"http://\") !== -1 || url.indexOf(\"https://\") !== -1\r\n        ? (getDomUrl(url).origin === window.location.origin)\r\n        : true;\r\n};\n\nvar ImageLoader = function (_a) {\r\n    var url = _a.url, crossOrigin = _a.crossOrigin;\r\n    return Future(function (reject, resolve) {\r\n        var img = new Image();\r\n        img.addEventListener(\"load\", function () { return resolve(img); });\r\n        img.addEventListener(\"error\", reject);\r\n        S.map(function (x) { return img.crossOrigin = x; })(crossOrigin);\r\n        img.src = url;\r\n    });\r\n};\r\nvar fetchImage = function (url) { return ImageLoader({ url: url, crossOrigin: !sameOrigin(url) ? S.Just(\"anonymous\") : S.Nothing }); };\r\nvar loadImageFromUrl = fetchImage; //an alias\r\nvar loadImageFromArrayBuffer = function (_a) {\r\n    var data = _a.data, mimeType = _a.mimeType;\r\n    return Future(function (reject, resolve) {\r\n        var img = new Image();\r\n        img.addEventListener(\"load\", function () { return resolve(img); });\r\n        img.addEventListener(\"error\", reject);\r\n        var arrayBufferView = new Uint8Array(data);\r\n        var blob = new Blob([arrayBufferView], { type: mimeType });\r\n        var urlCreator = window.URL || window.webkitURL;\r\n        img.src = urlCreator.createObjectURL(blob);\r\n    });\r\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\nvar makeQuery = function (args) {\r\n    var query = '';\r\n    if (!isNil(args)) {\r\n        for (var key in args) {\r\n            if (args.hasOwnProperty(key) && !isNil(args[key])) {\r\n                if (query !== '') {\r\n                    query += '&';\r\n                }\r\n                query += key + \"=\" + encodeURIComponent(args[key]);\r\n            }\r\n        }\r\n    }\r\n    return query;\r\n};\r\nvar XhrLoader = function (endpoint) { return function (options) { return Future(function (reject, resolve) {\r\n    var opts = __assign({ method: \"GET\" }, options);\r\n    var xhr = opts.xhr !== undefined\r\n        ? opts.xhr\r\n        : new XMLHttpRequest();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === xhr.DONE) {\r\n            if (!xhr.status) {\r\n                return; //was cancelled\r\n            }\r\n            if (xhr.status !== 200) {\r\n                reject(xhr);\r\n            }\r\n            else {\r\n                resolve(xhr);\r\n            }\r\n        }\r\n    };\r\n    var query = ((opts.requestType === \"form\" || opts.requestType === \"query\") && opts.data !== null)\r\n        ? makeQuery(opts.data)\r\n        : \"\";\r\n    var url = (opts.requestType === \"query\" && query !== \"\")\r\n        ? endpoint + \"?\" + query\r\n        : endpoint;\r\n    xhr.open(opts.method, url);\r\n    xhr.responseType = opts.responseType;\r\n    if (opts.withCredentials !== undefined) {\r\n        xhr.withCredentials = opts.withCredentials;\r\n    }\r\n    if (opts.headers !== undefined) {\r\n        opts.headers.forEach(function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            xhr.setRequestHeader(key, val);\r\n        });\r\n    }\r\n    if (opts.requestType === \"form\" && query !== \"\") {\r\n        xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n        //Not actually allowed by spec, so commenting out.. browser will calculate automatically\r\n        //xhr.setRequestHeader(\"Content-length\", requestData.length);\r\n        xhr.send(query);\r\n    }\r\n    else if (!isNil(opts.data)) {\r\n        xhr.send(opts.data);\r\n    }\r\n    else {\r\n        xhr.send();\r\n    }\r\n    return function () { return xhr.abort(); };\r\n}); }; };\r\n//generics for simplifying fetch style requests\r\n//The base function is \"fletch\" - but after that it's all \"fetch*\"\r\nvar fletch = function (endpoint) { return function (options) {\r\n    return XhrLoader(endpoint)(options).map(function (xhr) { return xhr.response; });\r\n}; };\r\nvar fetchUrl = function (endpoint) {\r\n    return fletch(endpoint)(null);\r\n};\r\n//internal helpers to keep things DRY\r\nvar _fetchOverride = function (responseType) { return function (endpoint) { return function (options) {\r\n    return fletch(endpoint)(__assign({}, options, { responseType: responseType }));\r\n}; }; };\r\nvar _fetchUrlOverride = function (responseType) { return function (endpoint) {\r\n    return fletch(endpoint)({ responseType: responseType });\r\n}; };\r\n//Fetches the specific data. Overrides the responseType, but otherwise all Xhr settings are allowed\r\nvar fetchArrayBuffer = _fetchOverride(\"arraybuffer\");\r\nvar fetchText = _fetchOverride(\"text\");\r\nvar fetchBlob = _fetchOverride(\"blob\");\r\nvar fetchXml = _fetchOverride(\"document\");\r\n//Json will use query as default here since it's the typical case here (and can still be overridden)\r\nvar fetchJson = function (endpoint) { return function (options) { return _fetchOverride(\"json\")(endpoint)(__assign({ requestType: \"query\" }, options)); }; };\r\n//wrapper over fletch for cases it's just the url\r\n//Same as fetch* but without any Xhr options (simple url get)\r\nvar fetchArrayBufferUrl = _fetchUrlOverride(\"arraybuffer\");\r\nvar fetchJsonUrl = _fetchUrlOverride(\"json\");\r\nvar fetchTextUrl = _fetchUrlOverride(\"text\");\r\nvar fetchBlobUrl = _fetchUrlOverride(\"blob\");\r\nvar fetchXmlUrl = _fetchUrlOverride(\"document\");\n\nvar BlobLoader = function (read) { return function (blob) { return Future(function (reject, resolve) {\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function () { return resolve(fileReader.result); };\r\n    fileReader.onerror = function (err) { return reject(err); };\r\n    read([fileReader, blob]);\r\n    return function () { return fileReader.abort(); };\r\n}); }; };\r\nvar loadBlobAsArrayBuffer = BlobLoader(function (_a) {\r\n    var fileReader = _a[0], blob = _a[1];\r\n    return fileReader.readAsArrayBuffer(blob);\r\n});\r\nvar loadBlobAsDataUrl = BlobLoader(function (_a) {\r\n    var fileReader = _a[0], blob = _a[1];\r\n    return fileReader.readAsDataURL(blob);\r\n});\r\nvar loadblobAsText = BlobLoader(function (_a) {\r\n    var fileReader = _a[0], blob = _a[1];\r\n    return fileReader.readAsText(blob);\r\n});\n\nvar loadAudioBuffer = function (ctx) { return function (data) { return Future(function (reject, resolve) {\r\n    ctx.decodeAudioData(data, resolve, reject);\r\n}); }; };\n\nvar VideoPlayer = function (_a) {\r\n    var url = _a.url, crossOrigin = _a.crossOrigin;\r\n    return Future(function (reject, resolve) {\r\n        var playing = false;\r\n        var timeupdate = false;\r\n        var video = document.createElement('video');\r\n        video.autoplay = true;\r\n        video.muted = true;\r\n        video.loop = true;\r\n        S.map(function (x) { return video.crossOrigin = x; })(crossOrigin);\r\n        var checkReady = function () {\r\n            if (playing && timeupdate) {\r\n                resolve(video);\r\n            }\r\n        };\r\n        video.addEventListener('playing', function () {\r\n            playing = true;\r\n            checkReady();\r\n        }, true);\r\n        video.addEventListener('timeupdate', function () {\r\n            timeupdate = true;\r\n            checkReady();\r\n        }, true);\r\n        video.src = url;\r\n        video.play();\r\n    });\r\n};\r\nvar playVideo = function (url) { return VideoPlayer({ url: url, crossOrigin: !sameOrigin(url) ? S.Just(\"anonymous\") : S.Nothing }); };\n\nexport { ImageLoader, fetchImage, loadImageFromUrl, loadImageFromArrayBuffer, XhrLoader, fletch, fetchUrl, fetchArrayBuffer, fetchText, fetchBlob, fetchXml, fetchJson, fetchArrayBufferUrl, fetchJsonUrl, fetchTextUrl, fetchBlobUrl, fetchXmlUrl, BlobLoader, loadBlobAsArrayBuffer, loadBlobAsDataUrl, loadblobAsText, loadAudioBuffer, VideoPlayer, playVideo };\n//# sourceMappingURL=lib.esm.js.map\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import { mat4, quat, vec2, vec3, vec4 } from 'gl-matrix';\nimport { Future, parallel } from 'fluture';\nimport { fetchImage, fetchJsonUrl, fetchArrayBufferUrl, loadImageFromArrayBuffer } from 'fluture-loaders';\n\nvar GltfAnimationTargetPath;\r\n(function (GltfAnimationTargetPath) {\r\n    GltfAnimationTargetPath[GltfAnimationTargetPath[\"TRANSLATION\"] = 1] = \"TRANSLATION\";\r\n    GltfAnimationTargetPath[GltfAnimationTargetPath[\"ROTATION\"] = 2] = \"ROTATION\";\r\n    GltfAnimationTargetPath[GltfAnimationTargetPath[\"SCALE\"] = 3] = \"SCALE\";\r\n    GltfAnimationTargetPath[GltfAnimationTargetPath[\"WEIGHTS\"] = 4] = \"WEIGHTS\";\r\n})(GltfAnimationTargetPath || (GltfAnimationTargetPath = {}));\r\nvar GltfAnimationInterpolation;\r\n(function (GltfAnimationInterpolation) {\r\n    GltfAnimationInterpolation[GltfAnimationInterpolation[\"LINEAR\"] = 1] = \"LINEAR\";\r\n    GltfAnimationInterpolation[GltfAnimationInterpolation[\"STEP\"] = 2] = \"STEP\";\r\n    GltfAnimationInterpolation[GltfAnimationInterpolation[\"CUBICSPLINE\"] = 3] = \"CUBICSPLINE\";\r\n})(GltfAnimationInterpolation || (GltfAnimationInterpolation = {}));\n\nvar GltfMaterialAlphaMode;\r\n(function (GltfMaterialAlphaMode) {\r\n    GltfMaterialAlphaMode[GltfMaterialAlphaMode[\"OPAQUE\"] = 1] = \"OPAQUE\";\r\n    GltfMaterialAlphaMode[GltfMaterialAlphaMode[\"MASK\"] = 2] = \"MASK\";\r\n    GltfMaterialAlphaMode[GltfMaterialAlphaMode[\"BLEND\"] = 3] = \"BLEND\";\r\n})(GltfMaterialAlphaMode || (GltfMaterialAlphaMode = {}));\n\n//would be nice to extend but that's not really doable with enums\r\nvar GltfNodeKind;\r\n(function (GltfNodeKind) {\r\n    GltfNodeKind[GltfNodeKind[\"MESH\"] = 3] = \"MESH\";\r\n    GltfNodeKind[GltfNodeKind[\"SKIN\"] = 4] = \"SKIN\";\r\n})(GltfNodeKind || (GltfNodeKind = {}));\n\nvar GltfPrimitiveDrawKind;\r\n(function (GltfPrimitiveDrawKind) {\r\n    GltfPrimitiveDrawKind[GltfPrimitiveDrawKind[\"ELEMENTS\"] = 1] = \"ELEMENTS\";\r\n    GltfPrimitiveDrawKind[GltfPrimitiveDrawKind[\"ARRAY\"] = 2] = \"ARRAY\";\r\n})(GltfPrimitiveDrawKind || (GltfPrimitiveDrawKind = {}));\n\nconst GltfIblExtensionName = \"PURE3D_IBL\";\n\nconst GltfLightsExtensionName = \"KHR_lights\";\n\nconst GltfUnlitExtensionName = \"KHR_Unlit\";\n\nvar CameraKind;\r\n(function (CameraKind) {\r\n    CameraKind[CameraKind[\"PERSPECTIVE\"] = 0] = \"PERSPECTIVE\";\r\n    CameraKind[CameraKind[\"ORTHOGRAPHIC\"] = 1] = \"ORTHOGRAPHIC\";\r\n})(CameraKind || (CameraKind = {}));\n\nvar NodeKind;\r\n(function (NodeKind) {\r\n    NodeKind[NodeKind[\"CAMERA\"] = 1] = \"CAMERA\";\r\n    NodeKind[NodeKind[\"LIGHT\"] = 2] = \"LIGHT\";\r\n})(NodeKind || (NodeKind = {}));\n\nvar LightKind;\r\n(function (LightKind) {\r\n    LightKind[LightKind[\"Ambient\"] = 1] = \"Ambient\";\r\n    LightKind[LightKind[\"Directional\"] = 2] = \"Directional\";\r\n    LightKind[LightKind[\"Point\"] = 3] = \"Point\";\r\n    LightKind[LightKind[\"Spot\"] = 4] = \"Spot\";\r\n})(LightKind || (LightKind = {}));\n\n//taken from https://raw.githubusercontent.com/mattdesl/gl-constants/master/1.0/index.js\r\n//would be good to properly check against https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\r\nvar WebGlConstants;\r\n(function (WebGlConstants) {\r\n    WebGlConstants[WebGlConstants[\"ACTIVE_ATTRIBUTES\"] = 35721] = \"ACTIVE_ATTRIBUTES\";\r\n    WebGlConstants[WebGlConstants[\"ACTIVE_ATTRIBUTE_MAX_LENGTH\"] = 35722] = \"ACTIVE_ATTRIBUTE_MAX_LENGTH\";\r\n    WebGlConstants[WebGlConstants[\"ACTIVE_TEXTURE\"] = 34016] = \"ACTIVE_TEXTURE\";\r\n    WebGlConstants[WebGlConstants[\"ACTIVE_UNIFORMS\"] = 35718] = \"ACTIVE_UNIFORMS\";\r\n    WebGlConstants[WebGlConstants[\"ACTIVE_UNIFORM_MAX_LENGTH\"] = 35719] = \"ACTIVE_UNIFORM_MAX_LENGTH\";\r\n    WebGlConstants[WebGlConstants[\"ALIASED_LINE_WIDTH_RANGE\"] = 33902] = \"ALIASED_LINE_WIDTH_RANGE\";\r\n    WebGlConstants[WebGlConstants[\"ALIASED_POINT_SIZE_RANGE\"] = 33901] = \"ALIASED_POINT_SIZE_RANGE\";\r\n    WebGlConstants[WebGlConstants[\"ALPHA\"] = 6406] = \"ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"ALPHA_BITS\"] = 3413] = \"ALPHA_BITS\";\r\n    WebGlConstants[WebGlConstants[\"ALWAYS\"] = 519] = \"ALWAYS\";\r\n    WebGlConstants[WebGlConstants[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\r\n    WebGlConstants[WebGlConstants[\"ARRAY_BUFFER_BINDING\"] = 34964] = \"ARRAY_BUFFER_BINDING\";\r\n    WebGlConstants[WebGlConstants[\"ATTACHED_SHADERS\"] = 35717] = \"ATTACHED_SHADERS\";\r\n    WebGlConstants[WebGlConstants[\"BACK\"] = 1029] = \"BACK\";\r\n    WebGlConstants[WebGlConstants[\"BLEND\"] = 3042] = \"BLEND\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_COLOR\"] = 32773] = \"BLEND_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_DST_ALPHA\"] = 32970] = \"BLEND_DST_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_DST_RGB\"] = 32968] = \"BLEND_DST_RGB\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_EQUATION\"] = 32777] = \"BLEND_EQUATION\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_EQUATION_ALPHA\"] = 34877] = \"BLEND_EQUATION_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_EQUATION_RGB\"] = 32777] = \"BLEND_EQUATION_RGB\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_SRC_ALPHA\"] = 32971] = \"BLEND_SRC_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"BLEND_SRC_RGB\"] = 32969] = \"BLEND_SRC_RGB\";\r\n    WebGlConstants[WebGlConstants[\"BLUE_BITS\"] = 3412] = \"BLUE_BITS\";\r\n    WebGlConstants[WebGlConstants[\"BOOL\"] = 35670] = \"BOOL\";\r\n    WebGlConstants[WebGlConstants[\"BOOL_VEC2\"] = 35671] = \"BOOL_VEC2\";\r\n    WebGlConstants[WebGlConstants[\"BOOL_VEC3\"] = 35672] = \"BOOL_VEC3\";\r\n    WebGlConstants[WebGlConstants[\"BOOL_VEC4\"] = 35673] = \"BOOL_VEC4\";\r\n    WebGlConstants[WebGlConstants[\"BROWSER_DEFAULT_WEBGL\"] = 37444] = \"BROWSER_DEFAULT_WEBGL\";\r\n    WebGlConstants[WebGlConstants[\"BUFFER_SIZE\"] = 34660] = \"BUFFER_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"BUFFER_USAGE\"] = 34661] = \"BUFFER_USAGE\";\r\n    WebGlConstants[WebGlConstants[\"BYTE\"] = 5120] = \"BYTE\";\r\n    WebGlConstants[WebGlConstants[\"CCW\"] = 2305] = \"CCW\";\r\n    WebGlConstants[WebGlConstants[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\r\n    WebGlConstants[WebGlConstants[\"COLOR_ATTACHMENT0\"] = 36064] = \"COLOR_ATTACHMENT0\";\r\n    WebGlConstants[WebGlConstants[\"COLOR_BUFFER_BIT\"] = 16384] = \"COLOR_BUFFER_BIT\";\r\n    WebGlConstants[WebGlConstants[\"COLOR_CLEAR_VALUE\"] = 3106] = \"COLOR_CLEAR_VALUE\";\r\n    WebGlConstants[WebGlConstants[\"COLOR_WRITEMASK\"] = 3107] = \"COLOR_WRITEMASK\";\r\n    WebGlConstants[WebGlConstants[\"COMPILE_STATUS\"] = 35713] = \"COMPILE_STATUS\";\r\n    WebGlConstants[WebGlConstants[\"COMPRESSED_TEXTURE_FORMATS\"] = 34467] = \"COMPRESSED_TEXTURE_FORMATS\";\r\n    WebGlConstants[WebGlConstants[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"CONTEXT_LOST_WEBGL\"] = 37442] = \"CONTEXT_LOST_WEBGL\";\r\n    WebGlConstants[WebGlConstants[\"CULL_FACE\"] = 2884] = \"CULL_FACE\";\r\n    WebGlConstants[WebGlConstants[\"CULL_FACE_MODE\"] = 2885] = \"CULL_FACE_MODE\";\r\n    WebGlConstants[WebGlConstants[\"CURRENT_PROGRAM\"] = 35725] = \"CURRENT_PROGRAM\";\r\n    WebGlConstants[WebGlConstants[\"CURRENT_VERTEX_ATTRIB\"] = 34342] = \"CURRENT_VERTEX_ATTRIB\";\r\n    WebGlConstants[WebGlConstants[\"CW\"] = 2304] = \"CW\";\r\n    WebGlConstants[WebGlConstants[\"DECR\"] = 7683] = \"DECR\";\r\n    WebGlConstants[WebGlConstants[\"DECR_WRAP\"] = 34056] = \"DECR_WRAP\";\r\n    WebGlConstants[WebGlConstants[\"DELETE_STATUS\"] = 35712] = \"DELETE_STATUS\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_ATTACHMENT\"] = 36096] = \"DEPTH_ATTACHMENT\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_BITS\"] = 3414] = \"DEPTH_BITS\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_BUFFER_BIT\"] = 256] = \"DEPTH_BUFFER_BIT\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_CLEAR_VALUE\"] = 2931] = \"DEPTH_CLEAR_VALUE\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_COMPONENT\"] = 6402] = \"DEPTH_COMPONENT\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_COMPONENT16\"] = 33189] = \"DEPTH_COMPONENT16\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_FUNC\"] = 2932] = \"DEPTH_FUNC\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_RANGE\"] = 2928] = \"DEPTH_RANGE\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_STENCIL\"] = 34041] = \"DEPTH_STENCIL\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_STENCIL_ATTACHMENT\"] = 33306] = \"DEPTH_STENCIL_ATTACHMENT\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_TEST\"] = 2929] = \"DEPTH_TEST\";\r\n    WebGlConstants[WebGlConstants[\"DEPTH_WRITEMASK\"] = 2930] = \"DEPTH_WRITEMASK\";\r\n    WebGlConstants[WebGlConstants[\"DITHER\"] = 3024] = \"DITHER\";\r\n    WebGlConstants[WebGlConstants[\"DONT_CARE\"] = 4352] = \"DONT_CARE\";\r\n    WebGlConstants[WebGlConstants[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"DYNAMIC_DRAW\"] = 35048] = \"DYNAMIC_DRAW\";\r\n    WebGlConstants[WebGlConstants[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\r\n    WebGlConstants[WebGlConstants[\"ELEMENT_ARRAY_BUFFER_BINDING\"] = 34965] = \"ELEMENT_ARRAY_BUFFER_BINDING\";\r\n    WebGlConstants[WebGlConstants[\"EQUAL\"] = 514] = \"EQUAL\";\r\n    WebGlConstants[WebGlConstants[\"FASTEST\"] = 4353] = \"FASTEST\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT\"] = 5126] = \"FLOAT\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_MAT2\"] = 35674] = \"FLOAT_MAT2\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_MAT3\"] = 35675] = \"FLOAT_MAT3\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_MAT4\"] = 35676] = \"FLOAT_MAT4\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_VEC2\"] = 35664] = \"FLOAT_VEC2\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_VEC3\"] = 35665] = \"FLOAT_VEC3\";\r\n    WebGlConstants[WebGlConstants[\"FLOAT_VEC4\"] = 35666] = \"FLOAT_VEC4\";\r\n    WebGlConstants[WebGlConstants[\"FRAGMENT_SHADER\"] = 35632] = \"FRAGMENT_SHADER\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER\"] = 36160] = \"FRAMEBUFFER\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\"] = 36049] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\"] = 36048] = \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\"] = 36051] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\"] = 36050] = \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_BINDING\"] = 36006] = \"FRAMEBUFFER_BINDING\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_COMPLETE\"] = 36053] = \"FRAMEBUFFER_COMPLETE\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\"] = 36054] = \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\"] = 36057] = \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\"] = 36055] = \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\r\n    WebGlConstants[WebGlConstants[\"FRAMEBUFFER_UNSUPPORTED\"] = 36061] = \"FRAMEBUFFER_UNSUPPORTED\";\r\n    WebGlConstants[WebGlConstants[\"FRONT\"] = 1028] = \"FRONT\";\r\n    WebGlConstants[WebGlConstants[\"FRONT_AND_BACK\"] = 1032] = \"FRONT_AND_BACK\";\r\n    WebGlConstants[WebGlConstants[\"FRONT_FACE\"] = 2886] = \"FRONT_FACE\";\r\n    WebGlConstants[WebGlConstants[\"FUNC_ADD\"] = 32774] = \"FUNC_ADD\";\r\n    WebGlConstants[WebGlConstants[\"FUNC_REVERSE_SUBTRACT\"] = 32779] = \"FUNC_REVERSE_SUBTRACT\";\r\n    WebGlConstants[WebGlConstants[\"FUNC_SUBTRACT\"] = 32778] = \"FUNC_SUBTRACT\";\r\n    WebGlConstants[WebGlConstants[\"GENERATE_MIPMAP_HINT\"] = 33170] = \"GENERATE_MIPMAP_HINT\";\r\n    WebGlConstants[WebGlConstants[\"GEQUAL\"] = 518] = \"GEQUAL\";\r\n    WebGlConstants[WebGlConstants[\"GREATER\"] = 516] = \"GREATER\";\r\n    WebGlConstants[WebGlConstants[\"GREEN_BITS\"] = 3411] = \"GREEN_BITS\";\r\n    WebGlConstants[WebGlConstants[\"HIGH_FLOAT\"] = 36338] = \"HIGH_FLOAT\";\r\n    WebGlConstants[WebGlConstants[\"HIGH_INT\"] = 36341] = \"HIGH_INT\";\r\n    WebGlConstants[WebGlConstants[\"INCR\"] = 7682] = \"INCR\";\r\n    WebGlConstants[WebGlConstants[\"INCR_WRAP\"] = 34055] = \"INCR_WRAP\";\r\n    WebGlConstants[WebGlConstants[\"INFO_LOG_LENGTH\"] = 35716] = \"INFO_LOG_LENGTH\";\r\n    WebGlConstants[WebGlConstants[\"INT\"] = 5124] = \"INT\";\r\n    WebGlConstants[WebGlConstants[\"INT_VEC2\"] = 35667] = \"INT_VEC2\";\r\n    WebGlConstants[WebGlConstants[\"INT_VEC3\"] = 35668] = \"INT_VEC3\";\r\n    WebGlConstants[WebGlConstants[\"INT_VEC4\"] = 35669] = \"INT_VEC4\";\r\n    WebGlConstants[WebGlConstants[\"INVALID_ENUM\"] = 1280] = \"INVALID_ENUM\";\r\n    WebGlConstants[WebGlConstants[\"INVALID_FRAMEBUFFER_OPERATION\"] = 1286] = \"INVALID_FRAMEBUFFER_OPERATION\";\r\n    WebGlConstants[WebGlConstants[\"INVALID_OPERATION\"] = 1282] = \"INVALID_OPERATION\";\r\n    WebGlConstants[WebGlConstants[\"INVALID_VALUE\"] = 1281] = \"INVALID_VALUE\";\r\n    WebGlConstants[WebGlConstants[\"INVERT\"] = 5386] = \"INVERT\";\r\n    WebGlConstants[WebGlConstants[\"KEEP\"] = 7680] = \"KEEP\";\r\n    WebGlConstants[WebGlConstants[\"LEQUAL\"] = 515] = \"LEQUAL\";\r\n    WebGlConstants[WebGlConstants[\"LESS\"] = 513] = \"LESS\";\r\n    WebGlConstants[WebGlConstants[\"LINEAR\"] = 9729] = \"LINEAR\";\r\n    WebGlConstants[WebGlConstants[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\r\n    WebGlConstants[WebGlConstants[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\r\n    WebGlConstants[WebGlConstants[\"LINES\"] = 1] = \"LINES\";\r\n    WebGlConstants[WebGlConstants[\"LINE_LOOP\"] = 2] = \"LINE_LOOP\";\r\n    WebGlConstants[WebGlConstants[\"LINE_STRIP\"] = 3] = \"LINE_STRIP\";\r\n    WebGlConstants[WebGlConstants[\"LINE_WIDTH\"] = 2849] = \"LINE_WIDTH\";\r\n    WebGlConstants[WebGlConstants[\"LINK_STATUS\"] = 35714] = \"LINK_STATUS\";\r\n    WebGlConstants[WebGlConstants[\"LOW_FLOAT\"] = 36336] = \"LOW_FLOAT\";\r\n    WebGlConstants[WebGlConstants[\"LOW_INT\"] = 36339] = \"LOW_INT\";\r\n    WebGlConstants[WebGlConstants[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\r\n    WebGlConstants[WebGlConstants[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"MAX_COMBINED_TEXTURE_IMAGE_UNITS\"] = 35661] = \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_CUBE_MAP_TEXTURE_SIZE\"] = 34076] = \"MAX_CUBE_MAP_TEXTURE_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"MAX_FRAGMENT_UNIFORM_VECTORS\"] = 36349] = \"MAX_FRAGMENT_UNIFORM_VECTORS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_RENDERBUFFER_SIZE\"] = 34024] = \"MAX_RENDERBUFFER_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"MAX_TEXTURE_IMAGE_UNITS\"] = 34930] = \"MAX_TEXTURE_IMAGE_UNITS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_TEXTURE_SIZE\"] = 3379] = \"MAX_TEXTURE_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"MAX_VARYING_VECTORS\"] = 36348] = \"MAX_VARYING_VECTORS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_VERTEX_ATTRIBS\"] = 34921] = \"MAX_VERTEX_ATTRIBS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_VERTEX_TEXTURE_IMAGE_UNITS\"] = 35660] = \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_VERTEX_UNIFORM_VECTORS\"] = 36347] = \"MAX_VERTEX_UNIFORM_VECTORS\";\r\n    WebGlConstants[WebGlConstants[\"MAX_VIEWPORT_DIMS\"] = 3386] = \"MAX_VIEWPORT_DIMS\";\r\n    WebGlConstants[WebGlConstants[\"MEDIUM_FLOAT\"] = 36337] = \"MEDIUM_FLOAT\";\r\n    WebGlConstants[WebGlConstants[\"MEDIUM_INT\"] = 36340] = \"MEDIUM_INT\";\r\n    WebGlConstants[WebGlConstants[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\r\n    WebGlConstants[WebGlConstants[\"NEAREST\"] = 9728] = \"NEAREST\";\r\n    WebGlConstants[WebGlConstants[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\r\n    WebGlConstants[WebGlConstants[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\r\n    WebGlConstants[WebGlConstants[\"NEVER\"] = 512] = \"NEVER\";\r\n    WebGlConstants[WebGlConstants[\"NICEST\"] = 4354] = \"NICEST\";\r\n    WebGlConstants[WebGlConstants[\"NONE\"] = 0] = \"NONE\";\r\n    WebGlConstants[WebGlConstants[\"NOTEQUAL\"] = 517] = \"NOTEQUAL\";\r\n    WebGlConstants[WebGlConstants[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    WebGlConstants[WebGlConstants[\"NUM_COMPRESSED_TEXTURE_FORMATS\"] = 34466] = \"NUM_COMPRESSED_TEXTURE_FORMATS\";\r\n    WebGlConstants[WebGlConstants[\"ONE\"] = 1] = \"ONE\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"OUT_OF_MEMORY\"] = 1285] = \"OUT_OF_MEMORY\";\r\n    WebGlConstants[WebGlConstants[\"PACK_ALIGNMENT\"] = 3333] = \"PACK_ALIGNMENT\";\r\n    WebGlConstants[WebGlConstants[\"POINTS\"] = 0] = \"POINTS\";\r\n    WebGlConstants[WebGlConstants[\"POLYGON_OFFSET_FACTOR\"] = 32824] = \"POLYGON_OFFSET_FACTOR\";\r\n    WebGlConstants[WebGlConstants[\"POLYGON_OFFSET_FILL\"] = 32823] = \"POLYGON_OFFSET_FILL\";\r\n    WebGlConstants[WebGlConstants[\"POLYGON_OFFSET_UNITS\"] = 10752] = \"POLYGON_OFFSET_UNITS\";\r\n    WebGlConstants[WebGlConstants[\"RED_BITS\"] = 3410] = \"RED_BITS\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER\"] = 36161] = \"RENDERBUFFER\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_ALPHA_SIZE\"] = 36179] = \"RENDERBUFFER_ALPHA_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_BINDING\"] = 36007] = \"RENDERBUFFER_BINDING\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_BLUE_SIZE\"] = 36178] = \"RENDERBUFFER_BLUE_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_DEPTH_SIZE\"] = 36180] = \"RENDERBUFFER_DEPTH_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_GREEN_SIZE\"] = 36177] = \"RENDERBUFFER_GREEN_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_HEIGHT\"] = 36163] = \"RENDERBUFFER_HEIGHT\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_INTERNAL_FORMAT\"] = 36164] = \"RENDERBUFFER_INTERNAL_FORMAT\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_RED_SIZE\"] = 36176] = \"RENDERBUFFER_RED_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_STENCIL_SIZE\"] = 36181] = \"RENDERBUFFER_STENCIL_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"RENDERBUFFER_WIDTH\"] = 36162] = \"RENDERBUFFER_WIDTH\";\r\n    WebGlConstants[WebGlConstants[\"RENDERER\"] = 7937] = \"RENDERER\";\r\n    WebGlConstants[WebGlConstants[\"REPEAT\"] = 10497] = \"REPEAT\";\r\n    WebGlConstants[WebGlConstants[\"REPLACE\"] = 7681] = \"REPLACE\";\r\n    WebGlConstants[WebGlConstants[\"RGB\"] = 6407] = \"RGB\";\r\n    WebGlConstants[WebGlConstants[\"RGB5_A1\"] = 32855] = \"RGB5_A1\";\r\n    WebGlConstants[WebGlConstants[\"RGB565\"] = 36194] = \"RGB565\";\r\n    WebGlConstants[WebGlConstants[\"RGBA\"] = 6408] = \"RGBA\";\r\n    WebGlConstants[WebGlConstants[\"RGBA4\"] = 32854] = \"RGBA4\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLER_2D\"] = 35678] = \"SAMPLER_2D\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLER_CUBE\"] = 35680] = \"SAMPLER_CUBE\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLES\"] = 32937] = \"SAMPLES\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLE_ALPHA_TO_COVERAGE\"] = 32926] = \"SAMPLE_ALPHA_TO_COVERAGE\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLE_BUFFERS\"] = 32936] = \"SAMPLE_BUFFERS\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLE_COVERAGE\"] = 32928] = \"SAMPLE_COVERAGE\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLE_COVERAGE_INVERT\"] = 32939] = \"SAMPLE_COVERAGE_INVERT\";\r\n    WebGlConstants[WebGlConstants[\"SAMPLE_COVERAGE_VALUE\"] = 32938] = \"SAMPLE_COVERAGE_VALUE\";\r\n    WebGlConstants[WebGlConstants[\"SCISSOR_BOX\"] = 3088] = \"SCISSOR_BOX\";\r\n    WebGlConstants[WebGlConstants[\"SCISSOR_TEST\"] = 3089] = \"SCISSOR_TEST\";\r\n    WebGlConstants[WebGlConstants[\"SHADER_COMPILER\"] = 36346] = \"SHADER_COMPILER\";\r\n    WebGlConstants[WebGlConstants[\"SHADER_SOURCE_LENGTH\"] = 35720] = \"SHADER_SOURCE_LENGTH\";\r\n    WebGlConstants[WebGlConstants[\"SHADER_TYPE\"] = 35663] = \"SHADER_TYPE\";\r\n    WebGlConstants[WebGlConstants[\"SHADING_LANGUAGE_VERSION\"] = 35724] = \"SHADING_LANGUAGE_VERSION\";\r\n    WebGlConstants[WebGlConstants[\"SHORT\"] = 5122] = \"SHORT\";\r\n    WebGlConstants[WebGlConstants[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\r\n    WebGlConstants[WebGlConstants[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\r\n    WebGlConstants[WebGlConstants[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\r\n    WebGlConstants[WebGlConstants[\"STATIC_DRAW\"] = 35044] = \"STATIC_DRAW\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_ATTACHMENT\"] = 36128] = \"STENCIL_ATTACHMENT\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_FAIL\"] = 34817] = \"STENCIL_BACK_FAIL\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_FUNC\"] = 34816] = \"STENCIL_BACK_FUNC\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_PASS_DEPTH_FAIL\"] = 34818] = \"STENCIL_BACK_PASS_DEPTH_FAIL\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_PASS_DEPTH_PASS\"] = 34819] = \"STENCIL_BACK_PASS_DEPTH_PASS\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_REF\"] = 36003] = \"STENCIL_BACK_REF\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_VALUE_MASK\"] = 36004] = \"STENCIL_BACK_VALUE_MASK\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BACK_WRITEMASK\"] = 36005] = \"STENCIL_BACK_WRITEMASK\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BITS\"] = 3415] = \"STENCIL_BITS\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_BUFFER_BIT\"] = 1024] = \"STENCIL_BUFFER_BIT\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_CLEAR_VALUE\"] = 2961] = \"STENCIL_CLEAR_VALUE\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_FAIL\"] = 2964] = \"STENCIL_FAIL\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_FUNC\"] = 2962] = \"STENCIL_FUNC\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_INDEX\"] = 6401] = \"STENCIL_INDEX\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_INDEX8\"] = 36168] = \"STENCIL_INDEX8\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_PASS_DEPTH_FAIL\"] = 2965] = \"STENCIL_PASS_DEPTH_FAIL\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_PASS_DEPTH_PASS\"] = 2966] = \"STENCIL_PASS_DEPTH_PASS\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_REF\"] = 2967] = \"STENCIL_REF\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_TEST\"] = 2960] = \"STENCIL_TEST\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_VALUE_MASK\"] = 2963] = \"STENCIL_VALUE_MASK\";\r\n    WebGlConstants[WebGlConstants[\"STENCIL_WRITEMASK\"] = 2968] = \"STENCIL_WRITEMASK\";\r\n    WebGlConstants[WebGlConstants[\"STREAM_DRAW\"] = 35040] = \"STREAM_DRAW\";\r\n    WebGlConstants[WebGlConstants[\"SUBPIXEL_BITS\"] = 3408] = \"SUBPIXEL_BITS\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE\"] = 5890] = \"TEXTURE\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE0\"] = 33984] = \"TEXTURE0\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE1\"] = 33985] = \"TEXTURE1\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE2\"] = 33986] = \"TEXTURE2\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE3\"] = 33987] = \"TEXTURE3\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE4\"] = 33988] = \"TEXTURE4\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE5\"] = 33989] = \"TEXTURE5\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE6\"] = 33990] = \"TEXTURE6\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE7\"] = 33991] = \"TEXTURE7\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE8\"] = 33992] = \"TEXTURE8\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE9\"] = 33993] = \"TEXTURE9\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE10\"] = 33994] = \"TEXTURE10\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE11\"] = 33995] = \"TEXTURE11\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE12\"] = 33996] = \"TEXTURE12\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE13\"] = 33997] = \"TEXTURE13\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE14\"] = 33998] = \"TEXTURE14\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE15\"] = 33999] = \"TEXTURE15\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE16\"] = 34000] = \"TEXTURE16\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE17\"] = 34001] = \"TEXTURE17\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE18\"] = 34002] = \"TEXTURE18\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE19\"] = 34003] = \"TEXTURE19\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE20\"] = 34004] = \"TEXTURE20\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE21\"] = 34005] = \"TEXTURE21\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE22\"] = 34006] = \"TEXTURE22\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE23\"] = 34007] = \"TEXTURE23\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE24\"] = 34008] = \"TEXTURE24\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE25\"] = 34009] = \"TEXTURE25\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE26\"] = 34010] = \"TEXTURE26\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE27\"] = 34011] = \"TEXTURE27\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE28\"] = 34012] = \"TEXTURE28\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE29\"] = 34013] = \"TEXTURE29\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE30\"] = 34014] = \"TEXTURE30\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE31\"] = 34015] = \"TEXTURE31\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_2D\"] = 3553] = \"TEXTURE_2D\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_BINDING_2D\"] = 32873] = \"TEXTURE_BINDING_2D\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_BINDING_CUBE_MAP\"] = 34068] = \"TEXTURE_BINDING_CUBE_MAP\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP\"] = 34067] = \"TEXTURE_CUBE_MAP\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_NEGATIVE_X\"] = 34070] = \"TEXTURE_CUBE_MAP_NEGATIVE_X\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_NEGATIVE_Y\"] = 34072] = \"TEXTURE_CUBE_MAP_NEGATIVE_Y\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_NEGATIVE_Z\"] = 34074] = \"TEXTURE_CUBE_MAP_NEGATIVE_Z\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_POSITIVE_X\"] = 34069] = \"TEXTURE_CUBE_MAP_POSITIVE_X\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_POSITIVE_Y\"] = 34071] = \"TEXTURE_CUBE_MAP_POSITIVE_Y\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_CUBE_MAP_POSITIVE_Z\"] = 34073] = \"TEXTURE_CUBE_MAP_POSITIVE_Z\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_MAG_FILTER\"] = 10240] = \"TEXTURE_MAG_FILTER\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_MIN_FILTER\"] = 10241] = \"TEXTURE_MIN_FILTER\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_WRAP_S\"] = 10242] = \"TEXTURE_WRAP_S\";\r\n    WebGlConstants[WebGlConstants[\"TEXTURE_WRAP_T\"] = 10243] = \"TEXTURE_WRAP_T\";\r\n    WebGlConstants[WebGlConstants[\"TRIANGLES\"] = 4] = \"TRIANGLES\";\r\n    WebGlConstants[WebGlConstants[\"TRIANGLE_FAN\"] = 6] = \"TRIANGLE_FAN\";\r\n    WebGlConstants[WebGlConstants[\"TRIANGLE_STRIP\"] = 5] = \"TRIANGLE_STRIP\";\r\n    WebGlConstants[WebGlConstants[\"UNPACK_ALIGNMENT\"] = 3317] = \"UNPACK_ALIGNMENT\";\r\n    WebGlConstants[WebGlConstants[\"UNPACK_COLORSPACE_CONVERSION_WEBGL\"] = 37443] = \"UNPACK_COLORSPACE_CONVERSION_WEBGL\";\r\n    WebGlConstants[WebGlConstants[\"UNPACK_FLIP_Y_WEBGL\"] = 37440] = \"UNPACK_FLIP_Y_WEBGL\";\r\n    WebGlConstants[WebGlConstants[\"UNPACK_PREMULTIPLY_ALPHA_WEBGL\"] = 37441] = \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_SHORT_4_4_4_4\"] = 32819] = \"UNSIGNED_SHORT_4_4_4_4\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_SHORT_5_5_5_1\"] = 32820] = \"UNSIGNED_SHORT_5_5_5_1\";\r\n    WebGlConstants[WebGlConstants[\"UNSIGNED_SHORT_5_6_5\"] = 33635] = \"UNSIGNED_SHORT_5_6_5\";\r\n    WebGlConstants[WebGlConstants[\"VALIDATE_STATUS\"] = 35715] = \"VALIDATE_STATUS\";\r\n    WebGlConstants[WebGlConstants[\"VENDOR\"] = 7936] = \"VENDOR\";\r\n    WebGlConstants[WebGlConstants[\"VERSION\"] = 7938] = \"VERSION\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\"] = 34975] = \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_ENABLED\"] = 34338] = \"VERTEX_ATTRIB_ARRAY_ENABLED\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_NORMALIZED\"] = 34922] = \"VERTEX_ATTRIB_ARRAY_NORMALIZED\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_POINTER\"] = 34373] = \"VERTEX_ATTRIB_ARRAY_POINTER\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_SIZE\"] = 34339] = \"VERTEX_ATTRIB_ARRAY_SIZE\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_STRIDE\"] = 34340] = \"VERTEX_ATTRIB_ARRAY_STRIDE\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_ATTRIB_ARRAY_TYPE\"] = 34341] = \"VERTEX_ATTRIB_ARRAY_TYPE\";\r\n    WebGlConstants[WebGlConstants[\"VERTEX_SHADER\"] = 35633] = \"VERTEX_SHADER\";\r\n    WebGlConstants[WebGlConstants[\"VIEWPORT\"] = 2978] = \"VIEWPORT\";\r\n    WebGlConstants[WebGlConstants[\"ZERO\"] = 0] = \"ZERO\";\r\n})(WebGlConstants || (WebGlConstants = {}));\n\n//GLTF\n\nconst createVec2 = () => new Float64Array(2);\r\nconst createVec4 = () => new Float64Array(4);\r\nconst createVec3 = () => new Float64Array(3);\r\nconst createMat4 = () => new Float64Array(16);\r\nconst createQuat = () => new Float64Array(4);\r\nconst createIdentityMat4 = () => mat4.identity(createMat4());\n\nconst getTrsFromMatrix = (matrix) => {\r\n    const scale = mat4.getScaling(createVec3(), matrix);\r\n    const scaledMatrix = mat4.scale(createMat4(), matrix, [1 / scale[0], 1 / scale[1], 1 / scale[2]]);\r\n    return {\r\n        translation: mat4.getTranslation(createVec3(), matrix),\r\n        rotation: mat4.getRotation(createVec4(), scaledMatrix),\r\n        scale\r\n    };\r\n};\r\nconst getMatrixFromTrs = (trs) => mat4.fromRotationTranslationScale(createMat4(), trs.rotation, trs.translation, trs.scale);\r\nconst getModelMatrix = (parentModelMatrix) => (localMatrix) => parentModelMatrix\r\n    ? mat4.multiply(createMat4(), parentModelMatrix, localMatrix)\r\n    : localMatrix.slice();\r\nconst getNormalMatrix = (modelMatrix) => mat4.transpose(mat4.create(), mat4.invert(mat4.create(), modelMatrix));\r\nconst getViewMatrices = (camera) => (modelMatrix) => {\r\n    const modelViewMatrix = mat4.multiply(mat4.create(), camera.view, modelMatrix);\r\n    const modelViewProjectionMatrix = mat4.multiply(mat4.create(), camera.projection, modelViewMatrix);\r\n    return {\r\n        modelViewMatrix,\r\n        modelViewProjectionMatrix\r\n    };\r\n};\r\nconst updateTransform = (opts) => (parentModelMatrix) => (transform) => {\r\n    const localMatrix = opts.updateLocal ? getMatrixFromTrs(transform.trs) : transform.localMatrix;\r\n    const modelMatrix = opts.updateModel ? getModelMatrix(parentModelMatrix)(localMatrix) : transform.modelMatrix;\r\n    const normalMatrix = opts.updateModel && transform.normalMatrix\r\n        ? getNormalMatrix(modelMatrix)\r\n        : undefined;\r\n    const { modelViewMatrix, modelViewProjectionMatrix } = opts.updateView ? getViewMatrices(opts.camera)(modelMatrix) : transform;\r\n    return Object.assign({}, transform, {\r\n        localMatrix, modelMatrix, normalMatrix, modelViewMatrix, modelViewProjectionMatrix\r\n    });\r\n};\n\nconst getOrthographicProjection = (cam) => {\r\n    const values = createMat4();\r\n    const r = cam.xmag;\r\n    const t = cam.ymag;\r\n    const n = cam.znear;\r\n    const f = cam.zfar;\r\n    values[0] = 1 / r;\r\n    values[5] = 1 / t;\r\n    values[10] = 2 / (n - f);\r\n    values[14] = (f + n) / (n - f);\r\n    values[15] = 1;\r\n    return values;\r\n};\r\nconst getPerspectiveProjection = (cam) => {\r\n    const values = createMat4();\r\n    const a = cam.aspectRatio;\r\n    const y = cam.yfov;\r\n    const n = cam.znear;\r\n    const f = cam.zfar; //if this is undefined, use infinite projection\r\n    values[0] = 1 / (a * Math.tan(.5 * y));\r\n    values[5] = 1 / (Math.tan(.5 * y));\r\n    values[10] = f === undefined ? -1 : (f + n) / (n - f);\r\n    values[11] = -1;\r\n    values[14] = f === undefined ? (-2 * n) : (2 * f * n) / (n - f);\r\n    return values;\r\n};\r\nconst getCameraProjection = (cam) => cam.kind == CameraKind.ORTHOGRAPHIC\r\n    ? getOrthographicProjection(cam)\r\n    : getPerspectiveProjection(cam);\r\nconst getCameraView = (modelMatrix) => mat4.invert(createMat4(), modelMatrix);\r\nconst getCameraPosition = (modelMatrix) => mat4.getTranslation(createVec3(), modelMatrix);\r\nconst updateCameraWithTransform = (transform) => (camera) => Object.assign({}, camera, {\r\n    position: mat4.getTranslation(createVec3(), transform.localMatrix),\r\n    view: getCameraView(transform.modelMatrix),\r\n    projection: getCameraProjection(camera)\r\n});\n\n//filter stuff could use some testing\r\nconst filterNodeDeep = (fn) => (node) => {\r\n    if (node === undefined || !fn(node)) {\r\n        return undefined;\r\n    }\r\n    return !node.children\r\n        ? node\r\n        : Object.assign({}, node, { children: node.children.map(filterNodeDeep(fn)).filter(n => n) });\r\n};\r\nconst filterNodesDeep = (fn) => (nodes) => nodes\r\n    .map(filterNodeDeep(fn))\r\n    .filter(n => n);\r\n//Side effects\r\n//Note -forEach allows returning true to exit early\r\nconst forEachNode = (fn) => (node) => {\r\n    if (fn(node) !== true && node.children) {\r\n        node.children.forEach(forEachNode(fn));\r\n    }\r\n};\r\nconst forEachNodes = (fn) => (nodes) => nodes.forEach(forEachNode(fn));\r\n//Helpers\r\nconst countNodes = (nodes) => {\r\n    let count = 0;\r\n    forEachNodes(() => (count++, null))(nodes);\r\n    return count;\r\n};\r\nconst findNode = (pred) => (nodesOrNode) => {\r\n    let targetNode;\r\n    const fn = (node) => {\r\n        if (pred(node)) {\r\n            targetNode = node;\r\n            return true;\r\n        }\r\n    };\r\n    if (Array.isArray(nodesOrNode)) {\r\n        forEachNodes(fn)(nodesOrNode);\r\n    }\r\n    else {\r\n        forEachNode(fn)(nodesOrNode);\r\n    }\r\n    return targetNode;\r\n};\r\n//Note - the immutability guarantee is the responsibility of the function - after it returns, the children are _replaced_\r\nconst mapNode = (fn) => (node) => {\r\n    const n = fn(node);\r\n    return !n.children\r\n        ? n\r\n        : Object.assign(n, { children: n.children.map(mapNode(fn)) });\r\n};\r\nconst mapNodeWithParent = (fn) => (parent) => (node) => {\r\n    const n = fn(parent)(node);\r\n    return !n.children\r\n        ? n\r\n        : Object.assign(n, { children: n.children.map(mapNodeWithParent(fn)(n)) });\r\n};\r\nconst mapNodesWithParent = (fn) => (parent) => (nodes) => nodes.map(mapNodeWithParent(fn)(parent));\r\nconst mapNodes = (fn) => (nodes) => nodes.map(mapNode(fn));\r\n//Specific use-cases\r\nconst updateNodeTransforms = (opts) => (parent) => (node) => mapNodeWithParent((_parent) => (_node) => {\r\n    const pModelMatrix = _parent ? _parent.transform.modelMatrix : undefined;\r\n    const t = updateTransform(opts)(pModelMatrix)(_node.transform);\r\n    return Object.assign({}, _node, { transform: t });\r\n})(parent)(node);\r\nconst updateNodeListTransforms = (opts) => (parent) => (nodes) => mapNodesWithParent(updateNodeTransforms(opts))(parent)(nodes);\n\nconst createPointLight = () => { };\n\n//adapted from https://www.geeksforgeeks.org/binary-search/\r\n//returns the left and right bounds if there's no _exact_ match, otherwise, the match\r\nconst binaryFindBounds = (getValue) => (arr) => (x) => {\r\n    const max = arr.length - 1;\r\n    const _withinBounds = ([l, r]) => {\r\n        if (l === r) {\r\n            return false;\r\n        }\r\n        if (l < 0 || r < 1) {\r\n            return false;\r\n        }\r\n        const pValue = getValue(arr[l]);\r\n        const nValue = getValue(arr[r]);\r\n        return (x > pValue && x < nValue);\r\n    };\r\n    const _binarySearch = ([l, r]) => {\r\n        if (r >= l) {\r\n            const mid = 0 | (l + (r - l) / 2);\r\n            const value = getValue(arr[mid]);\r\n            if (value == x) {\r\n                return mid;\r\n            }\r\n            if (_withinBounds([mid - 1, mid])) {\r\n                return [mid - 1, mid];\r\n            }\r\n            if (_withinBounds([mid, mid + 1])) {\r\n                return [mid, mid + 1];\r\n            }\r\n            return (value > x)\r\n                ? _binarySearch([l, mid - 1])\r\n                : _binarySearch([mid + 1, r]);\r\n        }\r\n        return -1;\r\n    };\r\n    return _binarySearch([0, max]);\r\n};\n\nconst interpolate_linear = ({ v0, v1, t }) => {\r\n    if (typeof v0 === \"number\" && typeof v1 === \"number\") {\r\n        return v0 * (1 - t) + v1 * t;\r\n    }\r\n    const xs0 = v0;\r\n    const xs1 = v1;\r\n    if (xs0.length !== xs1.length) {\r\n        throw new Error(\"different length of animation values\");\r\n    }\r\n    switch (xs0.length) {\r\n        case 1: return interpolate_linear({ v0: xs0[0], v1: xs1[0], t });\r\n        case 2: return vec2.lerp(vec2.create(), xs0, xs1, t);\r\n        case 3: return vec3.lerp(vec3.create(), xs0, xs1, t);\r\n        case 4: return vec4.lerp(vec4.create(), xs0, xs1, t);\r\n    }\r\n};\r\nconst interpolateKeyframes = ({ k0, k1, time, interpolation, targetPath }) => {\r\n    const v0 = k0.values;\r\n    const v1 = k1.values;\r\n    const t = (time - k0.timing) / (k1.timing - k0.timing); //get t as a percentage of timing between k0 and k1: https://math.stackexchange.com/questions/754130/find-what-percent-x-is-between-two-numbers\r\n    switch (interpolation) {\r\n        case GltfAnimationInterpolation.LINEAR: return targetPath === GltfAnimationTargetPath.ROTATION\r\n            ? quat.slerp(quat.create(), v0, v1, t)\r\n            : interpolate_linear({ v0, v1, t });\r\n        case GltfAnimationInterpolation.STEP: return v0;\r\n        case GltfAnimationInterpolation.CUBICSPLINE: throw new Error(\"cubicspline is not supported yet!\");\r\n        default: throw new Error(\"unsupported interpolation \");\r\n    }\r\n};\r\nconst findKeyframeBounds = binaryFindBounds((k) => k.timing);\n\nconst GLTF_PARSE_ACCESSOR_TYPE_SIZE = {\r\n    'SCALAR': 1,\r\n    'VEC2': 2,\r\n    'VEC3': 3,\r\n    'VEC4': 4,\r\n    'MAT2': 4,\r\n    'MAT3': 9,\r\n    'MAT4': 16\r\n};\r\nconst GLTF_PARSE_COMPONENT_BYTE_SIZE = {\r\n    [WebGlConstants.BYTE]: 1,\r\n    [WebGlConstants.UNSIGNED_BYTE]: 1,\r\n    [WebGlConstants.SHORT]: 2,\r\n    [WebGlConstants.UNSIGNED_SHORT]: 2,\r\n    [WebGlConstants.UNSIGNED_INT]: 4,\r\n    [WebGlConstants.FLOAT]: 4\r\n};\n\nconst getComponentTypedData = ({ buffer, componentType }) => {\r\n    switch (componentType) {\r\n        case WebGlConstants.BYTE: return new Int8Array(buffer);\r\n        case WebGlConstants.UNSIGNED_BYTE: return new Uint8Array(buffer);\r\n        case WebGlConstants.SHORT: return new Int16Array(buffer);\r\n        case WebGlConstants.UNSIGNED_SHORT: return new Uint16Array(buffer);\r\n        case WebGlConstants.UNSIGNED_INT: return new Uint32Array(buffer);\r\n        case WebGlConstants.FLOAT: return new Float32Array(buffer);\r\n        default: throw new Error(\"unknown accessor component type!\");\r\n    }\r\n};\r\nconst getTypedDataFromInfo = ({ info, buffers }) => (info.bufferViewIndex === undefined)\r\n    ? getComponentTypedData({\r\n        buffer: new ArrayBuffer(info.bufferLength),\r\n        componentType: info.componentType\r\n    })\r\n    : getComponentTypedData({\r\n        buffer: buffers[info.bufferIndex].slice(info.byteOffset, info.byteOffset + info.bufferLength),\r\n        componentType: info.componentType\r\n    });\r\nconst GLTF_PARSE_getAccessorTypedData = ({ gltf, info, buffers }) => {\r\n    const values = getTypedDataFromInfo({ info, buffers });\r\n    if (info.sparse) {\r\n        const typeCount = GLTF_PARSE_ACCESSOR_TYPE_SIZE[info.accessorType];\r\n        const sparseIndices = getTypedDataFromInfo({ info: info.sparse.indices, buffers });\r\n        const sparseValues = getTypedDataFromInfo({ info: info.sparse.values, buffers });\r\n        sparseIndices\r\n            .map(value => value * typeCount)\r\n            .forEach((indexOfValue, valueIndex) => {\r\n            for (let i = 0; i < typeCount; i++) {\r\n                values[indexOfValue + i] = sparseValues[i + (valueIndex * typeCount)];\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n};\r\n/*\r\nexport const GLTF_PARSE_createTypedData = ({ gltf, buffers}: { gltf: GLTF_ORIGINAL, buffers: Array<ArrayBuffer>}) => {\r\n\n    const accessorData = new Map<number, TypedNumberArray>();\r\n\n    const isAttribute = (accessorId:number):boolean => {\r\n        if(!gltf.nodes || !gltf.meshes || !gltf.nodes.length || !gltf.meshes.length) {\r\n            return false;\r\n        }\r\n\n        return gltf.nodes.findIndex(node => {\r\n            if(node.mesh === undefined) {\r\n                return false;\r\n            }\r\n\n            return gltf.meshes[node.mesh].primitives.findIndex(p =>\r\n                Object.keys(p.attributes).findIndex(k => p[k] === accessorId) !== -1\r\n            ) !== -1\r\n        }) !== -1\r\n    }\r\n\n    const isImage = (accessorId:number):boolean => {\r\n        if(!gltf.images || !gltf.images.length) {\r\n            return false;\r\n        }\r\n\n        return gltf.images.findIndex(image =>\r\n            image.bufferView === gltf.accessors[accessorId].bufferView\r\n        ) !== -1\r\n    }\r\n\n    gltf.accessors\r\n        .forEach((accessor, accessorId) => {\r\n            if(!isAttribute(accessorId) && !isImage(accessorId)) {\r\n                const values = GLTF_PARSE_getAccessorTypedData({gltf, buffers, accessorId});\r\n                accessorData.set(accessorId, values);\r\n\n                console.log(\"created typed data for accessor\", accessorId);\r\n            } else {\r\n                console.log(\"skipping typed data for accessor\", accessorId);\r\n            }\r\n\n        });\r\n\n    return accessorData;\r\n}\r\n */\n\nconst getAccessorInfo = ({ gltf, accessor }) => {\r\n    const byteLength = (accessor.count * GLTF_PARSE_ACCESSOR_TYPE_SIZE[accessor.type] * GLTF_PARSE_COMPONENT_BYTE_SIZE[accessor.componentType]);\r\n    if (accessor.bufferView === undefined) {\r\n        if (accessor.sparse === undefined) {\r\n            throw new Error(\"accessor must either be sparse or have a buffer view\");\r\n        }\r\n        return {\r\n            bufferLength: byteLength,\r\n            componentType: accessor.componentType,\r\n            accessorType: accessor.type\r\n        };\r\n    }\r\n    const bufferView = gltf.bufferViews[accessor.bufferView];\r\n    const byteOffset = (bufferView.byteOffset === undefined ? 0 : bufferView.byteOffset) + (accessor.byteOffset === undefined ? 0 : accessor.byteOffset);\r\n    const byteStride = bufferView.byteStride ? bufferView.byteStride : 0;\r\n    const byteStrideLength = byteStride * GLTF_PARSE_ACCESSOR_TYPE_SIZE[accessor.type] * GLTF_PARSE_COMPONENT_BYTE_SIZE[accessor.componentType];\r\n    const bufferLength = byteStrideLength + byteLength;\r\n    return {\r\n        bufferLength,\r\n        componentType: accessor.componentType,\r\n        bufferViewIndex: accessor.bufferView,\r\n        bufferIndex: bufferView.buffer,\r\n        byteOffset,\r\n        accessorType: accessor.type\r\n    };\r\n};\r\nconst getSparseAccessorIndicesInfo = ({ gltf, accessor }) => {\r\n    const values = accessor.sparse.indices;\r\n    const byteLength = (accessor.sparse.count * GLTF_PARSE_COMPONENT_BYTE_SIZE[values.componentType]);\r\n    const bufferView = gltf.bufferViews[values.bufferView];\r\n    const byteOffset = (bufferView.byteOffset === undefined ? 0 : bufferView.byteOffset) + (values.byteOffset === undefined ? 0 : values.byteOffset);\r\n    return {\r\n        bufferLength: byteLength,\r\n        componentType: values.componentType,\r\n        bufferViewIndex: accessor.bufferView,\r\n        bufferIndex: bufferView.buffer,\r\n        byteOffset,\r\n        accessorType: accessor.type\r\n    };\r\n};\r\nconst getSparseAccessorValuesInfo = ({ gltf, accessor }) => {\r\n    const values = accessor.sparse.values;\r\n    const byteLength = (accessor.sparse.count * GLTF_PARSE_ACCESSOR_TYPE_SIZE[accessor.type] * GLTF_PARSE_COMPONENT_BYTE_SIZE[accessor.componentType]);\r\n    const bufferView = gltf.bufferViews[values.bufferView];\r\n    const byteOffset = (bufferView.byteOffset === undefined ? 0 : bufferView.byteOffset) + (values.byteOffset === undefined ? 0 : values.byteOffset);\r\n    return {\r\n        bufferLength: byteLength,\r\n        componentType: accessor.componentType,\r\n        bufferViewIndex: accessor.bufferView,\r\n        bufferIndex: bufferView.buffer,\r\n        byteOffset,\r\n        accessorType: accessor.type\r\n    };\r\n};\r\nconst GLTF_PARSE_getAccessorDataInfo = ({ gltf, accessorId }) => {\r\n    const accessor = gltf.accessors[accessorId];\r\n    const info = getAccessorInfo({ gltf, accessor });\r\n    if (accessor.sparse) {\r\n        info.sparse = {\r\n            indices: getSparseAccessorIndicesInfo({ gltf, accessor }),\r\n            values: getSparseAccessorValuesInfo({ gltf, accessor })\r\n        };\r\n    }\r\n    return info;\r\n};\n\nconst GLTF_PARSE_animationPathToString = {\r\n    [GltfAnimationTargetPath.WEIGHTS]: \"weights\",\r\n    [GltfAnimationTargetPath.TRANSLATION]: \"translation\",\r\n    [GltfAnimationTargetPath.ROTATION]: \"rotation\",\r\n    [GltfAnimationTargetPath.SCALE]: \"scale\"\r\n};\r\nconst GLTF_PARSE_animationStringToPath = {\r\n    \"weights\": GltfAnimationTargetPath.WEIGHTS,\r\n    \"translation\": GltfAnimationTargetPath.TRANSLATION,\r\n    \"rotation\": GltfAnimationTargetPath.ROTATION,\r\n    \"scale\": GltfAnimationTargetPath.SCALE,\r\n};\r\nconst GLTF_PARSE_interpolationLookup = {\r\n    \"linear\": GltfAnimationInterpolation.LINEAR,\r\n    \"step\": GltfAnimationInterpolation.STEP,\r\n    \"cubicspline\": GltfAnimationInterpolation.CUBICSPLINE\r\n};\r\nconst GLTF_PARSE_addAnimationIds = ({ gltf, nodes }) => {\r\n    let animationId = 0;\r\n    if (gltf.animations) {\r\n        gltf.animations.forEach(animation => {\r\n            animation\r\n                .channels\r\n                .filter(channel => channel.target.node !== undefined)\r\n                .forEach(channel => {\r\n                mapNodes((node) => {\r\n                    if (node.originalNodeId === channel.target.node && node.animationIds.indexOf(animationId) === -1) {\r\n                        node.animationIds.push(animationId);\r\n                    }\r\n                    return node;\r\n                })(nodes);\r\n                animationId++;\r\n            });\r\n        });\r\n    }\r\n    return nodes;\r\n};\r\nconst GLTF_PARSE_createAnimations = ({ gltf, buffers }) => {\r\n    //load animation list\r\n    const animations = new Map();\r\n    let animationId = 0;\r\n    if (gltf.animations) {\r\n        gltf.animations.forEach(animation => {\r\n            animation\r\n                .channels\r\n                .filter(channel => channel.target.node !== undefined)\r\n                .forEach(channel => {\r\n                const targetPath = GLTF_PARSE_animationStringToPath[channel.target.path.toLowerCase()];\r\n                const sampler = animation.samplers[channel.sampler];\r\n                const interpolation = GLTF_PARSE_interpolationLookup[sampler.interpolation ? sampler.interpolation.toLowerCase() : \"linear\"];\r\n                const timeAccessor = gltf.accessors[sampler.input];\r\n                const timings = GLTF_PARSE_getAccessorTypedData({\r\n                    gltf,\r\n                    buffers,\r\n                    info: GLTF_PARSE_getAccessorDataInfo({ gltf, accessorId: sampler.input })\r\n                });\r\n                const values = GLTF_PARSE_getAccessorTypedData({\r\n                    gltf,\r\n                    buffers,\r\n                    info: GLTF_PARSE_getAccessorDataInfo({ gltf, accessorId: sampler.output })\r\n                });\r\n                const valuesAccessor = gltf.accessors[sampler.output];\r\n                //can't be map() because Array != Float64Array\r\n                let keyframes = new Array(timings.length);\r\n                timings.forEach((timing, index) => {\r\n                    const count = targetPath === GltfAnimationTargetPath.WEIGHTS\r\n                        ? values.length / timings.length //always a scalar and final size will be the number of morph targets times the number of animation frames.\r\n                        : GLTF_PARSE_ACCESSOR_TYPE_SIZE[valuesAccessor.type];\r\n                    keyframes[index] = {\r\n                        timing,\r\n                        values: count === 1\r\n                            ? values[index]\r\n                            : values.subarray(index * count, (index + 1) * count),\r\n                    };\r\n                });\r\n                animations.set(animationId++, {\r\n                    keyframes,\r\n                    interpolation,\r\n                    targetPath,\r\n                    timeMin: timeAccessor.min[0],\r\n                    timeMax: timeAccessor.max[0]\r\n                });\r\n            });\r\n        });\r\n    }\r\n    return animations;\r\n};\n\nconst gltf_setAnimationTime = (animation) => (time) => (node) => {\r\n    const bounds = findKeyframeBounds(animation.keyframes)(time);\r\n    if (bounds === -1) {\r\n        return;\r\n    }\r\n    const values = !Array.isArray(bounds)\r\n        ? animation.keyframes[bounds].values //if it's an exact match there's no need to interpolate\r\n        : interpolateKeyframes({\r\n            k0: animation.keyframes[bounds[0]],\r\n            k1: animation.keyframes[bounds[1]],\r\n            interpolation: animation.interpolation,\r\n            targetPath: animation.targetPath,\r\n            time\r\n        });\r\n    return Object.assign({}, node, (animation.targetPath === GltfAnimationTargetPath.WEIGHTS)\r\n        ? { morphWeights: values }\r\n        : { transform: Object.assign({}, node.transform, {\r\n                trs: Object.assign({}, node.transform.trs, {\r\n                    [GLTF_PARSE_animationPathToString[animation.targetPath]]: values\r\n                })\r\n            })\r\n        });\r\n};\r\n//creates a function that will iterate over all the baked in animations, with a provided timestep\r\nconst gltf_createAnimator = (animations) => ({ loop }) => {\r\n    const totalTimes = new Map();\r\n    animations.forEach((value, key) => totalTimes.set(key, 0));\r\n    let lastTs;\r\n    return (ts) => (nodes) => {\r\n        const dt = lastTs === undefined ? 0 : ((ts - lastTs) / 1000);\r\n        lastTs = ts;\r\n        animations.forEach((animation, key) => {\r\n            const prevTime = totalTimes.get(key);\r\n            let nextTime = prevTime + dt;\r\n            if (loop === true) {\r\n                while (nextTime > animation.timeMax) {\r\n                    nextTime -= animation.timeMax;\r\n                }\r\n            }\r\n            if (nextTime >= animation.timeMin && nextTime <= animation.timeMax) {\r\n                nodes = mapNodes((node) => node.animationIds.indexOf(key) !== -1\r\n                    ? gltf_setAnimationTime(animation)(nextTime)(node)\r\n                    : node)(nodes);\r\n            }\r\n            totalTimes.set(key, nextTime);\r\n        });\r\n        return nodes;\r\n    };\r\n};\n\nconst GLTF_PARSE_attributeNames = [\r\n    \"a_Position\",\r\n    \"a_Normal\",\r\n    \"a_Tangent\",\r\n    \"a_UV\",\r\n    \"a_Color\",\r\n    \"a_Morph_0\",\r\n    \"a_Morph_1\",\r\n    \"a_Morph_2\",\r\n    \"a_Morph_3\",\r\n    \"a_Morph_4\",\r\n    \"a_Morph_5\",\r\n    \"a_Morph_6\",\r\n    \"a_Morph_7\",\r\n    \"a_Skin_Joint\",\r\n    \"a_Skin_Weight\"\r\n];\r\nconst getAccessorStrategy = ({ gltf, accessor, info }) => {\r\n    const typeCount = GLTF_PARSE_ACCESSOR_TYPE_SIZE[accessor.type];\r\n    const bufferView = (accessor.bufferView === undefined)\r\n        ? undefined\r\n        : gltf.bufferViews[accessor.bufferView];\r\n    const stride = (bufferView === undefined || bufferView.byteStride === undefined) ? 0 : bufferView.byteStride;\r\n    return {\r\n        size: typeCount,\r\n        type: accessor.componentType,\r\n        normalized: accessor.normalized === undefined ? false : accessor.normalized,\r\n        stride,\r\n        offset: (info.sparse || !accessor.byteOffset) ? 0 : accessor.byteOffset\r\n        //since we sliced it off already for sparse values, it's always 0 here\r\n    };\r\n};\r\nconst isAttribute = ({ gltf, accessorId }) => {\r\n    if (!gltf.nodes) {\r\n        return false;\r\n    }\r\n    return gltf.nodes.some(node => node.mesh === undefined ? false :\r\n        gltf.meshes[node.mesh].primitives.some(primitive => primitive.indices === accessorId\r\n            || Object.keys(primitive.attributes).some(key => primitive.attributes[key] === accessorId)\r\n            || (primitive.targets && primitive.targets.some(target => Object.keys(target).some(key => target[key] === accessorId)))));\r\n};\r\nconst GLTF_PARSE_createAttributes = ({ gltf, buffers, renderer }) => {\r\n    const bufferViewInfo = new Map();\r\n    const accessorLookup = new Map();\r\n    const indicesList = [];\r\n    if (gltf.meshes) {\r\n        gltf.meshes.forEach(mesh => {\r\n            mesh.primitives.forEach(primitive => {\r\n                if (primitive.indices !== undefined) {\r\n                    indicesList.push(primitive.indices);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    gltf.accessors\r\n        .map((accessor, accessorId) => ({ accessor, accessorId }))\r\n        .filter(({ accessorId }) => isAttribute({ gltf, accessorId }))\r\n        .forEach(({ accessor, accessorId }) => {\r\n        const isElements = indicesList.indexOf(accessorId) === -1 ? false : true;\r\n        const info = GLTF_PARSE_getAccessorDataInfo({ gltf, accessorId });\r\n        const strategy = getAccessorStrategy({ gltf, accessor, info });\r\n        let rendererBufferId, buffer;\r\n        if (accessor.sparse) {\r\n            rendererBufferId = Symbol(`accessor ${accessorId}`);\r\n            buffer = GLTF_PARSE_getAccessorTypedData({\r\n                gltf,\r\n                buffers,\r\n                info\r\n            }).buffer;\r\n        }\r\n        else {\r\n            if (!bufferViewInfo.has(info.bufferViewIndex)) {\r\n                const bufferView = gltf.bufferViews[info.bufferViewIndex];\r\n                const byteOffset = bufferView.byteOffset ? bufferView.byteOffset : 0;\r\n                bufferViewInfo.set(info.bufferViewIndex, {\r\n                    rendererBufferId: Symbol(`${info.bufferViewIndex}`),\r\n                    buffer: buffers[info.bufferIndex].slice(byteOffset, byteOffset + bufferView.byteLength)\r\n                });\r\n            }\r\n            const bvInfo = bufferViewInfo.get(info.bufferViewIndex);\r\n            rendererBufferId = bvInfo.rendererBufferId;\r\n            buffer = bvInfo.buffer;\r\n        }\r\n        renderer.buffers.assign(rendererBufferId)({\r\n            target: isElements ? WebGlConstants.ELEMENT_ARRAY_BUFFER : WebGlConstants.ARRAY_BUFFER,\r\n            usagePattern: WebGlConstants.STATIC_DRAW,\r\n            data: buffer\r\n        });\r\n        accessorLookup.set(accessorId, { strategy, rendererBufferId });\r\n    });\r\n    const vaoIdLookup = new Map();\r\n    return { accessorLookup, vaoIdLookup };\r\n};\n\nconst HAS_PREPPED = Symbol();\r\n//This only happens once and it won't hurt to call when in doubt\r\n//Only used at init/loading\r\nconst prepWebGlRenderer = (renderer) => {\r\n    if (renderer.extras[HAS_PREPPED] !== true) {\r\n        if (renderer.version > 1) {\r\n            throw new Error(\"GLTF Renderering only supports WebGL 1.0 for now\");\r\n        }\r\n        GLTF_PARSE_attributeNames.forEach(aName => {\r\n            renderer.attributes.globalLocations.add(aName);\r\n        });\r\n        renderer.getExtension('OES_standard_derivatives');\r\n        renderer.getExtension('EXT_shader_texture_lod');\r\n        renderer.getExtension('EXT_SRGB');\r\n        renderer.getExtension('OES_element_index_uint'); //only for scifi-helmet...\r\n        renderer.extras[HAS_PREPPED] = true;\r\n    }\r\n};\n\nconst faceTargetFromKey = (key) => {\r\n    switch (key) {\r\n        case \"posX\": return WebGlConstants.TEXTURE_CUBE_MAP_POSITIVE_X;\r\n        case \"negX\": return WebGlConstants.TEXTURE_CUBE_MAP_NEGATIVE_X;\r\n        case \"posY\": return WebGlConstants.TEXTURE_CUBE_MAP_POSITIVE_Y;\r\n        case \"negY\": return WebGlConstants.TEXTURE_CUBE_MAP_NEGATIVE_Y;\r\n        case \"posZ\": return WebGlConstants.TEXTURE_CUBE_MAP_POSITIVE_Z;\r\n        case \"negZ\": return WebGlConstants.TEXTURE_CUBE_MAP_NEGATIVE_Z;\r\n    }\r\n};\r\nconst createTextureSwitcher = (gl) => {\r\n    const activeTextureMap = new Map();\r\n    const _switchTexture = (target) => (samplerIndex) => (texture) => {\r\n        const skipSwitch = activeTextureMap.has(samplerIndex) && (() => {\r\n            const cacheInfo = activeTextureMap.get(samplerIndex);\r\n            return cacheInfo.target === target && cacheInfo.texture === texture;\r\n        })();\r\n        if (!skipSwitch) {\r\n            gl.activeTexture(gl.TEXTURE0 + samplerIndex);\r\n            gl.bindTexture(target, texture);\r\n            activeTextureMap.set(samplerIndex, { target, texture });\r\n        }\r\n        return texture;\r\n    };\r\n    return {\r\n        switchTexture: _switchTexture(WebGlConstants.TEXTURE_2D),\r\n        switchCubeTexture: _switchTexture(WebGlConstants.TEXTURE_CUBE_MAP)\r\n    };\r\n};\r\nconst createTextureFromTarget = (opts) => (targets) => {\r\n    const { gl } = opts;\r\n    const texture = gl.createTexture();\r\n    const bindTarget = WebGlConstants.TEXTURE_2D;\r\n    const dataSize = opts.dataSize || gl.UNSIGNED_BYTE;\r\n    gl.bindTexture(bindTarget, texture);\r\n    opts.setParameters(opts);\r\n    const mipTargets = Array.isArray(targets) ? targets : [targets];\r\n    mipTargets.forEach((target, mipLevel) => {\r\n        if (target instanceof Element) {\r\n            gl.texImage2D(bindTarget, mipLevel, opts.format, opts.format, dataSize, target);\r\n        }\r\n        else {\r\n            gl.texImage2D(bindTarget, mipLevel, opts.format, opts.width, opts.height, 0, opts.format, dataSize, target);\r\n        }\r\n    });\r\n    return texture;\r\n};\r\nconst createCubeTextureFromTarget = (opts) => (targets) => {\r\n    const { gl } = opts;\r\n    const texture = gl.createTexture();\r\n    const bindTarget = WebGlConstants.TEXTURE_CUBE_MAP;\r\n    const dataSize = opts.dataSize || gl.UNSIGNED_BYTE;\r\n    gl.bindTexture(bindTarget, texture);\r\n    opts.setParameters(opts);\r\n    const mipTargets = Array.isArray(targets) ? targets : [targets];\r\n    mipTargets.forEach((mipTarget, mipLevel) => {\r\n        Object.keys(mipTarget).forEach((key) => {\r\n            const faceTarget = faceTargetFromKey(key);\r\n            const target = mipTarget[key];\r\n            if (target instanceof Element) {\r\n                gl.texImage2D(faceTarget, mipLevel, opts.format, opts.format, dataSize, target);\r\n            }\r\n            else {\r\n                gl.texImage2D(faceTarget, mipLevel, opts.format, opts.width, opts.height, 0, opts.format, dataSize, target);\r\n            }\r\n        });\r\n    });\r\n    return texture;\r\n};\r\n//only first param is set by user, second is set internally\r\nconst textureSetterSimple = (opts) => (_opts) => {\r\n    const { gl, width, height } = _opts;\r\n    const isPowerOf2 = (value) => (value & (value - 1)) == 0;\r\n    if (opts.flipY) {\r\n        gl.pixelStorei(WebGlConstants.UNPACK_FLIP_Y_WEBGL, true);\r\n    }\r\n    else {\r\n        gl.pixelStorei(WebGlConstants.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n    if (isPowerOf2(width) && isPowerOf2(height) && opts.useMips === true) {\r\n        gl.generateMipmap(WebGlConstants.TEXTURE_2D);\r\n    }\r\n    else {\r\n        gl.texParameteri(WebGlConstants.TEXTURE_2D, WebGlConstants.TEXTURE_WRAP_S, !opts.wrapS ? WebGlConstants.CLAMP_TO_EDGE : opts.wrapS);\r\n        gl.texParameteri(WebGlConstants.TEXTURE_2D, WebGlConstants.TEXTURE_WRAP_T, !opts.wrapT ? WebGlConstants.CLAMP_TO_EDGE : opts.wrapT);\r\n        gl.texParameteri(WebGlConstants.TEXTURE_2D, WebGlConstants.TEXTURE_MIN_FILTER, !opts.filterMin ? WebGlConstants.LINEAR : opts.filterMin);\r\n        gl.texParameteri(WebGlConstants.TEXTURE_2D, WebGlConstants.TEXTURE_MAG_FILTER, !opts.filterMag ? WebGlConstants.LINEAR : opts.filterMag);\r\n    }\r\n};\r\nconst createSimpleTextureFromTarget = (opts) => (target) => createTextureFromTarget({\r\n    gl: opts.gl,\r\n    format: opts.alpha ? WebGlConstants.RGBA : WebGlConstants.RGB,\r\n    setParameters: textureSetterSimple(opts)\r\n})(target);\n\nconst getColorSpaceForTextureId = ({ renderer, gltf, textureId }) => {\r\n    const defaultColorSpace = WebGlConstants.RGBA;\r\n    const SRGBA = 0x8C42; //SRGB_ALPHA_EXT ... not in type definitions yet and might vary by renderer.version\r\n    for (let i = 0; i < gltf.materials.length; i++) {\r\n        const material = gltf.materials[i];\r\n        if (material.emissiveTexture && material.emissiveTexture.index === textureId) {\r\n            return SRGBA;\r\n        }\r\n        if (material.normalTexture && material.normalTexture.index === textureId) {\r\n            return WebGlConstants.RGBA;\r\n        }\r\n        if (material.occlusionTexture && material.occlusionTexture.index === textureId) {\r\n            return WebGlConstants.RGBA;\r\n        }\r\n        if (material.pbrMetallicRoughness) {\r\n            if (material.pbrMetallicRoughness.baseColorTexture && material.pbrMetallicRoughness.baseColorTexture.index === textureId) {\r\n                return SRGBA;\r\n            }\r\n            if (material.pbrMetallicRoughness.metallicRoughnessTexture && material.pbrMetallicRoughness.metallicRoughnessTexture.index === textureId) {\r\n                return WebGlConstants.RGBA;\r\n            }\r\n        }\r\n    }\r\n    return defaultColorSpace;\r\n};\r\nconst requiresPowerOf2 = ({ wrapS, wrapT, filterMin, filterMag, sampler }) => (wrapS === WebGlConstants.REPEAT || wrapS === WebGlConstants.MIRRORED_REPEAT || wrapT === WebGlConstants.REPEAT || wrapT === WebGlConstants.MIRRORED_REPEAT)\r\n    || (filterMin === WebGlConstants.NEAREST_MIPMAP_NEAREST || filterMin === WebGlConstants.NEAREST_MIPMAP_LINEAR || filterMin === WebGlConstants.LINEAR_MIPMAP_NEAREST || filterMin === WebGlConstants.LINEAR_MIPMAP_LINEAR);\r\nconst isPowerOf2 = (img) => {\r\n    const check = (value) => (value & (value - 1)) == 0;\r\n    return check(img.naturalWidth) && check(img.naturalHeight);\r\n};\r\nconst nextHighestPowerOfTwo = (x) => {\r\n    --x;\r\n    for (var i = 1; i < 32; i <<= 1) {\r\n        x = x | x >> i;\r\n    }\r\n    return x + 1;\r\n};\r\nconst resizeImageToNextPowerOf2 = (img) => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = nextHighestPowerOfTwo(img.width);\r\n    canvas.height = nextHighestPowerOfTwo(img.height);\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height); //use img.width/height if not scaling\r\n    return canvas;\r\n};\r\nconst defaultSampler = {\r\n    filterMin: WebGlConstants.LINEAR,\r\n    filterMag: WebGlConstants.LINEAR,\r\n    wrapS: WebGlConstants.REPEAT,\r\n    wrapT: WebGlConstants.REPEAT\r\n};\r\nconst GLTF_PARSE_createTextures = ({ renderer, gltf, imageElements }) => {\r\n    const textureMap = new Map();\r\n    const { gl } = renderer;\r\n    if (gltf.textures) {\r\n        gltf.textures.forEach((texture, textureId) => {\r\n            const sampler = Object.assign({}, defaultSampler, texture.sampler === undefined ? undefined : gltf.samplers[texture.sampler]);\r\n            const colorSpace = getColorSpaceForTextureId({ renderer, gltf, textureId });\r\n            const img = imageElements[texture.source];\r\n            const { wrapS, wrapT, filterMin, filterMag } = sampler;\r\n            const display = (requiresPowerOf2({ wrapS, wrapT, filterMin, filterMag, sampler }) && !isPowerOf2(img))\r\n                ? resizeImageToNextPowerOf2(img)\r\n                : img;\r\n            const wTexture = createTextureFromTarget({\r\n                gl,\r\n                format: colorSpace,\r\n                setParameters: () => {\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n                    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\r\n                    gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\r\n                    gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\r\n                    gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filterMin);\r\n                    gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filterMag);\r\n                }\r\n            })(display);\r\n            textureMap.set(textureId, wTexture);\r\n        });\r\n    }\r\n    return textureMap;\r\n};\n\n//helper for loading each item separately and creating the world manually\r\nconst getBasePath = (path) => {\r\n    const idx1 = (path.lastIndexOf(\"/\") + 1);\r\n    const idx2 = (path.lastIndexOf(\"\\\\\") + 1);\r\n    return !idx1 && !idx2\r\n        ? path\r\n        : path.substr(0, (idx1 > idx2) ? idx1 : idx2);\r\n};\n\nconst getIblConfig = (gltf) => {\r\n    if (gltf.extensionsUsed && gltf.extensionsUsed.indexOf(GltfIblExtensionName) !== -1) {\r\n        return gltf.extensions[GltfIblExtensionName];\r\n    }\r\n    return null;\r\n};\r\nconst loadAssets = ({ gltf, coreData }) => {\r\n    const config = getIblConfig(gltf);\r\n    const path = config ? config.path : \"\";\r\n    if (path === \"\") {\r\n        return Future.of(coreData);\r\n    }\r\n    return fetchJsonUrl(path)\r\n        .chain(jsonData => {\r\n        const basePath = getBasePath(path);\r\n        const imageUrls = Array();\r\n        imageUrls.push(jsonData.brdf.url);\r\n        const cubeMapNames = Object.keys(jsonData.cubeMaps);\r\n        cubeMapNames.forEach(cubeMapName => {\r\n            const cubeMap = jsonData.cubeMaps[cubeMapName];\r\n            cubeMap.urls.forEach(list => {\r\n                list.forEach(url => {\r\n                    imageUrls.push(cubeMapName + \"/\" + url);\r\n                });\r\n            });\r\n        });\r\n        const imageFutures = imageUrls.map(url => fetchImage(basePath + url).map(img => ({ url, img })));\r\n        return parallel(Infinity, imageFutures)\r\n            .map(ldrs => {\r\n            const m = new Map();\r\n            ldrs.forEach(ldr => {\r\n                m.set(ldr.url, ldr.img);\r\n            });\r\n            return m;\r\n        })\r\n            .map(imageMap => ({ jsonData, imageMap }));\r\n    })\r\n        .map(ibl => Object.assign({}, coreData, { extensions: Object.assign({}, coreData.extensions, { ibl })\r\n    }));\r\n};\r\nconst createData = ({ gltf, assets, renderer }) => (data) => {\r\n    if (!assets.extensions.ibl) {\r\n        return data;\r\n    }\r\n    prepWebGlRenderer(renderer);\r\n    const gl = renderer.gl;\r\n    const { jsonData, imageMap } = assets.extensions.ibl;\r\n    const makeBrdfTexture = createTextureFromTarget({\r\n        gl,\r\n        format: jsonData.brdf.colorSpace,\r\n        setParameters: () => {\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n            gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n            gl.texParameteri(WebGlConstants.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        }\r\n    });\r\n    const makeCubeMapTexture = (images) => (cubeMapName) => ({ colorSpace, urls }) => {\r\n        const faces = [\"posX\", \"negX\", \"posY\", \"negY\", \"posZ\", \"negZ\"];\r\n        let mipLevels = [];\r\n        urls.forEach(list => {\r\n            const mipLevel = {};\r\n            list.forEach((url, faceIndex) => {\r\n                const img = images.get(cubeMapName + \"/\" + url);\r\n                mipLevel[faces[faceIndex]] = img;\r\n            });\r\n            mipLevels.push(mipLevel);\r\n        });\r\n        return createCubeTextureFromTarget({\r\n            gl,\r\n            format: colorSpace,\r\n            setParameters: opts => {\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                if (urls.length > 1) {\r\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                }\r\n                else {\r\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                }\r\n            }\r\n        })(mipLevels);\r\n    };\r\n    const ibl = {\r\n        brdf: makeBrdfTexture(imageMap.get(jsonData.brdf.url)),\r\n        cubeMaps: {},\r\n        useLod: false\r\n    };\r\n    Object.keys(jsonData.cubeMaps).forEach(cubeMapName => {\r\n        const cubeMap = jsonData.cubeMaps[cubeMapName];\r\n        if (cubeMap.urls.length > 1) {\r\n            ibl.useLod = true;\r\n        }\r\n        ibl.cubeMaps[cubeMapName] = makeCubeMapTexture(imageMap)(cubeMapName)(jsonData.cubeMaps[cubeMapName]);\r\n    });\r\n    return Object.assign({}, data, { extensions: Object.assign({}, data.extensions, { ibl })\r\n    });\r\n};\r\nconst createScene = (gltf) => (originalScene) => (scene) => {\r\n    const config = getIblConfig(gltf);\r\n    const settings = config ? config.settings : undefined;\r\n    if (!settings) {\r\n        return scene;\r\n    }\r\n    return Object.assign({}, scene, { extensions: Object.assign({}, scene.extensions, { ibl: settings })\r\n    });\r\n};\r\nconst createNode = (gltf) => (originalNode) => (node) => {\r\n    return node;\r\n};\r\nconst initialShaderConfig = ({ data, primitive }) => (shaderConfig) => data.extensions.ibl\r\n    ? Object.assign({}, shaderConfig, { extensions: Object.assign({}, shaderConfig.extensions, {\r\n            ibl: {\r\n                useLod: data.extensions.ibl.useLod\r\n            }\r\n        })\r\n    })\r\n    : shaderConfig;\r\nconst runtimeShaderConfig = ({ data, scene, primitive }) => (shaderConfig) => shaderConfig;\r\nconst shaderSource = ({ data, primitive }) => (source) => {\r\n    if (data.extensions.ibl) {\r\n        const defines = [];\r\n        defines.push(\"USE_IBL\");\r\n        if (data.extensions.ibl.useLod) {\r\n            defines.push(\"USE_TEX_LOD\");\r\n        }\r\n        const defineString = defines.map(value => `#define ${value} 1\\n`).join('');\r\n        return Object.assign({}, source, {\r\n            vertex: defineString + source.vertex,\r\n            fragment: defineString + source.fragment\r\n        });\r\n    }\r\n    return source;\r\n};\r\nconst GLTF_PARSE_Extension_Ibl = {\r\n    loadAssets,\r\n    createData,\r\n    createScene,\r\n    createNode,\r\n    initialShaderConfig,\r\n    runtimeShaderConfig,\r\n    shaderSource\r\n};\n\n/* Note - lights are different than other extensions since\r\n * they are passed around really as part of the scene, for the sake of convenience (rather than scene.extensions for ambient, or hunting for nodes with extensions.light - lights are first-class citizens\r\n * For this reason, it is possible to \"trick\" the shader config by specifying the scene data directly rather than auto-loading it via KHR_Lights, though that typically wouldn't be used\r\n */\r\nconst getConfig = (gltf) => {\r\n    if (gltf.extensionsUsed && gltf.extensionsUsed.indexOf(GltfLightsExtensionName) !== -1) {\r\n        return gltf.extensions[GltfLightsExtensionName].lights;\r\n    }\r\n    return null;\r\n};\r\nconst getLight = (originalLight) => {\r\n    const kindMap = {\r\n        ambient: LightKind.Ambient,\r\n        directional: LightKind.Directional,\r\n        point: LightKind.Point,\r\n        spot: LightKind.Spot\r\n    };\r\n    const light = {\r\n        kind: kindMap[originalLight.type],\r\n        color: originalLight.color\r\n            ? Float64Array.from(originalLight.color)\r\n            : Float64Array.from([1.0, 1.0, 1.0]),\r\n        intensity: originalLight.intensity !== undefined\r\n            ? originalLight.intensity\r\n            : 1.0\r\n    };\r\n    if (light.kind === LightKind.Spot) {\r\n        light.innerConeAngle = originalLight.spot && originalLight.spot.innerConeAngle !== undefined\r\n            ? originalLight.spot.innerConeAngle\r\n            : 0;\r\n        light.outerConeAngle = originalLight.spot && originalLight.spot.outerConeAngle !== undefined\r\n            ? originalLight.spot.outerConeAngle\r\n            : Math.PI / 4;\r\n    }\r\n    return light;\r\n};\r\nconst loadAssets$1 = ({ gltf, coreData }) => Future.of(coreData);\r\nconst createData$1 = ({ gltf, assets, renderer }) => (data) => data;\r\nconst createScene$1 = (gltf) => (originalScene) => (scene) => {\r\n    const config = getConfig(gltf);\r\n    const sceneConfig = originalScene.extensions && originalScene.extensions.hasOwnProperty(GltfLightsExtensionName)\r\n        ? originalScene.extensions[GltfLightsExtensionName]\r\n        : undefined;\r\n    if (!config || !sceneConfig) {\r\n        return scene;\r\n    }\r\n    const light = getLight(config[sceneConfig.light]);\r\n    if (light.kind !== LightKind.Ambient) {\r\n        throw new Error(\"scene light is not ambient\");\r\n    }\r\n    return Object.assign({}, scene, { light });\r\n};\r\nconst createNode$1 = (gltf) => (originalNode) => (node) => {\r\n    const config = getConfig(gltf);\r\n    const nodeConfig = originalNode.extensions && originalNode.extensions.hasOwnProperty(GltfLightsExtensionName)\r\n        ? originalNode.extensions[GltfLightsExtensionName]\r\n        : undefined;\r\n    if (!config || !nodeConfig) {\r\n        return node;\r\n    }\r\n    const light = getLight(config[nodeConfig.light]);\r\n    if (node.kind) {\r\n        throw new Error(\"node cannot be both a light and some other kind...\");\r\n    }\r\n    return Object.assign({}, node, {\r\n        kind: NodeKind.LIGHT,\r\n        light\r\n    });\r\n};\r\nconst initialShaderConfig$1 = ({ data, primitive }) => (shaderConfig) => {\r\n    return shaderConfig;\r\n};\r\nconst runtimeShaderConfig$1 = ({ data, scene, primitive }) => (shaderConfig) => {\r\n    let nPointLights = 0;\r\n    let nDirectionalLights = 0;\r\n    let nSpotLights = 0;\r\n    let hasAmbient = scene.light ? true : false;\r\n    scene.nodes.forEach(node => {\r\n        if (node.kind === NodeKind.LIGHT) {\r\n            switch (node.light.kind) {\r\n                case LightKind.Ambient:\r\n                    hasAmbient = true;\r\n                    break;\r\n                case LightKind.Directional:\r\n                    nDirectionalLights++;\r\n                    break;\r\n                case LightKind.Point:\r\n                    nPointLights++;\r\n                    break;\r\n                case LightKind.Spot:\r\n                    nSpotLights++;\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    const config = {\r\n        nPointLights,\r\n        nDirectionalLights,\r\n        nSpotLights,\r\n        hasAmbient\r\n    };\r\n    return Object.assign({}, shaderConfig, {\r\n        extensions: Object.assign({}, shaderConfig.extensions, {\r\n            lights: config\r\n        })\r\n    });\r\n};\r\nconst getDynamicVertexShader = (primitive) => (vs) => {\r\n    let LIGHTS_VARS = '';\r\n    let LIGHTS_FUNCS = '';\r\n    return vs.replace(\"%KHR_LIGHTS_VARS%\", LIGHTS_VARS).replace(\"%KHR_LIGHTS_FUNCS%\", LIGHTS_FUNCS);\r\n};\r\nconst getDynamicFragmentShader = (primitive) => (fs) => {\r\n    let LIGHTS_VARS = '';\r\n    let LIGHTS_FUNCS = '';\r\n    if (primitive.shaderConfig.extensions.lights.nDirectionalLights) ;\r\n    return fs.replace(\"%KHR_LIGHTS_VARS%\", LIGHTS_VARS).replace(\"%KHR_LIGHTS_FUNCS%\", LIGHTS_FUNCS);\r\n};\r\nconst shaderSource$1 = ({ data, primitive }) => (source) => {\r\n    if (primitive.shaderConfig.extensions.lights) {\r\n        const defines = [];\r\n        const { hasAmbient, nPointLights, nDirectionalLights, nSpotLights } = primitive.shaderConfig.extensions.lights;\r\n        if (nPointLights > 10 || nDirectionalLights > 10 || nSpotLights > 10) {\r\n            console.warn(\"Only 10 lights of each kind are supported\");\r\n        }\r\n        if (!hasAmbient && !nPointLights && !nDirectionalLights && !nSpotLights) {\r\n            return source;\r\n        }\r\n        defines.push(\"USE_KHR_LIGHTS\");\r\n        if (hasAmbient) {\r\n            defines.push(\"KHR_LIGHTS_AMBIENT\");\r\n        }\r\n        const defineString = defines.map(value => `#define ${value} 1\\n`).join('');\r\n        return Object.assign({}, source, {\r\n            vertex: getDynamicVertexShader(primitive)(defineString + source.vertex),\r\n            fragment: getDynamicFragmentShader(primitive)(defineString + source.fragment)\r\n        });\r\n    }\r\n    else {\r\n        return source;\r\n    }\r\n};\r\nconst GLTF_PARSE_Extension_Lights = {\r\n    loadAssets: loadAssets$1,\r\n    createData: createData$1,\r\n    createScene: createScene$1,\r\n    createNode: createNode$1,\r\n    initialShaderConfig: initialShaderConfig$1,\r\n    runtimeShaderConfig: runtimeShaderConfig$1,\r\n    shaderSource: shaderSource$1\r\n};\n\nconst GltfExtensions = [\r\n    GLTF_PARSE_Extension_Ibl,\r\n    GLTF_PARSE_Extension_Lights\r\n];\n\n//Pure data loaders\r\nconst loadBuffers = ({ basePath, gltf, glbBuffers }) => parallel(Infinity, gltf.buffers.map((buffer, bufferIndex) => glbBuffers !== undefined && bufferIndex < glbBuffers.length\r\n    ? Future.of(glbBuffers[bufferIndex].slice(0, buffer.byteLength))\r\n    : buffer.uri.indexOf(\"data:\") === 0\r\n        ? fetchArrayBufferUrl(buffer.uri)\r\n        : fetchArrayBufferUrl(basePath + buffer.uri)));\r\nconst loadImages = ({ basePath, gltf, buffers }) => {\r\n    const getImageBufferData = (bufferViewId) => {\r\n        const bufferView = gltf.bufferViews[bufferViewId];\r\n        const bufferId = bufferView.buffer;\r\n        const offset = bufferView.byteOffset === undefined ? 0 : bufferView.byteOffset;\r\n        return buffers[bufferId].slice(offset, offset + bufferView.byteLength);\r\n    };\r\n    //load texture data\r\n    return parallel(Infinity, !gltf.images || !gltf.images.length\r\n        ? []\r\n        : gltf.images.map(image => image.bufferView !== undefined\r\n            ? loadImageFromArrayBuffer({ data: getImageBufferData(image.bufferView), mimeType: image.mimeType })\r\n            : image.uri.indexOf(\"data:\") === 0\r\n                ? fetchImage(image.uri) //untested\r\n                : fetchImage(basePath + image.uri)));\r\n};\r\n//Tools for processing and loading data\r\nconst GLTF_PARSE_LoadDataAssets = ({ basePath, gltf, glbBuffers }) => GltfExtensions\r\n    .map(ext => ext.loadAssets)\r\n    .reduce((acc, fn) => (acc = acc.chain(coreData => fn({ gltf, coreData })), acc), loadBuffers({ basePath, gltf, glbBuffers })\r\n    .chain((buffers) => loadImages({ basePath, gltf, buffers })\r\n    .map(imageElements => ({\r\n    buffers, imageElements, extensions: {}\r\n}))));\r\nconst GLTF_PARSE_CreateData = ({ gltf, assets, renderer, config }) => {\r\n    prepWebGlRenderer(renderer);\r\n    const { imageElements, buffers } = assets;\r\n    const textures = GLTF_PARSE_createTextures({ renderer, gltf, imageElements });\r\n    const attributes = GLTF_PARSE_createAttributes({ gltf, buffers, renderer });\r\n    const animations = GLTF_PARSE_createAnimations({ gltf, buffers });\r\n    const shaders = new Map();\r\n    return GltfExtensions\r\n        .map(ext => ext.createData)\r\n        .reduce((acc, val) => (acc = val({ gltf, assets, renderer })(acc), acc), {\r\n        original: gltf,\r\n        animations,\r\n        attributes,\r\n        textures,\r\n        shaders,\r\n        initConfig: config,\r\n        extensions: {}\r\n    });\r\n};\n\n//https://stackoverflow.com/a/41798356/784519\r\nconst utf8ArrayToStr = (function () {\r\n    var charCache = new Array(128); // Preallocate the cache for the common single byte chars\r\n    var charFromCodePt = String.fromCodePoint || String.fromCharCode;\r\n    var result = [];\r\n    return function (array) {\r\n        var codePt, byte1;\r\n        var buffLen = array.length;\r\n        result.length = 0;\r\n        for (var i = 0; i < buffLen;) {\r\n            byte1 = array[i++];\r\n            if (byte1 <= 0x7F) {\r\n                codePt = byte1;\r\n            }\r\n            else if (byte1 <= 0xDF) {\r\n                codePt = ((byte1 & 0x1F) << 6) | (array[i++] & 0x3F);\r\n            }\r\n            else if (byte1 <= 0xEF) {\r\n                codePt = ((byte1 & 0x0F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F);\r\n            }\r\n            else if (String.fromCodePoint) {\r\n                codePt = ((byte1 & 0x07) << 18) | ((array[i++] & 0x3F) << 12) | ((array[i++] & 0x3F) << 6) | (array[i++] & 0x3F);\r\n            }\r\n            else {\r\n                codePt = 63; // Cannot convert four byte code points, so use \"?\" instead\r\n                i += 3;\r\n            }\r\n            result.push(charCache[codePt] || (charCache[codePt] = charFromCodePt(codePt)));\r\n        }\r\n        return result.join('');\r\n    };\r\n})();\r\nconst getJsonFromArrayBuffer = (aBuffer) => {\r\n    const bytes = new Uint8Array(aBuffer);\r\n    const str = window[\"TextDecoder\"]\r\n        ? new TextDecoder('utf-8').decode(bytes)\r\n        : utf8ArrayToStr(bytes);\r\n    //console.log(str);\r\n    return JSON.parse(str);\r\n};\n\nconst getHeader = (aBuffer) => {\r\n    const dv = new DataView(aBuffer, 0, 12);\r\n    return {\r\n        magic: dv.getUint32(0, true),\r\n        version: dv.getUint32(4, true),\r\n        length: dv.getUint32(8, true)\r\n    };\r\n};\r\nconst getChunk = (offset) => (aBuffer) => {\r\n    const dv = new DataView(aBuffer, offset, 8);\r\n    const chunkLength = dv.getUint32(0, true);\r\n    const chunkType = dv.getUint32(4, true);\r\n    const chunkStart = offset + 8;\r\n    const chunkEnd = chunkStart + chunkLength;\r\n    const chunkData = aBuffer.slice(chunkStart, chunkEnd);\r\n    const result = [\r\n        (chunkType === 0x4E4F534A)\r\n            ? getJsonFromArrayBuffer(chunkData)\r\n            : (chunkType === 0x004E4942)\r\n                ? chunkData\r\n                : null,\r\n        chunkEnd\r\n    ];\r\n    if (result[0] === null) {\r\n        console.log(`unknown chunk type: ${chunkType}`);\r\n    }\r\n    return result;\r\n};\r\nconst asGlb = (aBuffer) => {\r\n    const [gltf, gltfEndOffset] = getChunk(12)(aBuffer);\r\n    const buffers = new Array();\r\n    let offset = gltfEndOffset;\r\n    while (offset < aBuffer.byteLength) {\r\n        const [bin, endOffset] = getChunk(offset)(aBuffer);\r\n        if (bin !== null) {\r\n            buffers.push(bin);\r\n        }\r\n        offset += endOffset;\r\n    }\r\n    return { gltf, glbBuffers: buffers };\r\n};\r\nconst GLTF_PARSE_isBinaryFile = (aBuffer) => getHeader(aBuffer).magic === 0x46546C67;\r\nconst GLTF_PARSE_getOriginalFromArrayBuffer = (aBuffer) => GLTF_PARSE_isBinaryFile(aBuffer)\r\n    ? asGlb(aBuffer)\r\n    : { gltf: getJsonFromArrayBuffer(aBuffer), glbBuffers: [] };\n\nlet _vaoIdCounter = 0;\r\nconst attributeShaderNameLookup = {\r\n    \"POSITION\": \"a_Position\",\r\n    \"NORMAL\": \"a_Normal\",\r\n    \"TANGENT\": \"a_Tangent\",\r\n    \"TEXCOORD_0\": \"a_UV\",\r\n    \"COLOR_0\": \"a_Color\",\r\n    \"JOINTS_0\": \"a_Skin_Joint\",\r\n    \"WEIGHTS_0\": \"a_Skin_Weight\"\r\n};\r\n//Sorting the attributes is important so that the dynamic shader\r\n//matches the correct location for each morph (e.g. morph_1 is position and location x, etc.)\r\nconst GLTF_PARSE_sortPrimitiveAttributeKeys = (keys) => keys.sort((a, b) => {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    const ORDER = [\"POSITION\", \"NORMAL\", \"TANGENT\", \"TEXCOOR_0\", \"COLOR_0\", \"JOINTS_0\", \"WEIGHTS_0\"];\r\n    const oa = ORDER.indexOf(a);\r\n    const ob = ORDER.indexOf(b);\r\n    return oa < ob ? -1 : oa > ob ? 1 : 0;\r\n});\r\nconst GLTF_PARSE_primitiveHasAttribute = (attributeName) => (originalPrimitive) => Object.keys(originalPrimitive.attributes).indexOf(attributeName) !== -1;\r\nconst GLTF_PARSE_getPrimitiveAttributeKeys = (originalPrimitive) => GLTF_PARSE_sortPrimitiveAttributeKeys(Object.keys(originalPrimitive.attributes));\r\nconst GLTF_PARSE_createPrimitiveAttributes = ({ renderer, originalPrimitive, data }) => {\r\n    const vao = { data: [] };\r\n    const accessorLookup = data.attributes.accessorLookup;\r\n    if (originalPrimitive.indices !== undefined) {\r\n        vao.elementBufferId = accessorLookup.get(originalPrimitive.indices).rendererBufferId;\r\n    }\r\n    const attributeKeys = GLTF_PARSE_getPrimitiveAttributeKeys(originalPrimitive);\r\n    attributeKeys.forEach((attributeKey) => {\r\n        const accessorId = originalPrimitive.attributes[attributeKey];\r\n        const attributeName = attributeShaderNameLookup[attributeKey];\r\n        if (!accessorLookup.has(accessorId)) {\r\n            throw new Error(\"bug here!\");\r\n        }\r\n        vao.data.push(Object.assign({ location: renderer.attributes.getLocationInRenderer(attributeName), bufferId: accessorLookup.get(accessorId).rendererBufferId }, accessorLookup.get(accessorId).strategy));\r\n    });\r\n    const { targets } = originalPrimitive;\r\n    if (targets) {\r\n        let morphIndex = 0;\r\n        targets.forEach(target => {\r\n            GLTF_PARSE_sortPrimitiveAttributeKeys(Object.keys(target)).forEach(attributeKey => {\r\n                const accessorId = target[attributeKey];\r\n                const aMorph = `a_Morph_${morphIndex++}`;\r\n                //console.log(aMorph,  data.accessors.get(accessorId).strategy.offset);\r\n                vao.data.push(Object.assign({ location: renderer.attributes.getLocationInRenderer(aMorph), bufferId: accessorLookup.get(accessorId).rendererBufferId }, accessorLookup.get(accessorId).strategy));\r\n            });\r\n        });\r\n    }\r\n    //vao.data.forEach(({attributeName}) => console.log(attributeName, shader.attributes.getLocation(attributeName)));\r\n    const vaoId = _vaoIdCounter++;\r\n    const sym = Symbol();\r\n    data.attributes.vaoIdLookup.set(vaoId, sym);\r\n    renderer.vertexArrays.assign(sym)(vao);\r\n    return vaoId;\r\n};\n\nconst GLTF_PARSE_getPrimitiveDrawing = ({ originalPrimitive, data }) => {\r\n    const _primitive = {\r\n        drawKind: (originalPrimitive.indices !== undefined) ? GltfPrimitiveDrawKind.ELEMENTS : GltfPrimitiveDrawKind.ARRAY,\r\n        drawMode: originalPrimitive.mode ? originalPrimitive.mode : WebGlConstants.TRIANGLES\r\n    };\r\n    if (_primitive.drawKind === GltfPrimitiveDrawKind.ELEMENTS) {\r\n        _primitive.elementsId = originalPrimitive.indices;\r\n    }\r\n    else {\r\n        const attributeKeys = GLTF_PARSE_getPrimitiveAttributeKeys(originalPrimitive);\r\n        _primitive.arrayCount = data.original.accessors[originalPrimitive.attributes[attributeKeys[0]]].count;\r\n    }\r\n    return _primitive;\r\n};\n\nconst GLTF_PARSE_createMaterialForPrimitive = ({ gltf, materialId, data }) => {\r\n    const _m = gltf.materials[materialId];\r\n    const material = {};\r\n    material.metallicRoughnessValues = Float64Array.from([1.0, 1.0]);\r\n    material.baseColorFactor = Float64Array.from([1.0, 1.0, 1.0, 1.0]);\r\n    if (_m.pbrMetallicRoughness) {\r\n        if (_m.pbrMetallicRoughness.metallicFactor !== undefined) {\r\n            material.metallicRoughnessValues[0] = _m.pbrMetallicRoughness.metallicFactor;\r\n        }\r\n        if (_m.pbrMetallicRoughness.roughnessFactor !== undefined) {\r\n            material.metallicRoughnessValues[1] = _m.pbrMetallicRoughness.roughnessFactor;\r\n        }\r\n        if (_m.pbrMetallicRoughness.baseColorFactor !== undefined) {\r\n            material.baseColorFactor = Float64Array.from(_m.pbrMetallicRoughness.baseColorFactor);\r\n        }\r\n        if (_m.pbrMetallicRoughness.baseColorTexture !== undefined) {\r\n            material.baseColorSamplerIndex = _m.pbrMetallicRoughness.baseColorTexture.index;\r\n        }\r\n        if (_m.pbrMetallicRoughness.metallicRoughnessTexture !== undefined) {\r\n            material.metallicRoughnessSamplerIndex = _m.pbrMetallicRoughness.metallicRoughnessTexture.index;\r\n        }\r\n    }\r\n    if (_m.normalTexture !== undefined) {\r\n        const scale = _m.normalTexture.scale !== undefined ? _m.normalTexture.scale : 1.0;\r\n        material.normal = {\r\n            scale,\r\n            samplerIndex: _m.normalTexture.index\r\n        };\r\n    }\r\n    if (_m.occlusionTexture !== undefined) {\r\n        const strength = _m.occlusionTexture.strength !== undefined ? _m.occlusionTexture.strength : 1.0;\r\n        material.occlusion = {\r\n            strength,\r\n            samplerIndex: _m.occlusionTexture.index\r\n        };\r\n    }\r\n    if (_m.emissiveTexture !== undefined) {\r\n        material.emissiveSamplerIndex = _m.emissiveTexture.index;\r\n    }\r\n    if (_m.emissiveFactor !== undefined) {\r\n        material.emissiveFactor = Float64Array.from(_m.emissiveFactor);\r\n    }\r\n    if (_m.alphaMode) {\r\n        switch (_m.alphaMode) {\r\n            case \"BLEND\":\r\n                material.alphaMode = GltfMaterialAlphaMode.BLEND;\r\n                break;\r\n            case \"MASK\":\r\n                material.alphaMode = GltfMaterialAlphaMode.MASK;\r\n                break;\r\n            default:\r\n                material.alphaMode = GltfMaterialAlphaMode.OPAQUE;\r\n                break;\r\n        }\r\n    }\r\n    material.doubleSided = _m.doubleSided ? true : false;\r\n    material.alphaCutoff = _m.alphaCutoff === undefined ? .5 : _m.alphaCutoff;\r\n    return material;\r\n};\n\nvar UNIFORM_TYPE;\r\n(function (UNIFORM_TYPE) {\r\n    UNIFORM_TYPE[UNIFORM_TYPE[\"FLOAT\"] = 0] = \"FLOAT\";\r\n    UNIFORM_TYPE[UNIFORM_TYPE[\"INT\"] = 1] = \"INT\";\r\n})(UNIFORM_TYPE || (UNIFORM_TYPE = {}));\r\nconst createUniforms = ({ renderer, activateShader }) => {\r\n    const { gl } = renderer;\r\n    const cache = {\r\n        uniformLocations: new Map(),\r\n        uniformValues: new Map(),\r\n        uniformSingleValues: new Map(),\r\n        uniformMatrixTranspose: new Map()\r\n    };\r\n    const getLocation = (uName) => {\r\n        const { program } = activateShader();\r\n        if (!cache.uniformLocations.has(uName)) {\r\n            cache.uniformLocations.set(uName, gl.getUniformLocation(program, uName));\r\n        }\r\n        return cache.uniformLocations.get(uName);\r\n    };\r\n    const validLocation = (loc) => (loc !== null && loc !== undefined && loc != -1);\r\n    const hasLocation = (uName) => validLocation(getLocation(uName));\r\n    const _isEqual = (uName) => (values) => {\r\n        if (!cache.uniformValues.has(uName)) {\r\n            return false;\r\n        }\r\n        const xs = cache.uniformValues.get(uName);\r\n        if (xs.length !== values.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < xs.length; i++) {\r\n            if (xs[i] !== values[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    const _assignCacheValues = (uType) => (uName) => (values) => {\r\n        //Must make a copy each time for two reasons:\r\n        //1. Otherwise it could be referencing the same object in subsequent calls\r\n        //2. Normalizing to 32-bit values\r\n        //However - the cache is local only, so it's only allocating the first time (subsequent is just writing to mutable space)\r\n        if (!cache.uniformValues.has(uName)) {\r\n            switch (uType) {\r\n                case UNIFORM_TYPE.FLOAT:\r\n                    cache.uniformValues.set(uName, new Float32Array(values.length));\r\n                    break;\r\n                case UNIFORM_TYPE.INT:\r\n                    cache.uniformValues.set(uName, new Int32Array(values.length));\r\n                    break;\r\n            }\r\n            return;\r\n        }\r\n        const target = cache.uniformValues.get(uName);\r\n        for (let idx = 0; idx < values.length; idx++) {\r\n            target[idx] = values[idx];\r\n        }\r\n    };\r\n    const _setSingleValue = (setterFn) => (uName) => (value) => {\r\n        if (!cache.uniformSingleValues.has(uName) || cache.uniformSingleValues.get(uName) !== value) {\r\n            cache.uniformSingleValues.set(uName, value);\r\n            const loc = getLocation(uName);\r\n            if (validLocation(loc)) {\r\n                setterFn(loc)(value); //for single values it doesn't get converted\r\n            }\r\n        }\r\n    };\r\n    const _setValues = (uType) => (setterFn) => (uName) => (values) => {\r\n        if (!_isEqual(uName)(values)) {\r\n            _assignCacheValues(uType)(uName)(values);\r\n            const loc = getLocation(uName);\r\n            if (validLocation(loc)) {\r\n                setterFn(loc)(cache.uniformValues.get(uName)); //for arrays it needs to be grabbed from cache which set the appropriate type\r\n            }\r\n        }\r\n    };\r\n    const _setMatrixValues = (uType) => (setterFn) => (uName) => (transpose) => (values) => {\r\n        if (!cache.uniformMatrixTranspose.has(uName) || cache.uniformMatrixTranspose.get(uName) !== transpose || !_isEqual(uName)(values)) {\r\n            _assignCacheValues(uType)(uName)(values);\r\n            cache.uniformMatrixTranspose.set(uName, transpose);\r\n            const loc = getLocation(uName);\r\n            if (validLocation(loc)) {\r\n                setterFn(loc)(transpose)(cache.uniformValues.get(uName));\r\n            }\r\n        }\r\n    };\r\n    const setters = {\r\n        uniform1f: _setSingleValue(loc => v => gl.uniform1f(loc, v)),\r\n        uniform1fv: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform1fv(loc, v)),\r\n        uniform1i: _setSingleValue(loc => v => gl.uniform1i(loc, v)),\r\n        uniform1iv: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform1iv(loc, v)),\r\n        uniform2f: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform2f(loc, v[0], v[1])),\r\n        uniform2fv: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform2fv(loc, v)),\r\n        uniform2i: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform2i(loc, v[0], v[1])),\r\n        uniform2iv: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform2iv(loc, v)),\r\n        uniform3f: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform3f(loc, v[0], v[1], v[2])),\r\n        uniform3fv: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform3fv(loc, v)),\r\n        uniform3i: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform3i(loc, v[0], v[1], v[2])),\r\n        uniform3iv: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform3iv(loc, v)),\r\n        uniform4f: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform4f(loc, v[0], v[1], v[2], v[3])),\r\n        uniform4fv: _setValues(UNIFORM_TYPE.FLOAT)(loc => v => gl.uniform4fv(loc, v)),\r\n        uniform4i: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform4i(loc, v[0], v[1], v[2], v[3])),\r\n        uniform4iv: _setValues(UNIFORM_TYPE.INT)(loc => v => gl.uniform4iv(loc, v)),\r\n        uniformMatrix2fv: _setMatrixValues(UNIFORM_TYPE.FLOAT)(loc => t => v => gl.uniformMatrix2fv(loc, t, v)),\r\n        uniformMatrix3fv: _setMatrixValues(UNIFORM_TYPE.FLOAT)(loc => t => v => gl.uniformMatrix3fv(loc, t, v)),\r\n        uniformMatrix4fv: _setMatrixValues(UNIFORM_TYPE.FLOAT)(loc => t => v => gl.uniformMatrix4fv(loc, t, v)),\r\n    };\r\n    return {\r\n        cache,\r\n        setters,\r\n        getLocation,\r\n        validLocation,\r\n        hasLocation\r\n    };\r\n};\n\n//the \"any\" here is actually WebGlShader but defining it as such would cause a circular reference\r\nlet current;\r\nconst shaders = new Map();\r\nconst _compileShader = ({ renderer, source }) => {\r\n    let vShader;\r\n    let fShader;\r\n    const { gl } = renderer;\r\n    const program = gl.createProgram();\r\n    const dispose = () => {\r\n        if (vShader !== undefined && (vShader instanceof WebGLShader)) {\r\n            gl.deleteShader(vShader);\r\n        }\r\n        if (fShader !== undefined && (fShader instanceof WebGLShader)) {\r\n            gl.deleteShader(fShader);\r\n        }\r\n        gl.deleteProgram(program);\r\n    };\r\n    const getShaderName = (shaderType) => shaderType === gl.VERTEX_SHADER ? \"vertex\" : \"fragment\";\r\n    const loadShader = (shaderType) => (sourceText) => {\r\n        const shader = gl.createShader(shaderType);\r\n        gl.shaderSource(shader, sourceText);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            const errorMessage = `${getShaderName(shaderType)} error: ` + gl.getShaderInfoLog(shader);\r\n            throw new Error(errorMessage); //this _should_ be an exception\r\n        }\r\n        gl.attachShader(program, shader);\r\n        return shader;\r\n    };\r\n    vShader = loadShader(gl.VERTEX_SHADER)(source.vertex);\r\n    if (vShader instanceof Error) {\r\n        dispose();\r\n        return vShader;\r\n    }\r\n    fShader = loadShader(gl.FRAGMENT_SHADER)(source.fragment);\r\n    if (fShader instanceof Error) {\r\n        dispose();\r\n        return fShader;\r\n    }\r\n    let location = 0;\r\n    renderer.attributes.globalLocations.forEach(aName => {\r\n        gl.bindAttribLocation(program, location, aName);\r\n        location++;\r\n    });\r\n    gl.linkProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        dispose();\r\n        return new Error('Unable to initialize the shader program: ' + gl.getProgramInfoLog(program));\r\n    }\r\n    return program;\r\n};\r\nconst _activateShader = (shaderId) => {\r\n    if (!current || current.shaderId !== shaderId) {\r\n        current = shaders.get(shaderId);\r\n        current.gl.useProgram(current.program);\r\n    }\r\n    return current;\r\n};\r\nconst activateShader = (shaderId) => _activateShader(shaderId);\r\nconst createShader = ({ renderer, shaderId, source }) => {\r\n    const program = _compileShader({ source, renderer });\r\n    const shader = {\r\n        gl: renderer.gl,\r\n        shaderId,\r\n        program,\r\n        uniforms: createUniforms({ renderer, activateShader: () => _activateShader(shaderId) }),\r\n    };\r\n    shaders.set(shaderId, shader);\r\n    return shader;\r\n};\n\n//TODO - speed has been optimized but need to test thoroughly for correctness (was roughly tested)\r\n//https://stackoverflow.com/questions/17398578/hash-algorithm-for-variable-size-boolean-array?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\nconst baseArray = new Uint8Array(19);\r\nconst morphsArray = new Uint8Array(30);\r\nconst skinArray = new Uint8Array(30);\r\nconst lightsArray = new Uint8Array(30);\r\nconst hashBooleans32 = (xs) => {\r\n    let h = (1 << xs.length);\r\n    for (let i = 0; i < xs.length; i++) {\r\n        h = h | ((xs[i]) << (xs.length - i - 1));\r\n    }\r\n    return h;\r\n};\r\nconst getShaderHash = (config) => {\r\n    if (config.hasNormalAttributes) {\r\n        baseArray[0] = 1;\r\n    }\r\n    if (config.hasTangentAttributes) {\r\n        baseArray[1] = 1;\r\n    }\r\n    if (config.hasUvAttributes) {\r\n        baseArray[2] = 1;\r\n    }\r\n    if (config.hasColorAttributes) {\r\n        baseArray[3] = 1;\r\n    }\r\n    if (config.hasBaseColorMap) {\r\n        baseArray[4] = 1;\r\n    }\r\n    if (config.hasNormalMap) {\r\n        baseArray[5] = 1;\r\n    }\r\n    if (config.hasEmissiveMap) {\r\n        baseArray[6] = 1;\r\n    }\r\n    if (config.hasMetalRoughnessMap) {\r\n        baseArray[7] = 1;\r\n    }\r\n    if (config.hasOcclusionMap) {\r\n        baseArray[8] = 1;\r\n    }\r\n    if (config.manualSRGB) {\r\n        baseArray[9] = 1;\r\n    }\r\n    if (config.fastSRGB) {\r\n        baseArray[10] = 1;\r\n    }\r\n    if (config.extensions.ibl) {\r\n        baseArray[11] = 1;\r\n        if (config.extensions.ibl.useLod) {\r\n            baseArray[12] = 1;\r\n        }\r\n    }\r\n    if (config.extensions.unlit) {\r\n        baseArray[13] = 1;\r\n    }\r\n    baseArray[14] = config.alphaMode === GltfMaterialAlphaMode.BLEND ? 0 : 1;\r\n    baseArray[15] = config.alphaMode === GltfMaterialAlphaMode.MASK ? 0 : 1;\r\n    baseArray[16] = config.alphaMode === GltfMaterialAlphaMode.OPAQUE ? 0 : 1;\r\n    if (config.extensions.lights) {\r\n        baseArray[17] = 1;\r\n        if (config.extensions.lights.hasAmbient) {\r\n            baseArray[18] = 1;\r\n        }\r\n        //Light instances get their own array - 10 * 3 = 30 possibilities\r\n        for (let i = 0; i < config.extensions.lights.nDirectionalLights; i++) {\r\n            lightsArray[i] = 1;\r\n        }\r\n        for (let i = 0; i < config.extensions.lights.nPointLights; i++) {\r\n            lightsArray[10 + i] = 1;\r\n        }\r\n        for (let i = 0; i < config.extensions.lights.nSpotLights; i++) {\r\n            lightsArray[20 + i] = 1;\r\n        }\r\n    }\r\n    for (let i = 0; i < config.nPositionMorphs; i++) {\r\n    }\r\n    for (let i = 0; i < config.nNormalMorphs; i++) {\r\n    }\r\n    for (let i = 0; i < config.nTangentMorphs; i++) {\r\n    }\r\n    for (let i = 0; i < config.nMorphWeights; i++) {\r\n    }\r\n    for (let i = 0; i < config.nSkinJoints; i++) {\r\n        skinArray[i] = 1;\r\n    }\r\n    const shaderKey = hashBooleans32(baseArray).toString();\r\n    \"-\" + hashBooleans32(morphsArray).toString()\r\n        + \"-\" + hashBooleans32(skinArray).toString()\r\n        + \"-\" + hashBooleans32(lightsArray).toString();\r\n    return shaderKey;\r\n};\r\n/*\r\nconst _lookup = new Map();\r\nconst FINAL = Symbol();\r\n\nexport const getShaderSymbol = (config:GltfShaderConfig):Symbol => {\r\n\n    let lookup = _lookup;\r\n\n    const setLookup = key => {\r\n        if(!lookup.has(key)) {\r\n            lookup.set(key, new Map());\r\n        }\r\n\n        lookup = lookup.get(key);\r\n    }\r\n    \n\n    setLookup(config.hasNormalAttributes);\r\n    setLookup(config.hasTangentAttributes);\r\n    setLookup(config.hasUvAttributes);\r\n    setLookup(config.hasColorAttributes);\r\n    setLookup(config.hasBaseColorMap);\r\n    setLookup(config.hasNormalMap);\r\n    setLookup(config.hasEmissiveMap);\r\n    setLookup(config.hasMetalRoughnessMap);\r\n    setLookup(config.hasOcclusionMap);\r\n    setLookup(config.manualSRGB);\r\n    setLookup(config.fastSRGB);\r\n    if(config.extensions.ibl) {\r\n        setLookup(true);\r\n        setLookup(config.extensions.ibl.useLod);\r\n    } else {\r\n        setLookup(false);\r\n    }\r\n\n    setLookup(config.extensions.unlit ? true : false);\r\n\n    if(config.extensions.lights) {\r\n        setLookup(true);\r\n\n        setLookup(config.extensions.lights.hasAmbient);\r\n        setLookup(config.extensions.lights.nDirectionalLights);\r\n        setLookup(config.extensions.lights.nPointLights);\r\n        setLookup(config.extensions.lights.nSpotLights);\r\n    } else {\r\n        setLookup(false);\r\n    }\r\n\n    setLookup(config.nPositionMorphs);\r\n    setLookup(config.nNormalMorphs);\r\n    setLookup(config.nTangentMorphs);\r\n    setLookup(config.nMorphWeights);\r\n    setLookup(config.nSkinJoints);\r\n   \n    if(!lookup.has(FINAL)) {\r\n        lookup.set(FINAL, Symbol());\r\n    }\r\n\n    return lookup.get(FINAL);\r\n\n}\r\n*/\n\nvar vertexShaderSource = \"precision highp float;\\nprecision highp int;\\n\\n%MORPH_VARS%\\n\\n#ifdef HAS_SKIN\\nattribute vec4 a_Skin_Joint;\\nattribute vec4 a_Skin_Weight;\\nuniform mat4 u_Skin_Matrices[%SKIN_JOINT_COUNT%];\\n#endif\\n\\n#ifdef USE_KHR_LIGHTS\\n%KHR_LIGHTS_VARS%\\n#endif\\n\\nattribute vec4 a_Position;\\n#ifdef HAS_NORMALS\\nattribute vec4 a_Normal;\\n#endif\\n#ifdef HAS_TANGENTS\\nattribute vec4 a_Tangent;\\n#endif\\n#ifdef HAS_UV\\nattribute vec2 a_UV;\\n#endif\\n#ifdef HAS_COLOR\\nattribute vec4 a_Color;\\nvarying vec4 v_Color;\\n#endif\\n\\nuniform mat4 u_MVPMatrix;\\nuniform mat4 u_ModelMatrix;\\nuniform mat4 u_NormalMatrix;\\n\\nvarying vec3 v_Position;\\nvarying vec2 v_UV;\\n\\n#ifdef HAS_NORMALS\\n#ifdef HAS_TANGENTS\\nvarying mat3 v_TBN;\\n#else\\nvarying vec3 v_Normal;\\n#endif\\n#endif\\n\\n\\nvoid main()\\n{\\n\\n  \\n\\n  vec4 m_Position = a_Position;\\n  #ifdef HAS_NORMALS\\n    vec4 m_Normal = a_Normal;\\n  #endif\\n  #ifdef HAS_TANGENTS\\n    vec4 m_Tangent = a_Tangent;\\n  #endif\\n\\n#ifdef HAS_SKIN\\n    mat4 skinMat = a_Skin_Weight[0] * u_Skin_Matrices[int(a_Skin_Joint[0])]\\n        +   a_Skin_Weight[1] * u_Skin_Matrices[int(a_Skin_Joint[1])]\\n        +   a_Skin_Weight[2] * u_Skin_Matrices[int(a_Skin_Joint[2])]\\n        +   a_Skin_Weight[3] * u_Skin_Matrices[int(a_Skin_Joint[3])];\\n\\n    m_Position = skinMat * m_Position;\\n#endif\\n    %MORPH_FUNCS%\\n\\n    #ifdef USE_KHR_LIGHTS\\n    %KHR_LIGHTS_FUNCS%\\n    #endif\\n\\n  \\n  vec4 pos = u_ModelMatrix * m_Position;\\n  v_Position = vec3(pos.xyz) / pos.w;\\n\\n  #ifdef HAS_NORMALS\\n  #ifdef HAS_TANGENTS\\n  vec3 normalW = normalize(vec3(u_NormalMatrix * vec4(m_Normal.xyz, 0.0)));\\n  vec3 tangentW = normalize(vec3(u_ModelMatrix * vec4(m_Tangent.xyz, 0.0)));\\n  vec3 bitangentW = cross(normalW, tangentW) * m_Tangent.w;\\n  v_TBN = mat3(tangentW, bitangentW, normalW);\\n  #else // HAS_TANGENTS != 1\\n  v_Normal = normalize(vec3(u_ModelMatrix * vec4(m_Normal.xyz, 0.0)));\\n  #endif\\n  #endif\\n\\n  #ifdef HAS_UV\\n  v_UV = a_UV;\\n  #else\\n  v_UV = vec2(0.,0.);\\n  #endif\\n\\n    #ifdef HAS_COLOR\\n    v_Color = a_Color;\\n    #endif\\n\\n\\n  gl_Position = u_MVPMatrix * m_Position; // needs w for proper perspective correction\\n}\\n\\n\";\n\nvar fragmentShaderSource = \"precision highp float;\\nprecision highp int;\\n\\n#ifdef USE_KHR_LIGHTS\\n    #ifdef KHR_LIGHTS_AMBIENT\\n        uniform float u_KhrLight_Ambient_Intensity;\\n        uniform vec3 u_KhrLight_Ambient_Color;\\n    #endif\\n%KHR_LIGHTS_VARS%\\n#endif\\n\\n//\\n// This fragment shader defines a reference implementation for Physically Based Shading of\\n// a microfacet surface material defined by a glTF model.\\n//\\n// References:\\n// [1] Real Shading in Unreal Engine 4\\n//     http://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf\\n// [2] Physically Based Shading at Disney\\n//     http://blog.selfshadow.com/publications/s2012-shading-course/burley/s2012_pbs_disney_brdf_notes_v3.pdf\\n// [3] README.md - Environment Maps\\n//     https://github.com/KhronosGroup/glTF-WebGL-PBR/#environment-maps\\n// [4] \\\"An Inexpensive BRDF Model for Physically based Rendering\\\" by Christophe Schlick\\n//     https://www.cs.virginia.edu/~jdl/bib/appearance/analytic%20models/schlick94b.pdf\\n#extension GL_EXT_shader_texture_lod: enable\\n#extension GL_OES_standard_derivatives : enable\\n\\nuniform vec3 u_LightDirection;\\nuniform vec3 u_LightColor;\\n\\n#ifdef USE_IBL\\nuniform samplerCube u_DiffuseEnvSampler;\\nuniform samplerCube u_SpecularEnvSampler;\\nuniform sampler2D u_brdfLUT;\\n#endif\\n\\n#ifdef HAS_BASECOLORMAP\\nuniform sampler2D u_BaseColorSampler;\\nuniform float u_AlphaCutoff; //PURE3D - Added\\n#endif\\n#ifdef HAS_NORMALMAP\\nuniform sampler2D u_NormalSampler;\\nuniform float u_NormalScale;\\n#endif\\n#ifdef HAS_EMISSIVEMAP\\nuniform sampler2D u_EmissiveSampler;\\nuniform vec3 u_EmissiveFactor;\\n#endif\\n#ifdef HAS_METALROUGHNESSMAP\\nuniform sampler2D u_MetallicRoughnessSampler;\\n#endif\\n#ifdef HAS_OCCLUSIONMAP\\nuniform sampler2D u_OcclusionSampler;\\nuniform float u_OcclusionStrength;\\n#endif\\n\\n#ifdef HAS_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\nuniform vec2 u_MetallicRoughnessValues;\\nuniform vec4 u_BaseColorFactor;\\n\\nuniform vec3 u_Camera;\\n\\n// debugging flags used for shader output of intermediate PBR variables\\nuniform vec4 u_ScaleDiffBaseMR;\\nuniform vec4 u_ScaleFGDSpec;\\nuniform vec4 u_ScaleIBLAmbient;\\n\\nvarying vec3 v_Position;\\n\\nvarying vec2 v_UV;\\n\\n#ifdef HAS_NORMALS\\n#ifdef HAS_TANGENTS\\nvarying mat3 v_TBN;\\n#else\\nvarying vec3 v_Normal;\\n#endif\\n#endif\\n\\n// Encapsulate the various inputs used by the various functions in the shading equation\\n// We store values in this struct to simplify the integration of alternative implementations\\n// of the shading terms, outlined in the Readme.MD Appendix.\\nstruct PBRInfo\\n{\\n    float NdotL;                  // cos angle between normal and light direction\\n    float NdotV;                  // cos angle between normal and view direction\\n    float NdotH;                  // cos angle between normal and half vector\\n    float LdotH;                  // cos angle between light direction and half vector\\n    float VdotH;                  // cos angle between view direction and half vector\\n    float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\\n    float metalness;              // metallic value at the surface\\n    vec3 reflectance0;            // full reflectance color (normal incidence angle)\\n    vec3 reflectance90;           // reflectance color at grazing angle\\n    float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\\n    vec3 diffuseColor;            // color contribution from diffuse lighting\\n    vec3 specularColor;           // color contribution from specular lighting\\n};\\n\\nconst float M_PI = 3.141592653589793;\\nconst float c_MinRoughness = 0.04;\\n\\nvec4 SRGBtoLINEAR(vec4 srgbIn)\\n{\\n    #ifdef MANUAL_SRGB\\n        #ifdef SRGB_FAST_APPROXIMATION\\n            vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\\n        #else //SRGB_FAST_APPROXIMATION\\n            vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\\n            vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\\n        #endif //SRGB_FAST_APPROXIMATION\\n        \\n        return vec4(linOut,srgbIn.w);\\n    #else //MANUAL_SRGB\\n        return srgbIn;\\n    #endif //MANUAL_SRGB\\n}\\n\\n\\n// Find the normal for this fragment, pulling either from a predefined normal map\\n// or from the interpolated mesh normal and tangent attributes.\\nvec3 getNormal()\\n{\\n    // Retrieve the tangent space matrix\\n#ifndef HAS_TANGENTS\\n    vec3 pos_dx = dFdx(v_Position);\\n    vec3 pos_dy = dFdy(v_Position);\\n    vec3 tex_dx = dFdx(vec3(v_UV, 0.0));\\n    vec3 tex_dy = dFdy(vec3(v_UV, 0.0));\\n    vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\\n\\n#ifdef HAS_NORMALS\\n    vec3 ng = normalize(v_Normal);\\n#else\\n    vec3 ng = cross(pos_dx, pos_dy);\\n#endif\\n\\n    t = normalize(t - ng * dot(ng, t));\\n    vec3 b = normalize(cross(ng, t));\\n    mat3 tbn = mat3(t, b, ng);\\n#else // HAS_TANGENTS\\n    mat3 tbn = v_TBN;\\n#endif\\n\\n#ifdef HAS_NORMALMAP\\n    vec3 n = texture2D(u_NormalSampler, v_UV).rgb;\\n    n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_NormalScale, u_NormalScale, 1.0)));\\n#else\\n    // The tbn matrix is linearly interpolated, so we need to re-normalize\\n    vec3 n = normalize(tbn[2].xyz);\\n#endif\\n\\n    return n;\\n}\\n\\n#ifdef USE_IBL\\n// Calculation of the lighting contribution from an optional Image Based Light source.\\n// Precomputed Environment Maps are required uniform inputs and are computed as outlined in [1].\\n// See our README.md on Environment Maps [3] for additional discussion.\\nvec3 getIBLContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\\n{\\n    float mipCount = 9.0; // resolution of 512x512\\n    float lod = (pbrInputs.perceptualRoughness * mipCount);\\n    // retrieve a scale and bias to F0. See [1], Figure 3\\n    \\n    vec3 brdf = SRGBtoLINEAR(texture2D(u_brdfLUT, vec2(pbrInputs.NdotV, 1.0 - pbrInputs.perceptualRoughness))).rgb;\\n    vec3 diffuseLight = SRGBtoLINEAR(textureCube(u_DiffuseEnvSampler, n)).rgb;\\n    \\n\\n#ifdef USE_TEX_LOD\\n    vec3 specularLight = SRGBtoLINEAR(textureCubeLodEXT(u_SpecularEnvSampler, reflection, lod)).rgb;\\n#else\\n    vec3 specularLight = SRGBtoLINEAR(textureCube(u_SpecularEnvSampler, reflection)).rgb;\\n#endif\\n\\n    vec3 diffuse = diffuseLight * pbrInputs.diffuseColor;\\n    vec3 specular = specularLight * (pbrInputs.specularColor * brdf.x + brdf.y);\\n\\n    // For presentation, this allows us to disable IBL terms\\n    diffuse *= u_ScaleIBLAmbient.x;\\n    specular *= u_ScaleIBLAmbient.y;\\n\\n    \\n    return diffuse + specular;\\n}\\n#endif\\n\\n#ifdef USE_KHR_LIGHTS\\nvec3 getKhrLightingContribution(PBRInfo pbrInputs, vec3 n, vec3 reflection)\\n{\\n    vec3 diffuse = pbrInputs.diffuseColor;\\n    vec3 specular = pbrInputs.specularColor;\\n\\n    #ifdef KHR_LIGHTS_AMBIENT \\n        vec3 nAmbient = (u_KhrLight_Ambient_Color * u_KhrLight_Ambient_Intensity);\\n        diffuse *= nAmbient; \\n        specular *= nAmbient; \\n    #endif\\n\\n    return diffuse + specular;\\n}\\n#endif\\n\\n// Basic Lambertian diffuse\\n// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\\n// See also [1], Equation 1\\nvec3 diffuse(PBRInfo pbrInputs)\\n{\\n    return pbrInputs.diffuseColor / M_PI;\\n}\\n\\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\\n// Implementation of fresnel from [4], Equation 15\\nvec3 specularReflection(PBRInfo pbrInputs)\\n{\\n    return pbrInputs.reflectance0 + (pbrInputs.reflectance90 - pbrInputs.reflectance0) * pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\\n}\\n\\n// This calculates the specular geometric attenuation (aka G()),\\n// where rougher material will reflect less light back to the viewer.\\n// This implementation is based on [1] Equation 4, and we adopt their modifications to\\n// alphaRoughness as input as originally proposed in [2].\\nfloat geometricOcclusion(PBRInfo pbrInputs)\\n{\\n    float NdotL = pbrInputs.NdotL;\\n    float NdotV = pbrInputs.NdotV;\\n    float r = pbrInputs.alphaRoughness;\\n\\n    float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\\n    float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\\n    return attenuationL * attenuationV;\\n}\\n\\n// The following equation(s) model the distribution of microfacet normals across the area being drawn (aka D())\\n// Implementation from \\\"Average Irregularity Representation of a Roughened Surface for Ray Reflection\\\" by T. S. Trowbridge, and K. P. Reitz\\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes from EPIC Games [1], Equation 3.\\nfloat microfacetDistribution(PBRInfo pbrInputs)\\n{\\n    float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\\n    float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\\n    return roughnessSq / (M_PI * f * f);\\n}\\n\\nvoid main()\\n{\\n    // Metallic and Roughness material properties are packed together\\n    // In glTF, these factors can be specified by fixed scalar values\\n    // or from a metallic-roughness map\\n    float perceptualRoughness = u_MetallicRoughnessValues.y;\\n    float metallic = u_MetallicRoughnessValues.x;\\n#ifdef HAS_METALROUGHNESSMAP\\n    // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\\n    // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\\n    vec4 mrSample = texture2D(u_MetallicRoughnessSampler, v_UV);\\n    perceptualRoughness = mrSample.g * perceptualRoughness;\\n    metallic = mrSample.b * metallic;\\n#endif\\n    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\\n    metallic = clamp(metallic, 0.0, 1.0);\\n    // Roughness is authored as perceptual roughness; as is convention,\\n    // convert to material roughness by squaring the perceptual roughness [2].\\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\\n\\n    // The albedo may be defined from a base texture or a flat color\\n#ifdef HAS_BASECOLORMAP\\n    vec4 textureColor = texture2D(u_BaseColorSampler, v_UV);\\n    vec4 baseColor = SRGBtoLINEAR(textureColor) * u_BaseColorFactor;\\n#else\\n    vec4 baseColor = u_BaseColorFactor;\\n#endif\\n\\n    #ifdef HAS_ALPHA_CUTOFF\\n        //Pure3d added\\n        if(baseColor.a < u_AlphaCutoff) {\\n            discard;\\n        }\\n\\n    #endif\\n\\n    #ifndef HAS_ALPHA_BLEND\\n        baseColor.a = 1.0;\\n    #endif\\n\\n    vec3 f0 = vec3(0.04);\\n#ifdef HAS_COLOR\\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0) * SRGBtoLINEAR(v_Color).rgb;\\n    diffuseColor *= 1.0 - metallic;\\n#else\\n    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\\n    diffuseColor *= 1.0 - metallic;\\n#endif\\n    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\\n\\n    // Compute reflectance.\\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\\n\\n    // For typical incident reflectance range (between 4% to 100%) set the grazing reflectance to 100% for typical fresnel effect.\\n    // For very low reflectance range on highly diffuse objects (below 4%), incrementally reduce grazing reflecance to 0%.\\n    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\\n    vec3 specularEnvironmentR0 = specularColor.rgb;\\n    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\\n\\n    vec3 n = getNormal();                             // normal at surface point\\n    vec3 v = normalize(u_Camera - v_Position);        // Vector from surface point to camera\\n    vec3 l = normalize(u_LightDirection);             // Vector from surface point to light\\n    vec3 h = normalize(l+v);                          // Half vector between both l and v\\n    vec3 reflection = -normalize(reflect(v, n));\\n\\n    float NdotL = clamp(dot(n, l), 0.001, 1.0);\\n    float NdotV = abs(dot(n, v)) + 0.001;\\n    float NdotH = clamp(dot(n, h), 0.0, 1.0);\\n    float LdotH = clamp(dot(l, h), 0.0, 1.0);\\n    float VdotH = clamp(dot(v, h), 0.0, 1.0);\\n\\n    PBRInfo pbrInputs = PBRInfo(\\n        NdotL,\\n        NdotV,\\n        NdotH,\\n        LdotH,\\n        VdotH,\\n        perceptualRoughness,\\n        metallic,\\n        specularEnvironmentR0,\\n        specularEnvironmentR90,\\n        alphaRoughness,\\n        diffuseColor,\\n        specularColor\\n    );\\n\\n    // Calculate the shading terms for the microfacet specular shading model\\n    vec3 F = specularReflection(pbrInputs);\\n    float G = geometricOcclusion(pbrInputs);\\n    float D = microfacetDistribution(pbrInputs);\\n\\n    // Calculation of analytical lighting contribution\\n    vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\\n    vec3 specContrib = F * G * D / (4.0 * NdotL * NdotV);\\n    // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\\n    vec3 color = NdotL * u_LightColor * (diffuseContrib + specContrib);\\n\\n    // Calculate lighting contribution from image based lighting source (IBL)\\n#ifdef USE_IBL\\n    color += getIBLContribution(pbrInputs, n, reflection);\\n#endif\\n\\n#ifdef USE_KHR_LIGHTS\\n    color += getKhrLightingContribution(pbrInputs, n, reflection);\\n#endif\\n\\n    // Apply optional PBR terms for additional (optional) shading\\n#ifdef HAS_OCCLUSIONMAP\\n    float ao = texture2D(u_OcclusionSampler, v_UV).r;\\n    color = mix(color, color * ao, u_OcclusionStrength);\\n#endif\\n\\n#ifdef HAS_EMISSIVEMAP\\n    vec3 emissive = SRGBtoLINEAR(texture2D(u_EmissiveSampler, v_UV)).rgb * u_EmissiveFactor;\\n    color += emissive;\\n#endif\\n\\n\\n#ifdef USE_KHR_LIGHTS\\n%KHR_LIGHTS_FUNCS%\\n#endif\\n    // This section uses mix to override final color for reference app visualization\\n    // of various parameters in the lighting equation.\\n    color = mix(color, F, u_ScaleFGDSpec.x);\\n    color = mix(color, vec3(G), u_ScaleFGDSpec.y);\\n    color = mix(color, vec3(D), u_ScaleFGDSpec.z);\\n    color = mix(color, specContrib, u_ScaleFGDSpec.w);\\n\\n    color = mix(color, diffuseContrib, u_ScaleDiffBaseMR.x);\\n    color = mix(color, baseColor.rgb, u_ScaleDiffBaseMR.y);\\n    color = mix(color, vec3(metallic), u_ScaleDiffBaseMR.z);\\n    color = mix(color, vec3(perceptualRoughness), u_ScaleDiffBaseMR.w);\\n\\n    gl_FragColor = vec4(pow(color,vec3(1.0/2.2)), baseColor.a);\\n}\\n\";\n\n//import unlitFragmentShader from \"./Gltf-Unlit-Shader-Fragment.glsl\";\r\n//These need to be called via bridge/setup somehow\r\nconst GLTF_PARSE_getInitialShaderConfig = ({ data, primitive }) => GltfExtensions\r\n    .map(ext => ext.initialShaderConfig)\r\n    .reduce((acc, val) => (acc = val({ data, primitive })(acc), acc), getCoreInitialShaderConfig({ data, primitive }));\r\nconst updateRuntimeShaderConfig = ({ data, primitive, scene }) => {\r\n    const shaderConfig = GltfExtensions\r\n        .map(ext => ext.runtimeShaderConfig)\r\n        .reduce((acc, val) => (acc = val({ data, scene, primitive })(acc), acc), getCoreRuntimeShaderConfig({ data, scene, primitive }));\r\n    return Object.assign({}, primitive, { shaderConfig });\r\n};\r\nconst generateShader = ({ renderer, data, primitive }) => {\r\n    const shaderHash = getShaderHash(primitive.shaderConfig);\r\n    if (!data.shaders.has(shaderHash)) {\r\n        const source = getShaderSource({ data, primitive });\r\n        const shader = createShader({\r\n            shaderId: Symbol(),\r\n            renderer,\r\n            source,\r\n        });\r\n        data.shaders.set(shaderHash, shader);\r\n        //console.log(`new shader compiled`);\r\n    }\r\n    const shader = data.shaders.get(shaderHash);\r\n    return shader;\r\n};\r\nconst getCoreInitialShaderConfig = ({ data, primitive }) => {\r\n    const gltf = data.original;\r\n    const originalNode = data.original.nodes[primitive.originalNodeId];\r\n    const originalPrimitive = data.original.meshes[primitive.originalMeshId].primitives[primitive.originalPrimitiveId];\r\n    const hasAttribute = (originalPrimitive) => (attr) => Object.keys(originalPrimitive.attributes).indexOf(attr) !== -1;\r\n    const material = primitive.material;\r\n    let nMorphWeights = 0;\r\n    let nPositionMorphs = 0;\r\n    let nNormalMorphs = 0;\r\n    let nTangentMorphs = 0;\r\n    let nSkinJoints = 0;\r\n    if (originalNode.skin !== undefined) {\r\n        const skin = data.original.skins[originalNode.skin];\r\n        nSkinJoints = skin.joints.length;\r\n    }\r\n    if (originalPrimitive.targets) {\r\n        originalPrimitive.targets.forEach(target => {\r\n            GLTF_PARSE_sortPrimitiveAttributeKeys(Object.keys(target)).forEach(key => {\r\n                switch (key) {\r\n                    case \"POSITION\":\r\n                        nPositionMorphs++;\r\n                        break;\r\n                    case \"NORMAL\":\r\n                        nNormalMorphs++;\r\n                        break;\r\n                    case \"TANGENT\":\r\n                        nTangentMorphs++;\r\n                        break;\r\n                    default: console.warn(\"unknown...\", key);\r\n                }\r\n            });\r\n            nMorphWeights++;\r\n        });\r\n    }\r\n    const shaderConfig = {\r\n        nMorphWeights,\r\n        nPositionMorphs,\r\n        nNormalMorphs,\r\n        nTangentMorphs,\r\n        nSkinJoints,\r\n        alphaMode: (material && material.alphaMode) ? material.alphaMode : GltfMaterialAlphaMode.OPAQUE,\r\n        hasNormalAttributes: hasAttribute(originalPrimitive)(\"NORMAL\"),\r\n        hasTangentAttributes: hasAttribute(originalPrimitive)(\"TANGENT\"),\r\n        hasUvAttributes: hasAttribute(originalPrimitive)(\"TEXCOORD_0\"),\r\n        hasColorAttributes: hasAttribute(originalPrimitive)(\"COLOR_0\"),\r\n        hasBaseColorMap: material && material.baseColorSamplerIndex !== undefined,\r\n        hasNormalMap: material && material.normal !== undefined,\r\n        hasEmissiveMap: material && material.emissiveSamplerIndex !== undefined,\r\n        hasMetalRoughnessMap: material && material.metallicRoughnessSamplerIndex !== undefined,\r\n        hasOcclusionMap: material && material.occlusion !== undefined,\r\n        manualSRGB: data.initConfig.manualSRGB === true,\r\n        fastSRGB: data.initConfig.fastSRGB === true,\r\n        extensions: {}\r\n    };\r\n    return shaderConfig;\r\n};\r\nconst getCoreRuntimeShaderConfig = ({ data, scene, primitive }) => {\r\n    return primitive.shaderConfig;\r\n};\r\nconst getCoreShaderSource = ({ data, primitive }) => {\r\n    const gltf = data.original;\r\n    const originalPrimitive = data.original.meshes[primitive.originalMeshId].primitives[primitive.originalPrimitiveId];\r\n    const config = primitive.shaderConfig;\r\n    const defines = [];\r\n    if (config.hasNormalAttributes) {\r\n        defines.push(\"HAS_NORMALS\");\r\n    }\r\n    if (config.hasTangentAttributes) {\r\n        defines.push(\"HAS_TANGENTS\");\r\n    }\r\n    if (config.hasUvAttributes) {\r\n        defines.push(\"HAS_UV\");\r\n    }\r\n    if (config.hasColorAttributes) {\r\n        defines.push(\"HAS_COLOR\");\r\n    }\r\n    if (config.hasBaseColorMap) {\r\n        defines.push(\"HAS_BASECOLORMAP\");\r\n    }\r\n    if (config.hasNormalMap) {\r\n        defines.push(\"HAS_NORMALMAP\");\r\n    }\r\n    if (config.hasEmissiveMap) {\r\n        defines.push(\"HAS_EMISSIVEMAP\");\r\n    }\r\n    if (config.hasMetalRoughnessMap) {\r\n        defines.push(\"HAS_METALROUGHNESSMAP\");\r\n    }\r\n    if (config.hasOcclusionMap) {\r\n        defines.push(\"HAS_OCCLUSIONMAP\");\r\n    }\r\n    if (config.manualSRGB) {\r\n        defines.push(\"MANUAL_SRGB\");\r\n    }\r\n    if (config.fastSRGB) {\r\n        defines.push(\"SRGB_FAST_APPROXIMATION\");\r\n    }\r\n    if (config.nSkinJoints) {\r\n        defines.push(\"HAS_SKIN\");\r\n    }\r\n    switch (config.alphaMode) {\r\n        case GltfMaterialAlphaMode.MASK:\r\n            defines.push(\"HAS_ALPHA_CUTOFF\");\r\n            break;\r\n        case GltfMaterialAlphaMode.BLEND:\r\n            defines.push(\"HAS_ALPHA_BLEND\");\r\n            break;\r\n    }\r\n    const defineString = defines.map(value => `#define ${value} 1\\n`).join('');\r\n    const vertex = getCoreVertexShader({ data, primitive })(defineString + vertexShaderSource);\r\n    const fragment = getCoreFragmentShader(defineString + fragmentShaderSource);\r\n    return { vertex, fragment };\r\n};\r\nconst getCoreVertexShader = ({ data, primitive }) => (vs) => {\r\n    const originalNode = data.original.nodes[primitive.originalNodeId];\r\n    const originalPrimitive = data.original.meshes[primitive.originalMeshId].primitives[primitive.originalPrimitiveId];\r\n    const attributeKeys = GLTF_PARSE_getPrimitiveAttributeKeys(originalPrimitive);\r\n    const { targets } = originalPrimitive;\r\n    const shaderMorphVarLookup = {\r\n        \"POSITION\": \"m_Position\",\r\n        \"NORMAL\": \"m_Normal\",\r\n        \"TANGENT\": \"m_Tangent\",\r\n    };\r\n    let MORPH_VARS = '';\r\n    let MORPH_FUNCS = '';\r\n    let morphIndex = 0;\r\n    let weightIndex = 0;\r\n    if (targets) {\r\n        targets.forEach(target => {\r\n            GLTF_PARSE_sortPrimitiveAttributeKeys(Object.keys(target)).forEach(key => {\r\n                const aMorph = `a_Morph_${morphIndex}`;\r\n                const aTarget = shaderMorphVarLookup[key];\r\n                MORPH_VARS += `attribute vec4 ${aMorph};\\n`;\r\n                MORPH_FUNCS += `${aTarget} += (u_MorphWeights[${weightIndex}] * ${aMorph});\\n`;\r\n                morphIndex++;\r\n            });\r\n            weightIndex++;\r\n        });\r\n        MORPH_VARS += `uniform float u_MorphWeights[${weightIndex}];\\n`;\r\n    }\r\n    let SKIN_JOINT_COUNT = '';\r\n    if (originalNode.skin !== undefined) {\r\n        const skin = data.original.skins[originalNode.skin];\r\n        SKIN_JOINT_COUNT = skin.joints.length.toString();\r\n    }\r\n    return vs\r\n        .replace(\"%MORPH_VARS%\", MORPH_VARS)\r\n        .replace(\"%MORPH_FUNCS%\", MORPH_FUNCS)\r\n        .replace(\"%SKIN_JOINT_COUNT%\", SKIN_JOINT_COUNT);\r\n};\r\nconst getCoreFragmentShader = (fs) => fs;\r\nconst getShaderSource = ({ data, primitive }) => GltfExtensions\r\n    .map(ext => ext.shaderSource)\r\n    .reduce((acc, val) => (acc = val({ data, primitive })(acc), acc), getCoreShaderSource({ data, primitive }));\n\nconst GLTF_PARSE_createPrimitives = ({ renderer, data }) => {\r\n    const gltf = data.original;\r\n    const meshPrimitives = new Map();\r\n    if (gltf.nodes === undefined || gltf.nodes === null) {\r\n        return meshPrimitives;\r\n    }\r\n    gltf.nodes\r\n        .map((node, idx) => [node, idx])\r\n        .filter(([node, idx]) => node.mesh !== undefined && node.mesh !== null)\r\n        .forEach(([node, nodeId]) => meshPrimitives.set(node.mesh, gltf.meshes[node.mesh].primitives.map((originalPrimitive, primitiveIdx) => {\r\n        const mesh = gltf.meshes[node.mesh];\r\n        const primitive = Object.assign({ originalNodeId: nodeId, originalMeshId: node.mesh, originalPrimitiveId: primitiveIdx, vaoId: GLTF_PARSE_createPrimitiveAttributes({ renderer, originalPrimitive, data }) }, GLTF_PARSE_getPrimitiveDrawing({ originalPrimitive, data }));\r\n        if (originalPrimitive.material !== undefined) {\r\n            primitive.material = GLTF_PARSE_createMaterialForPrimitive({ gltf, materialId: originalPrimitive.material, data });\r\n        }\r\n        primitive.shaderConfig = GLTF_PARSE_getInitialShaderConfig({ data, primitive });\r\n        return primitive;\r\n    })));\r\n    return meshPrimitives;\r\n};\n\nconst GLTF_PARSE_getCamera = (originalCamera) => {\r\n    return originalCamera.type === \"orthographic\"\r\n        ? {\r\n            kind: CameraKind.ORTHOGRAPHIC,\r\n            xmag: originalCamera.orthographic.xmag,\r\n            ymag: originalCamera.orthographic.ymag,\r\n            znear: originalCamera.orthographic.znear,\r\n            zfar: originalCamera.orthographic.zfar\r\n        }\r\n        : {\r\n            kind: CameraKind.PERSPECTIVE,\r\n            aspectRatio: originalCamera.perspective.aspectRatio,\r\n            yfov: originalCamera.perspective.yfov,\r\n            znear: originalCamera.perspective.znear,\r\n            zfar: originalCamera.perspective.zfar,\r\n        };\r\n};\n\nconst GLTF_PARSE_createSkins = ({ gltf, buffers }) => {\r\n    const skins = new Map();\r\n    if (!gltf.skins || !gltf.skins.length) {\r\n        return skins;\r\n    }\r\n    //From the spec, this is guaranteed to be from a vec4 accessor and a series of mat4 data\r\n    const splitMatrix = (numbers) => {\r\n        const ret = new Array();\r\n        for (let idx = 0; idx < numbers.length;) {\r\n            ret.push(numbers.slice(idx, idx + 16));\r\n            idx += 16;\r\n        }\r\n        return ret;\r\n    };\r\n    gltf.skins.forEach((originalSkin, skinId) => {\r\n        const inverseBindMatrices = originalSkin.inverseBindMatrices\r\n            ? splitMatrix(GLTF_PARSE_getAccessorTypedData({\r\n                gltf,\r\n                buffers,\r\n                info: GLTF_PARSE_getAccessorDataInfo({ gltf, accessorId: originalSkin.inverseBindMatrices })\r\n            }))\r\n            : originalSkin.joints.map(createIdentityMat4());\r\n        if (inverseBindMatrices.length !== originalSkin.joints.length) {\r\n            throw new Error(\"inverse bind matrices mismatch!\");\r\n        }\r\n        let skeletonRootId;\r\n        const skinData = {\r\n            joints: originalSkin.joints.map((originalNodeId, idx) => {\r\n                const joint = {\r\n                    originalNodeId,\r\n                    inverseBindMatrix: inverseBindMatrices[idx]\r\n                };\r\n                if (originalSkin.skeleton !== undefined && originalSkin.skeleton === originalNodeId) {\r\n                    skeletonRootId = originalNodeId;\r\n                }\r\n                return joint;\r\n            })\r\n        };\r\n        if (skeletonRootId !== undefined) {\r\n            skinData.skeletonRootId = skeletonRootId;\r\n        }\r\n        skins.set(skinId, skinData);\r\n    });\r\n    return skins;\r\n};\n\n/*\r\n * All of the nodes are parsed in place as though they could be any root\r\n * Technically this is extra needless computation, but it makes the code clearer\r\n * Also, doing it this way allows for dynamic scene mixtures :D\r\n *\r\n * Since it's only on init, the cpu processing shouldn't matter much\r\n * Nodes are by definition lightweight, it's no biggie in terms of memory either\r\n * However, they _should_ be culled via GltfBridge.getOriginalScene(), otherwise dups will show\r\n */\r\nconst GLTF_PARSE_getNodes = ({ gltf, primitives, data, assets }) => {\r\n    const skinLookup = GLTF_PARSE_createSkins({ gltf, buffers: assets.buffers });\r\n    const getGltfNode = (parentModelMatrix) => (originalNodeId) => (node) => {\r\n        const baseNode = {\r\n            originalNodeId,\r\n            animationIds: [],\r\n            kind: node.mesh !== undefined && primitives.has(node.mesh) && primitives.get(node.mesh).length\r\n                ? GltfNodeKind.MESH\r\n                : node.camera !== undefined\r\n                    ? NodeKind.CAMERA\r\n                    : undefined,\r\n        };\r\n        const trs = node.matrix ? getTrsFromMatrix(Float64Array.from(node.matrix)) : getTrs(node);\r\n        const localMatrix = node.matrix ? new Float64Array(node.matrix) : getMatrixFromTrs(trs);\r\n        const modelMatrix = getModelMatrix(parentModelMatrix)(localMatrix);\r\n        baseNode.transform = { trs, localMatrix, modelMatrix };\r\n        const hasNormals = baseNode.kind !== GltfNodeKind.MESH\r\n            ? false\r\n            : gltf.meshes[node.mesh].primitives.some(p => GLTF_PARSE_primitiveHasAttribute(\"NORMAL\")(p));\r\n        if (hasNormals) {\r\n            baseNode.transform.normalMatrix = getNormalMatrix(modelMatrix);\r\n        }\r\n        if (baseNode.kind === GltfNodeKind.MESH) {\r\n            baseNode.primitives = primitives.get(node.mesh);\r\n            if (node.skin !== undefined) {\r\n                const skinData = skinLookup.get(node.skin);\r\n                baseNode.skin = {\r\n                    skinId: node.skin,\r\n                    joints: skinData.joints.slice()\r\n                };\r\n                if (skinData.skeletonRootId !== undefined) {\r\n                    baseNode.skin.skeletonRootId = skinData.skeletonRootId;\r\n                }\r\n            }\r\n            const morphWeights = node.weights\r\n                ? Float64Array.from(node.weights)\r\n                : gltf.meshes[node.mesh].weights\r\n                    ? Float64Array.from(gltf.meshes[node.mesh].weights)\r\n                    : undefined;\r\n            if (morphWeights) {\r\n                baseNode.morphWeights = morphWeights;\r\n            }\r\n        }\r\n        else if (baseNode.kind === NodeKind.CAMERA) {\r\n            baseNode.camera = GLTF_PARSE_getCamera(gltf.cameras[node.camera]);\r\n            baseNode.cameraIndex = node.camera;\r\n        }\r\n        const finalNode = GltfExtensions\r\n            .map(ext => ext.createNode)\r\n            .reduce((acc, val) => (acc = val(gltf)(node)(acc), acc), baseNode);\r\n        return !node.children\r\n            ? finalNode\r\n            : Object.assign(finalNode, { children: node.children.map(idx => getGltfNode(modelMatrix)(idx)(gltf.nodes[idx])) });\r\n    };\r\n    return GLTF_PARSE_addAnimationIds({\r\n        gltf,\r\n        nodes: gltf.nodes\r\n            .map((node, idx) => getGltfNode(null)(idx)(node))\r\n    });\r\n};\r\nfunction getTrs(node) {\r\n    const trs = {\r\n        translation: Float64Array.from([0.0, 0.0, 0.0]),\r\n        rotation: Float64Array.from([0.0, 0.0, 0.0, 1.0]),\r\n        scale: Float64Array.from([1.0, 1.0, 1.0])\r\n    };\r\n    Object.keys(trs).forEach(prop => {\r\n        const nodeTrsProp = node[prop];\r\n        if (nodeTrsProp) {\r\n            trs[prop] = nodeTrsProp;\r\n        }\r\n    });\r\n    return trs;\r\n}\n\nconst createRendererThunk = (thunk) => () => {\r\n    const { renderer, data, node, primitive, lightList, scene, shader, skinMatrices } = thunk;\r\n    const { camera } = scene;\r\n    const { gl } = renderer;\r\n    const gltf = data.original;\r\n    const { material, drawMode } = primitive;\r\n    const { uniforms, shaderId } = shader;\r\n    const { uniform1i, uniform1f, uniform1fv, uniform1iv, uniform2fv, uniform3fv, uniform4fv, uniformMatrix4fv } = uniforms.setters;\r\n    const vaoId = data.attributes.vaoIdLookup.get(primitive.vaoId);\r\n    let samplerIndex = 0;\r\n    activateShader(shaderId);\r\n    if (material && material.doubleSided) {\r\n        renderer.glToggle(WebGlConstants.CULL_FACE)(false);\r\n    }\r\n    else {\r\n        renderer.glToggle(WebGlConstants.CULL_FACE)(true);\r\n    }\r\n    /*\r\n        Set the IBL uniforms\r\n    */\r\n    if (scene.extensions.ibl) {\r\n        renderer.switchTexture(samplerIndex)(data.extensions.ibl.brdf);\r\n        uniform1i(\"u_brdfLUT\")(samplerIndex++);\r\n        if (data.extensions.ibl.cubeMaps.diffuse) {\r\n            renderer.switchCubeTexture(samplerIndex)(data.extensions.ibl.cubeMaps.diffuse);\r\n            uniform1i(\"u_DiffuseEnvSampler\")(samplerIndex++);\r\n        }\r\n        if (data.extensions.ibl.cubeMaps.specular) {\r\n            renderer.switchCubeTexture(samplerIndex)(data.extensions.ibl.cubeMaps.specular);\r\n            uniform1i(\"u_SpecularEnvSampler\")(samplerIndex++);\r\n        }\r\n        //this is actually just used in fragment shader (e.g. not for transforms), but it's required\r\n        uniform3fv(\"u_Camera\")(camera.position);\r\n        uniform4fv(\"u_ScaleDiffBaseMR\")(scene.extensions.ibl.scaleDiffBaseMR);\r\n        uniform4fv(\"u_ScaleFGDSpec\")(scene.extensions.ibl.scaleFGDSpec);\r\n        uniform4fv(\"u_ScaleIBLAmbient\")(scene.extensions.ibl.scaleIBLAmbient);\r\n    }\r\n    /*\r\n     * Set the generic lighting uniforms\r\n    */\r\n    //Lighting is not implemented in the shader yet, even though the nodes are\r\n    //Exception is the Directional light though the actual direction is hardcoded\r\n    if (scene.light) {\r\n        uniform3fv(\"u_KhrLight_Ambient_Color\")(scene.light.color);\r\n        uniform1f(\"u_KhrLight_Ambient_Intensity\")(scene.light.intensity);\r\n    }\r\n    lightList.forEach(lightNode => {\r\n        const { light } = lightNode;\r\n        if (light.kind === LightKind.Directional) {\r\n            //Just for now - TODO - get from lightNode.transform.trs.rotation\r\n            //Hardcoding the position so we can see it - on the left\r\n            uniform3fv(\"u_LightDirection\")([-0.5825, -0.1357, -0.8014]);\r\n            uniform3fv(\"u_LightColor\")(light.color);\r\n        }\r\n        //TODO - allow multiple lights, point lights, etc.\r\n        if (light.kind === LightKind.Spot) ;\r\n    });\r\n    /*\r\n      Set the transform uniforms\r\n    */\r\n    if (skinMatrices) {\r\n        uniformMatrix4fv(\"u_Skin_Matrices\")(false)(skinMatrices);\r\n    }\r\n    uniformMatrix4fv(\"u_MVPMatrix\")(false)(node.transform.modelViewProjectionMatrix);\r\n    uniformMatrix4fv(\"u_ModelMatrix\")(false)(node.transform.modelMatrix);\r\n    if (node.transform.normalMatrix) {\r\n        uniformMatrix4fv(\"u_NormalMatrix\")(false)(node.transform.normalMatrix);\r\n    }\r\n    /*\r\n      Set the morph targets\r\n    */\r\n    //console.log(uniforms.getLocation(\"u_MorphWeights\"));\r\n    if (node.morphWeights) {\r\n        uniform1fv(\"u_MorphWeights\")(node.morphWeights);\r\n    }\r\n    /*\r\n      Set the material uniforms\r\n    */\r\n    const assignMeshTexture = (uName) => (textureInfo) => {\r\n        if (typeof textureInfo === \"number\") {\r\n            renderer.switchTexture(samplerIndex)(data.textures.get(textureInfo));\r\n        }\r\n        else {\r\n            renderer.switchTexture(samplerIndex)(textureInfo);\r\n        }\r\n        uniform1i(uName)(samplerIndex++);\r\n    };\r\n    if (material) {\r\n        uniform2fv(\"u_MetallicRoughnessValues\")(material.metallicRoughnessValues);\r\n        uniform4fv(\"u_BaseColorFactor\")(material.baseColorFactor);\r\n        if (material.baseColorSamplerIndex !== undefined) {\r\n            assignMeshTexture(\"u_BaseColorSampler\")(material.baseColorSamplerIndex);\r\n        }\r\n        if (material.metallicRoughnessSamplerIndex !== undefined) {\r\n            assignMeshTexture(\"u_MetallicRoughnessSampler\")(material.metallicRoughnessSamplerIndex);\r\n        }\r\n        if (material.normal !== undefined) {\r\n            uniform1f(\"u_NormalScale\")(material.normal.scale);\r\n            assignMeshTexture(\"u_NormalSampler\")(material.normal.samplerIndex);\r\n        }\r\n        if (material.occlusion !== undefined) {\r\n            uniform1f(\"u_OcclusionStrength\")(material.occlusion.strength);\r\n            assignMeshTexture(\"u_OcclusionSampler\")(material.occlusion.samplerIndex);\r\n        }\r\n        if (material.emissiveSamplerIndex !== undefined) {\r\n            assignMeshTexture(\"u_EmissiveSampler\")(material.emissiveSamplerIndex);\r\n        }\r\n        if (material.emissiveFactor !== undefined) {\r\n            uniform3fv(\"u_EmissiveFactor\")(material.emissiveFactor);\r\n        }\r\n        if (material.alphaMode === GltfMaterialAlphaMode.MASK) {\r\n            const alphaCutoff = (material.alphaMode === GltfMaterialAlphaMode.MASK)\r\n                ? material.alphaCutoff\r\n                : 1.0;\r\n            uniform1f(\"u_AlphaCutoff\")(alphaCutoff);\r\n        }\r\n    }\r\n    /*\r\n        Draw\r\n    */\r\n    renderer.vertexArrays.activate(vaoId);\r\n    if (primitive.drawKind === GltfPrimitiveDrawKind.ELEMENTS) {\r\n        const elementsAccessor = gltf.accessors[primitive.elementsId];\r\n        //console.log(`gl.drawElements(${drawMode}, ${elementsAccessor.count}, ${elementsAccessor.componentType}, ${elementsAccessor.byteOffset || 0});`)\r\n        gl.drawElements(drawMode, elementsAccessor.count, elementsAccessor.componentType, elementsAccessor.byteOffset || 0);\r\n    }\r\n    else {\r\n        gl.drawArrays(drawMode, 0, primitive.arrayCount);\r\n    }\r\n};\n\nconst renderScene = (renderer) => (data) => (scene) => {\r\n    const shaderGroupByAlpha = new Map();\r\n    const renderThunksByShader = new Map();\r\n    const meshList = new Array();\r\n    const lightList = new Array();\r\n    forEachNodes((node) => {\r\n        if (node.kind === GltfNodeKind.MESH\r\n            && node.transform\r\n            && node.transform.modelViewProjectionMatrix ? true : false) {\r\n            meshList.push(node);\r\n        }\r\n        else if (node.kind === NodeKind.LIGHT) {\r\n            lightList.push(node);\r\n        }\r\n    })(scene.nodes);\r\n    meshList.forEach(node => {\r\n        let skinMatrices;\r\n        if (node.skin !== undefined && node.skin.skinMatrices) {\r\n            skinMatrices = node.skin.skinMatrices;\r\n        }\r\n        node.primitives.forEach(primitive => {\r\n            const shader = generateShader({\r\n                renderer,\r\n                data,\r\n                primitive,\r\n            });\r\n            if (!renderThunksByShader.has(shader.shaderId)) {\r\n                renderThunksByShader.set(shader.shaderId, []);\r\n            }\r\n            const shaderGroup = renderThunksByShader.get(shader.shaderId);\r\n            shaderGroup.push(createRendererThunk({\r\n                skinMatrices,\r\n                renderer,\r\n                data,\r\n                node,\r\n                primitive,\r\n                lightList,\r\n                scene,\r\n                shader\r\n            }));\r\n            if (!shaderGroupByAlpha.has(primitive.shaderConfig.alphaMode)) {\r\n                shaderGroupByAlpha.set(primitive.shaderConfig.alphaMode, new Set());\r\n            }\r\n            shaderGroupByAlpha.get(primitive.shaderConfig.alphaMode).add(shaderGroup);\r\n        });\r\n    });\r\n    //These are for _all_ gltf renders, but there might be another gl renderer between them so the flags need to be set\r\n    renderer.glToggle(WebGlConstants.BLEND)(false);\r\n    renderer.glToggle(WebGlConstants.DEPTH_TEST)(true);\r\n    //these are just random guesses looking at some common practices out in the wild\r\n    renderer.glDepthFunc(renderer.gl.LEQUAL);\r\n    renderer.glBlendFunc(renderer.gl.SRC_ALPHA)(renderer.gl.ONE_MINUS_SRC_ALPHA);\r\n    const render = _render(renderer)(shaderGroupByAlpha);\r\n    render(GltfMaterialAlphaMode.OPAQUE);\r\n    render(GltfMaterialAlphaMode.MASK);\r\n    render(GltfMaterialAlphaMode.BLEND);\r\n};\r\n//Render calls are sorted by alpha and then shader.\r\n//The thunks themselves will assign vaos\r\n//They are released by shader groupo\r\nconst _render = (renderer) => (shaderGroups) => (alphaMode) => {\r\n    if (shaderGroups.has(alphaMode)) {\r\n        if (alphaMode === GltfMaterialAlphaMode.BLEND) {\r\n            renderer.glToggle(WebGlConstants.BLEND)(true);\r\n        }\r\n        shaderGroups.get(alphaMode)\r\n            .forEach(xs => {\r\n            xs.forEach(fn => fn());\r\n        });\r\n    }\r\n};\n\nconst gltf_load = ({ renderer, path, config, mapper }) => {\r\n    const bridge = createGltfBridge(renderer);\r\n    return bridge\r\n        .loadFile(path)\r\n        .chain(({ gltf, glbBuffers }) => {\r\n        gltf = mapper ? mapper(gltf) : gltf;\r\n        return bridge.loadAssets({ gltf, glbBuffers, basePath: getBasePath(path) })\r\n            .map(assets => ({ gltf, config, assets }));\r\n    })\r\n        .map(bridge.start)\r\n        .map(() => bridge);\r\n};\r\nfunction createGltfBridge(renderer) {\r\n    const exports = {};\r\n    let _allNodes;\r\n    let _data;\r\n    const loadFile = (path) => fetchArrayBufferUrl(path).map(GLTF_PARSE_getOriginalFromArrayBuffer);\r\n    const loadAssets = ({ gltf, basePath, glbBuffers }) => GLTF_PARSE_LoadDataAssets({ basePath: basePath ? basePath : \"\", gltf, glbBuffers });\r\n    const start = ({ gltf, assets, config }) => {\r\n        const data = GLTF_PARSE_CreateData({\r\n            gltf,\r\n            renderer,\r\n            assets,\r\n            config\r\n        });\r\n        const primitives = GLTF_PARSE_createPrimitives({ renderer, data });\r\n        _data = data;\r\n        _allNodes = GLTF_PARSE_getNodes({ gltf, primitives, data, assets });\r\n    };\r\n    const updatePrimitives = (scene) => (mapper) => {\r\n        return Object.assign({}, scene, {\r\n            nodes: mapNodes(node => node.kind === GltfNodeKind.MESH\r\n                ? Object.assign({}, node, {\r\n                    primitives: node.primitives.map(primitive => mapper(primitive))\r\n                })\r\n                : node)(scene.nodes)\r\n        });\r\n    };\r\n    const updateShaderConfigs = (scene) => {\r\n        return updatePrimitives(scene)(primitive => updateRuntimeShaderConfig({\r\n            data: _data,\r\n            primitive,\r\n            scene\r\n        }));\r\n    };\r\n    const renderScene$$1 = (scene) => {\r\n        renderScene(renderer)(_data)(scene);\r\n    };\r\n    const getOriginalScene = (camera) => (sceneNumber) => {\r\n        let nodes = [];\r\n        if (sceneNumber >= 0 && _data.original.scenes[sceneNumber]) {\r\n            const sceneList = _data.original.scenes[sceneNumber].nodes;\r\n            forEachNodes(node => {\r\n                if (sceneList.indexOf(node.originalNodeId) !== -1) {\r\n                    nodes.push(node);\r\n                }\r\n            })(_allNodes);\r\n        }\r\n        else {\r\n            nodes = _allNodes;\r\n            console.warn(\"no scene specified! Expect duplicate nodes...\");\r\n        }\r\n        const originalScene = sceneNumber >= 0\r\n            ? _data.original.scenes[sceneNumber]\r\n            : {\r\n                nodes: _data.original.nodes.map((node, idx) => idx)\r\n            };\r\n        //const nodes =_allNodes.filter((node, idx) => originalScene.nodes.indexOf(idx) !== -1);\r\n        const scene = GltfExtensions\r\n            .map(ext => ext.createScene)\r\n            .reduce((acc, val) => acc = val(_data.original)(originalScene)(acc), {\r\n            camera,\r\n            extensions: {},\r\n            nodes: updateNodeListTransforms({\r\n                updateLocal: true,\r\n                updateModel: true,\r\n                updateView: true,\r\n                camera,\r\n            })(null)(nodes)\r\n        });\r\n        //First time is mandatory - after that it's up to the caller\r\n        return updateShaderConfigs(scene);\r\n    };\r\n    const getCameraNode = (index) => {\r\n        const node = findNode(node => node.kind === NodeKind.CAMERA && node.cameraIndex === index)(_allNodes);\r\n        if (!node) {\r\n            return undefined;\r\n        }\r\n        const camera = Object.assign({}, node.camera);\r\n        if (camera.kind === CameraKind.PERSPECTIVE && camera.aspectRatio === undefined) {\r\n            camera.aspectRatio = renderer.canvas.width / renderer.canvas.height;\r\n        }\r\n        return Object.assign({}, node, { camera: updateCameraWithTransform(node.transform)(camera) });\r\n    };\r\n    const bridge = {\r\n        renderer,\r\n        getAllNodes: () => _allNodes,\r\n        getData: () => _data,\r\n        getOriginalScene,\r\n        getCameraNode,\r\n        loadFile,\r\n        loadAssets,\r\n        start,\r\n        renderScene: renderScene$$1,\r\n        updateShaderConfigs,\r\n    };\r\n    Object.assign(exports, bridge);\r\n    return exports;\r\n}\n\n//TODO - implement with Flatbuffers\r\nconst gltf_serializeScene = (scene) => {\r\n    return scene;\r\n};\r\nconst gltf_parseScene = (bytes) => {\r\n    return bytes;\r\n};\n\nconst gltf_updatePrimitiveShaderConfig = updateRuntimeShaderConfig;\n\nconst gltf_updateNodeTransforms = (opts) => (nodes) => {\r\n    const updatedNodes = updateNodeListTransforms(opts)(null)(nodes);\r\n    return mapNodes(gltf_setJointTransforms(updatedNodes))(updatedNodes);\r\n};\r\nconst gltf_findNodeById = (id) => (nodeOrNodes) => findNode((node) => node.originalNodeId === id)(nodeOrNodes);\r\nconst gltf_setJointTransforms = (fullTree) => (node) => {\r\n    if (node.kind === GltfNodeKind.MESH && node.skin) {\r\n        const jointList = getJointList(fullTree)(node);\r\n        const getSkeletonRootTransform = (id) => {\r\n            const joint = jointList.find(j => j.originalNodeId === id);\r\n            if (joint) {\r\n                return joint.transform;\r\n            }\r\n            return gltf_findNodeById(id)(fullTree).transform;\r\n        };\r\n        let pos = 0;\r\n        //see https://github.com/KhronosGroup/glTF-Tutorials/issues/17\r\n        const inverseRootMatrix = mat4.invert(mat4.create(), node.skin.skeletonRootId === undefined\r\n            ? node.transform.modelMatrix\r\n            : getSkeletonRootTransform(node.skin.skeletonRootId).modelMatrix);\r\n        const skinMatrices = jointList.reduce((acc, joint) => {\r\n            const jMat = mat4.create();\r\n            mat4.multiply(jMat, joint.transform.modelMatrix, joint.inverseBindMatrix);\r\n            if (inverseRootMatrix) {\r\n                mat4.multiply(jMat, inverseRootMatrix, jMat);\r\n            }\r\n            //Needs to flatten for uploading to webgl\r\n            for (let i = 0; i < jMat.length; i++) {\r\n                acc[pos++] = jMat[i];\r\n            }\r\n            return acc;\r\n        }, new Float32Array(node.skin.joints.length * 16));\r\n        return Object.assign({}, node, {\r\n            skin: Object.assign({}, node.skin, {\r\n                skinMatrices\r\n            })\r\n        });\r\n    }\r\n    return node;\r\n};\r\nconst getJointList = (fullTree) => (meshNode) => {\r\n    const jointIds = new Map();\r\n    const jointList = meshNode.skin.joints.map((joint, index) => {\r\n        jointIds.set(joint.originalNodeId, index);\r\n        return {\r\n            originalNodeId: joint.originalNodeId,\r\n            inverseBindMatrix: joint.inverseBindMatrix\r\n        };\r\n    });\r\n    forEachNodes((node) => {\r\n        if (jointIds.has(node.originalNodeId)) {\r\n            const index = jointIds.get(node.originalNodeId);\r\n            jointList[index].transform = node.transform;\r\n            jointIds.delete(node.originalNodeId);\r\n            if (!jointIds.size) {\r\n                return true;\r\n            }\r\n        }\r\n    })(fullTree);\r\n    return jointList;\r\n};\n\nconst createAttributes = ({ gl, buffers }) => {\r\n    let currentBuffer;\r\n    let currentTarget;\r\n    const globalLocations = new Set();\r\n    const _perShaderCache = new Map();\r\n    const _globalCache = new Map();\r\n    const getLocationInShader = (program) => (aName) => {\r\n        if (!_perShaderCache.has(program)) {\r\n            _perShaderCache.set(program, new Map());\r\n        }\r\n        const cache = _perShaderCache.get(program);\r\n        if (!cache.has(aName)) {\r\n            cache.set(aName, gl.getAttribLocation(program, aName));\r\n        }\r\n        return cache.get(aName);\r\n    };\r\n    const getLocationInRenderer = (aName) => {\r\n        if (!_globalCache.has(aName)) {\r\n            //For-of wasn't working across typescript and things...\r\n            //This is a little ugly but it's totally fine since it's only on init\r\n            //And by far most use-cases will be a cache hit\r\n            let idx = 0;\r\n            globalLocations.forEach(val => {\r\n                if (!_globalCache.has(val)) {\r\n                    _globalCache.set(val, idx);\r\n                }\r\n                idx++;\r\n            });\r\n        }\r\n        return _globalCache.get(aName);\r\n    };\r\n    const activateElements = (bufferId) => {\r\n        const info = buffers.get(bufferId);\r\n        if (currentBuffer !== bufferId || currentTarget !== info.target) {\r\n            gl.bindBuffer(info.target, info.buffer);\r\n            currentBuffer = bufferId;\r\n            currentTarget = info.target;\r\n        }\r\n    };\r\n    const activateData = (location) => (bufferId) => (opts) => {\r\n        activateElements(bufferId); //isn't really elements here, but nicer than having a superfluous alias\r\n        gl.vertexAttribPointer(location, opts.size, opts.type, opts.normalized === undefined ? false : opts.normalized, opts.stride === undefined ? 0 : opts.stride, opts.offset === undefined ? 0 : opts.offset);\r\n        gl.enableVertexAttribArray(location);\r\n    };\r\n    return { globalLocations, getLocationInShader, getLocationInRenderer, activateElements, activateData };\r\n};\n\nconst createWebGlBuffers = (gl) => {\r\n    const infoMap = new Map();\r\n    const bind = (sym) => {\r\n        const info = infoMap.get(sym);\r\n        gl.bindBuffer(info.target, info.buffer);\r\n    };\r\n    const assign = (sym) => (bData) => {\r\n        const info = infoMap.has(sym)\r\n            ? infoMap.get(sym)\r\n            : { buffer: gl.createBuffer() };\r\n        info.data = bData.data;\r\n        info.target = bData.target;\r\n        info.usagePattern = bData.usagePattern;\r\n        infoMap.set(sym, info);\r\n        bind(sym);\r\n        //typecasting to any since coercion into TypedArray for webgl2 is responsibility of caller\r\n        gl.bufferData(info.target, info.data, info.usagePattern);\r\n    };\r\n    const get = (sym) => infoMap.get(sym);\r\n    return { assign, get, bind };\r\n};\n\n//This hasn't been tested in a while and isn't managed by the renderer anymore\r\n//See the old usage here: https://github.com/dakom/state-scenegraph/blob/master/src/lib/renderer/Renderer-WebGl.ts\r\n//Though it can still be used generally, probably, and it might be helpful to keep the code here :)\r\nconst makeFramebufferPicker = (gl) => ({ width, height }) => {\r\n    //setup a texture to store colors\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    //setup a renderbuffer to store depth info\r\n    const renderBuffer = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderBuffer);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\r\n    //setup a framebuffer for offscreen rendering\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\r\n    //unbind everything\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    //exported utils\r\n    const bind = () => gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    const unbind = () => gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    const readPixel = ({ x, y }) => {\r\n        const readout = new Uint8Array(4);\r\n        bind();\r\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, readout);\r\n        unbind();\r\n        return readout;\r\n    };\r\n    const clear = (bits) => {\r\n        bind();\r\n        gl.clear(bits);\r\n        unbind();\r\n    };\r\n    const dispose = () => {\r\n        unbind();\r\n        gl.deleteFramebuffer(frameBuffer);\r\n        gl.deleteRenderbuffer(renderBuffer);\r\n        gl.deleteTexture(texture);\r\n    };\r\n    return {\r\n        bind: bind,\r\n        unbind: unbind,\r\n        readPixel: readPixel,\r\n        dispose: dispose,\r\n        clear: clear\r\n    };\r\n};\n\nconst createVertexArrays = ({ getExtension, gl, version, buffers }) => {\r\n    const _cache = new Map();\r\n    let currentSym;\r\n    const _create = () => {\r\n        if (version === 1) {\r\n            return getExtension(\"OES_vertex_array_object\").createVertexArrayOES();\r\n        }\r\n        else {\r\n            return gl.createVertexArray();\r\n        }\r\n    };\r\n    const _bind = (target) => {\r\n        if (version === 1) {\r\n            return getExtension(\"OES_vertex_array_object\").bindVertexArrayOES(target);\r\n        }\r\n        else {\r\n            return gl.bindVertexArray(target);\r\n        }\r\n    };\r\n    const _activate = (force) => (sym) => {\r\n        if (!force && currentSym === sym) {\r\n            return;\r\n        }\r\n        currentSym = sym;\r\n        if (!_cache.has(sym)) {\r\n            _cache.set(sym, _create());\r\n        }\r\n        _bind(_cache.get(sym));\r\n    };\r\n    const assign = (sym) => (v) => {\r\n        _activate(true)(sym);\r\n        if (v.elementBufferId) {\r\n            buffers.bind(v.elementBufferId);\r\n        }\r\n        v.data.forEach(({ location, usagePattern, bufferId, size, type, normalized, stride, offset }) => {\r\n            const bufferInfo = buffers.get(bufferId);\r\n            //there's no cache checks in the case of VAO - the set as a whole is toggled on/off\r\n            buffers.bind(bufferId);\r\n            gl.vertexAttribPointer(location, size, type, normalized === undefined ? false : normalized, stride === undefined ? 0 : stride, offset === undefined ? 0 : offset);\r\n            gl.enableVertexAttribArray(location);\r\n        });\r\n        release();\r\n    };\r\n    const release = () => {\r\n        if (currentSym !== null) {\r\n            currentSym = null;\r\n            _bind(null);\r\n        }\r\n    };\r\n    return { activate: _activate(false), release, assign };\r\n};\r\n/*\r\nexport const createVertexArraysForRenderer = (renderer:WebGlRenderer) =>\r\n    createVertexArrays({renderer, getAttributeLocation: renderer.getGlobalAttributeLocation});\r\n\nexport const createVertexArraysForShader = ({renderer, shader}:{renderer:WebGlRenderer, shader:WebGlShader}) =>\r\n    createVertexArrays({renderer, getAttributeLocation: shader.attributes.getLocation})\r\n    */\n\nconst getVersionString = (gl) => gl.getParameter(WebGlConstants.VERSION);\r\nconst _isNumber = (chr) => {\r\n    switch (chr) {\r\n        case '0':\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7':\r\n        case '8':\r\n        case '9':\r\n            return true;\r\n    }\r\n    return false;\r\n};\r\nconst getMajorVersion = (gl) => {\r\n    const str = getVersionString(gl);\r\n    let numberString = '';\r\n    for (let i = 0; i < str.length; i++) {\r\n        const chr = str.charAt(i);\r\n        if (_isNumber(chr)) {\r\n            numberString += chr;\r\n        }\r\n        else {\r\n            if (numberString.length) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return parseInt(numberString, 10);\r\n};\n\nconst createWebGlRenderer = (opts) => {\r\n    const { canvas, contextAttributes } = opts;\r\n    const gl = (() => {\r\n        if (opts.gl !== undefined) {\r\n            return opts.gl;\r\n        }\r\n        let _gl;\r\n        if (opts.version === undefined || opts.version === 2) {\r\n            try {\r\n                _gl = canvas.getContext(\"webgl2\", contextAttributes);\r\n            }\r\n            catch (e) {\r\n                _gl = undefined;\r\n            }\r\n            if (!_gl) {\r\n                console.warn(\"Failed to initialize webgl2, trying webgl1 as a fallback...\");\r\n            }\r\n            else {\r\n                return _gl;\r\n            }\r\n        }\r\n        try {\r\n            _gl = canvas.getContext(\"webgl\", contextAttributes) || canvas.getContext(\"experimental-webgl\", contextAttributes);\r\n        }\r\n        catch (e) {\r\n            _gl = undefined;\r\n        }\r\n        if (!_gl) {\r\n            console.warn(\"Unable to initialize webgl1\");\r\n        }\r\n        return _gl;\r\n    })();\r\n    const version = getMajorVersion(gl);\r\n    const lastScreenSize = {\r\n        width: NaN,\r\n        height: NaN\r\n    };\r\n    const resize = ({ width, height }) => {\r\n        if (lastScreenSize.width !== width || lastScreenSize.height !== height) {\r\n            canvas.setAttribute('width', width.toString());\r\n            canvas.setAttribute('height', height.toString());\r\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n            lastScreenSize.width = width;\r\n            lastScreenSize.height = height;\r\n        }\r\n    };\r\n    const flagMap = new Map();\r\n    const glToggle = (setting) => (flag) => {\r\n        if (!flagMap.has(setting) || flagMap.get(setting) !== flag) {\r\n            flagMap.set(setting, flag);\r\n            if (flag) {\r\n                gl.enable(setting);\r\n            }\r\n            else {\r\n                gl.disable(setting);\r\n            }\r\n        }\r\n    };\r\n    const buffers = createWebGlBuffers(gl);\r\n    const extensionMap = new Map();\r\n    const getExtension = (extName) => {\r\n        if (!extensionMap.has(extName)) {\r\n            const ext = gl.getExtension(extName);\r\n            if (!ext) {\r\n                console.warn(\"Could not create extension\", extName);\r\n            }\r\n            extensionMap.set(extName, ext);\r\n        }\r\n        return extensionMap.get(extName);\r\n    };\r\n    let depthFunc;\r\n    const glDepthFunc = (func) => {\r\n        if (func !== depthFunc) {\r\n            gl.depthFunc(func);\r\n            depthFunc = func;\r\n        }\r\n    };\r\n    let _sFactor, _dFactor;\r\n    const glBlendFunc = (sFactor) => (dFactor) => {\r\n        if (sFactor !== _sFactor || dFactor !== _dFactor) {\r\n            gl.blendFunc(sFactor, dFactor);\r\n            _sFactor = sFactor;\r\n            _dFactor = dFactor;\r\n        }\r\n    };\r\n    const textureSwitcher = createTextureSwitcher(gl);\r\n    const attributes = createAttributes({\r\n        gl,\r\n        buffers,\r\n    });\r\n    const vertexArrays = createVertexArrays({\r\n        getExtension,\r\n        gl,\r\n        version,\r\n        buffers\r\n    });\r\n    return Object.assign({ resize,\r\n        canvas,\r\n        gl,\r\n        buffers,\r\n        attributes,\r\n        vertexArrays }, textureSwitcher, { glToggle,\r\n        glDepthFunc,\r\n        glBlendFunc,\r\n        getExtension,\r\n        version, extras: {} });\r\n};\n\nexport { GltfAnimationTargetPath, GltfAnimationInterpolation, GltfMaterialAlphaMode, GltfNodeKind, GltfPrimitiveDrawKind, GltfIblExtensionName, GltfLightsExtensionName, GltfUnlitExtensionName, CameraKind, NodeKind, LightKind, WebGlConstants, createVec2, createVec4, createVec3, createMat4, createQuat, createIdentityMat4, getTrsFromMatrix, getMatrixFromTrs, getModelMatrix, getNormalMatrix, getViewMatrices, updateTransform, getCameraProjection, getCameraView, getCameraPosition, updateCameraWithTransform, filterNodeDeep, filterNodesDeep, forEachNode, forEachNodes, countNodes, findNode, mapNode, mapNodeWithParent, mapNodesWithParent, mapNodes, updateNodeTransforms, updateNodeListTransforms, createPointLight, gltf_setAnimationTime, gltf_createAnimator, gltf_load, gltf_serializeScene, gltf_parseScene, gltf_updatePrimitiveShaderConfig, gltf_updateNodeTransforms, gltf_findNodeById, gltf_setJointTransforms, createAttributes, createWebGlBuffers, makeFramebufferPicker, createWebGlRenderer, activateShader, createShader, createTextureSwitcher, createTextureFromTarget, createCubeTextureFromTarget, textureSetterSimple, createSimpleTextureFromTarget, createUniforms, getVersionString, getMajorVersion, createVertexArrays };\n//# sourceMappingURL=lib.esm.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function Dictionary(toStrFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStrFunction || util.defaultToString;\n    }\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (util.isUndefined(pair)) {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (util.isUndefined(previousElement)) {\n            this.nElements++;\n            ret = undefined;\n        }\n        else {\n            ret = previousElement.value;\n        }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (!util.isUndefined(previousElement)) {\n            delete this.table[k];\n            this.nElements--;\n            return previousElement.value;\n        }\n        return undefined;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    Dictionary.prototype.keys = function () {\n        var array = [];\n        for (var name_1 in this.table) {\n            if (util.has(this.table, name_1)) {\n                var pair = this.table[name_1];\n                array.push(pair.key);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    Dictionary.prototype.values = function () {\n        var array = [];\n        for (var name_2 in this.table) {\n            if (util.has(this.table, name_2)) {\n                var pair = this.table[name_2];\n                array.push(pair.value);\n            }\n        }\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this dictionary.\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    Dictionary.prototype.forEach = function (callback) {\n        for (var name_3 in this.table) {\n            if (util.has(this.table, name_3)) {\n                var pair = this.table[name_3];\n                var ret = callback(pair.key, pair.value);\n                if (ret === false) {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Returns true if this dictionary contains a mapping for the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary contains a mapping for the\n     * specified key.\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        return !util.isUndefined(this.getValue(key));\n    };\n    /**\n    * Removes all mappings from this dictionary.\n    * @this {collections.Dictionary}\n    */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    Dictionary.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    Dictionary.prototype.toString = function () {\n        var toret = '{';\n        this.forEach(function (k, v) {\n            toret += \"\\n\\t\" + k + \" : \" + v;\n        });\n        return toret + '\\n}';\n    };\n    return Dictionary;\n}()); // End of dictionary\nexports.default = Dictionary;\n//# sourceMappingURL=Dictionary.js.map","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. sanctuary-type-identifiers comprises:\n//.\n//.   - an npm and browser -compatible package for deriving the\n//.     _type identifier_ of a JavaScript value; and\n//.   - a specification which authors may follow to specify type\n//.     identifiers for their types.\n//.\n//. ### Specification\n//.\n//. For a type to be compatible with the algorithm:\n//.\n//.   - every member of the type MUST have a `constructor` property\n//.     pointing to an object known as the _type representative_;\n//.\n//.   - the type representative MUST have a `@@type` property\n//.     (the _type identifier_); and\n//.\n//.   - the type identifier MUST be a string primitive and SHOULD have\n//.     format `'<namespace>/<name>[@<version>]'`, where:\n//.\n//.       - `<namespace>` MUST consist of one or more characters, and\n//.         SHOULD equal the name of the npm package which defines the\n//.         type (including [scope][3] where appropriate);\n//.\n//.       - `<name>` MUST consist of one or more characters, and SHOULD\n//.         be the unique name of the type; and\n//.\n//.       - `<version>` MUST consist of one or more digits, and SHOULD\n//.         represent the version of the type.\n//.\n//. If the type identifier does not conform to the format specified above,\n//. it is assumed that the entire string represents the _name_ of the type;\n//. _namespace_ will be `null` and _version_ will be `0`.\n//.\n//. If the _version_ is not given, it is assumed to be `0`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  pattern :: RegExp\n  var pattern = new RegExp(\n    '^'\n  + '([\\\\s\\\\S]+)'   //  <namespace>\n  + '/'             //  SOLIDUS (U+002F)\n  + '([\\\\s\\\\S]+?)'  //  <name>\n  + '(?:'           //  optional non-capturing group {\n  +   '@'           //    COMMERCIAL AT (U+0040)\n  +   '([0-9]+)'    //    <version>\n  + ')?'            //  }\n  + '$'\n  );\n\n  //. ### Usage\n  //.\n  //. ```javascript\n  //. const type = require('sanctuary-type-identifiers');\n  //. ```\n  //.\n  //. ```javascript\n  //. > function Identity(x) {\n  //. .   if (!(this instanceof Identity)) return new Identity(x);\n  //. .   this.value = x;\n  //. . }\n  //. . Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. > type.parse(type(Identity(0)))\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  //.\n  //. ### API\n  //.\n  //# type :: Any -> String\n  //.\n  //. Takes any value and returns a string which identifies its type. If the\n  //. value conforms to the [specification][4], the custom type identifier is\n  //. returned.\n  //.\n  //. ```javascript\n  //. > type(null)\n  //. 'Null'\n  //.\n  //. > type(true)\n  //. 'Boolean'\n  //.\n  //. > type(Identity(0))\n  //. 'my-package/Identity@1'\n  //. ```\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  //# type.parse :: String -> { namespace :: Nullable String, name :: String, version :: Number }\n  //.\n  //. Takes any string and parses it according to the [specification][4],\n  //. returning an object with `namespace`, `name`, and `version` fields.\n  //.\n  //. ```javascript\n  //. > type.parse('my-package/List@2')\n  //. {namespace: 'my-package', name: 'List', version: 2}\n  //.\n  //. > type.parse('nonsense!')\n  //. {namespace: null, name: 'nonsense!', version: 0}\n  //.\n  //. > type.parse(Identity['@@type'])\n  //. {namespace: 'my-package', name: 'Identity', version: 1}\n  //. ```\n  type.parse = function parse(s) {\n    var groups = pattern.exec(s);\n    return {\n      namespace: groups == null || groups[1] == null ? null : groups[1],\n      name:      groups == null                      ? s    : groups[2],\n      version:   groups == null || groups[3] == null ? 0    : Number(groups[3])\n    };\n  };\n\n  return type;\n\n}));\n\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: https://docs.npmjs.com/misc/scope\n//. [4]: #specification\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\n/**\n * Returns the position of the first occurrence of the specified item\n * within the specified array.4\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the first occurrence of the specified element\n * within the specified array, or -1 if not found.\n */\nfunction indexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\n/**\n * Returns the position of the last occurrence of the specified element\n * within the specified array.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the last occurrence of the specified element\n * within the specified array or -1 if not found.\n */\nfunction lastIndexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = length - 1; i >= 0; i--) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.lastIndexOf = lastIndexOf;\n/**\n * Returns true if the specified array contains the specified element.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the specified array contains the specified element.\n */\nfunction contains(array, item, equalsFunction) {\n    return indexOf(array, item, equalsFunction) >= 0;\n}\nexports.contains = contains;\n/**\n * Removes the first ocurrence of the specified element from the specified array.\n * @param {*} array the array in which to search element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the array changed after this call.\n */\nfunction remove(array, item, equalsFunction) {\n    var index = indexOf(array, item, equalsFunction);\n    if (index < 0) {\n        return false;\n    }\n    array.splice(index, 1);\n    return true;\n}\nexports.remove = remove;\n/**\n * Returns the number of elements in the specified array equal\n * to the specified object.\n * @param {Array} array the array in which to determine the frequency of the element.\n * @param {Object} item the element whose frequency is to be determined.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the number of elements in the specified array\n * equal to the specified object.\n */\nfunction frequency(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    var freq = 0;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            freq++;\n        }\n    }\n    return freq;\n}\nexports.frequency = frequency;\n/**\n * Returns true if the two specified arrays are equal to one another.\n * Two arrays are considered equal if both arrays contain the same number\n * of elements, and all corresponding pairs of elements in the two\n * arrays are equal and are in the same order.\n * @param {Array} array1 one array to be tested for equality.\n * @param {Array} array2 the other array to be tested for equality.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between elemements in the arrays.\n * @return {boolean} true if the two arrays are equal\n */\nfunction equals(array1, array2, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    var length = array1.length;\n    for (var i = 0; i < length; i++) {\n        if (!equals(array1[i], array2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equals = equals;\n/**\n * Returns shallow a copy of the specified array.\n * @param {*} array the array to copy.\n * @return {Array} a copy of the specified array\n */\nfunction copy(array) {\n    return array.concat();\n}\nexports.copy = copy;\n/**\n * Swaps the elements at the specified positions in the specified array.\n * @param {Array} array The array in which to swap elements.\n * @param {number} i the index of one element to be swapped.\n * @param {number} j the index of the other element to be swapped.\n * @return {boolean} true if the array is defined and the indexes are valid.\n */\nfunction swap(array, i, j) {\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\n        return false;\n    }\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n    return true;\n}\nexports.swap = swap;\nfunction toString(array) {\n    return '[' + array.toString() + ']';\n}\nexports.toString = toString;\n/**\n * Executes the provided function once for each element present in this array\n * starting from index 0 to length - 1.\n * @param {Array} array The array in which to iterate.\n * @param {function(Object):*} callback function to execute, it is\n * invoked with one argument: the element value, to break the iteration you can\n * optionally return false.\n */\nfunction forEach(array, callback) {\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var ele = array_1[_i];\n        if (callback(ele) === false) {\n            return;\n        }\n    }\n}\nexports.forEach = forEach;\n//# sourceMappingURL=arrays.js.map","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '8.2.1';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$toString :: Null ~> () -> String\n  function Null$prototype$toString() {\n    return 'null';\n  }\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$toString :: Undefined ~> () -> String\n  function Undefined$prototype$toString() {\n    return 'undefined';\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$toString :: Boolean ~> () -> String\n  function Boolean$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Boolean(' + toString(this.valueOf()) + ')' :\n      this.toString();\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$toString :: Number ~> () -> String\n  function Number$prototype$toString() {\n    return typeof this === 'object' ?\n      'new Number(' + toString(this.valueOf()) + ')' :\n      1 / this === -Infinity ? '-0' : this.toString(10);\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$toString :: Date ~> () -> String\n  function Date$prototype$toString() {\n    var x = isNaN(this.valueOf()) ? NaN : this.toISOString();\n    return 'new Date(' + toString(x) + ')';\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$toString :: String ~> () -> String\n  function String$prototype$toString() {\n    return typeof this === 'object' ?\n      'new String(' + toString(this.valueOf()) + ')' :\n      JSON.stringify(this);\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$toString :: Array a ~> () -> String\n  function Array$prototype$toString() {\n    var reprs = this.map(toString);\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      if (!/^\\d+$/.test(k)) {\n        reprs.push(toString(k) + ': ' + toString(this[k]));\n      }\n    }\n    return '[' + reprs.join(', ') + ']';\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$toString :: Arguments ~> String\n  function Arguments$prototype$toString() {\n    var args = Array.prototype.map.call(this, toString).join(', ');\n    return '(function () { return arguments; }(' + args + '))';\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$toString :: Error ~> () -> String\n  function Error$prototype$toString() {\n    return 'new ' + this.name + '(' + toString(this.message) + ')';\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$toString :: StrMap a ~> () -> String\n  function Object$prototype$toString() {\n    var reprs = [];\n    var keys = Object.keys(this).sort();\n    for (var idx = 0; idx < keys.length; idx += 1) {\n      var k = keys[idx];\n      reprs.push(toString(k) + ': ' + toString(this[k]));\n    }\n    return '{' + reprs.join(', ') + '}';\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'toString':                 Null$prototype$toString,\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'toString':                 Undefined$prototype$toString,\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'toString':                 Boolean$prototype$toString,\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'toString':                 Number$prototype$toString,\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'toString':                 Date$prototype$toString,\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'toString':                 String$prototype$toString,\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'toString':                 Array$prototype$toString,\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'toString':                 Arguments$prototype$toString,\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'toString':                 Error$prototype$toString,\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'toString':                 Object$prototype$toString,\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# toString :: a -> String\n  //.\n  //. Returns a useful string representation of its argument.\n  //.\n  //. Dispatches to the argument's `toString` method if appropriate.\n  //.\n  //. Where practical, `equals(eval(toString(x)), x) = true`.\n  //.\n  //. `toString` implementations are provided for the following built-in types:\n  //. Null, Undefined, Boolean, Number, Date, String, Array, Arguments, Error,\n  //. and Object.\n  //.\n  //. ```javascript\n  //. > toString(-0)\n  //. '-0'\n  //.\n  //. > toString(['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > toString({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > toString(Cons(1, Cons(2, Cons(3, Nil))))\n  //. 'Cons(1, Cons(2, Cons(3, Nil)))'\n  //. ```\n  var toString = (function() {\n    //  $seen :: Array Any\n    var $seen = [];\n\n    function call(method, x) {\n      $seen.push(x);\n      try { return method.call(x); } finally { $seen.pop(); }\n    }\n\n    return function toString(x) {\n      if ($seen.indexOf(x) >= 0) return '<Circular>';\n\n      var xType = type(x);\n      if (xType === 'Object') {\n        var result;\n        try { result = call(x.toString, x); } catch (err) {}\n        if (result != null && result !== '[object Object]') return result;\n      }\n\n      return call(implPath([xType, 'prototype', 'toString']) || x.toString, x);\n    };\n  }());\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    toString: toString,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*    #######\n   ####     ####\n ####   ###   ####\n#####   ###########   sanctuary\n########   ########   noun\n###########   #####   1 [ mass noun ] refuge from unsafe JavaScript\n ####   ###   ####\n   ####     ####\n      #######    */\n\n//. # Sanctuary\n//.\n//. [![npm](https://img.shields.io/npm/v/sanctuary.svg)](https://www.npmjs.com/package/sanctuary)\n//. [![CircleCI](https://img.shields.io/circleci/project/github/sanctuary-js/sanctuary/master.svg)](https://circleci.com/gh/sanctuary-js/sanctuary/tree/master)\n//. [![Gitter](https://img.shields.io/gitter/room/badges/shields.svg)](https://gitter.im/sanctuary-js/sanctuary)\n//.\n//. Sanctuary is a JavaScript functional programming library inspired by\n//. [Haskell][] and [PureScript][]. It's stricter than [Ramda][], and\n//. provides a similar suite of functions.\n//.\n//. Sanctuary promotes programs composed of simple, pure functions. Such\n//. programs are easier to comprehend, test, and maintain &ndash; they are\n//. also a pleasure to write.\n//.\n//. Sanctuary provides two data types, [Maybe][] and [Either][], both of\n//. which are compatible with [Fantasy Land][]. Thanks to these data types\n//. even Sanctuary functions which may fail, such as [`head`](#head), are\n//. composable.\n//.\n//. Sanctuary makes it possible to write safe code without null checks.\n//. In JavaScript it's trivial to introduce a possible run-time type error:\n//.\n//.     words[0].toUpperCase()\n//.\n//. If `words` is `[]` we'll get a familiar error at run-time:\n//.\n//.     TypeError: Cannot read property 'toUpperCase' of undefined\n//.\n//. Sanctuary gives us a fighting chance of avoiding such errors. We might\n//. write:\n//.\n//.     S.map (S.toUpper) (S.head (words))\n//.\n//. Sanctuary is designed to work in Node.js and in ES5-compatible browsers.\n//.\n//. ## Ramda\n//.\n//. [Ramda][] provides several functions which return problematic values\n//. such as `undefined`, `Infinity`, or `NaN` when applied to unsuitable\n//. inputs. These are known as [partial functions][]. Partial functions\n//. necessitate the use of guards or null checks. In order to safely use\n//. `R.head`, for example, one must ensure that the array is non-empty:\n//.\n//.     if (R.isEmpty (xs)) {\n//.       // ...\n//.     } else {\n//.       return f (R.head (xs));\n//.     }\n//.\n//. Using the Maybe type renders such guards (and null checks) unnecessary.\n//. Changing functions such as `R.head` to return Maybe values was proposed\n//. in [ramda/ramda#683][], but was considered too much of a stretch for\n//. JavaScript programmers. Sanctuary was released the following month,\n//. in January 2015, as a companion library to Ramda.\n//.\n//. In addition to broadening in scope in the years since its release,\n//. Sanctuary's philosophy has diverged from Ramda's in several respects.\n//.\n//. ### Totality\n//.\n//. Every Sanctuary function is defined for every value which is a member of\n//. the function's input type. Such functions are known as [total functions][].\n//. Ramda, on the other hand, contains a number of [partial functions][].\n//.\n//. ### Information preservation\n//.\n//. Certain Sanctuary functions preserve more information than their Ramda\n//. counterparts. Examples:\n//.\n//.     |> R.tail ([])                      |> S.tail ([])\n//.     []                                  Nothing\n//.\n//.     |> R.tail (['foo'])                 |> S.tail (['foo'])\n//.     []                                  Just ([])\n//.\n//.     |> R.replace (/^x/) ('') ('abc')    |> S.stripPrefix ('x') ('abc')\n//.     'abc'                               Nothing\n//.\n//.     |> R.replace (/^x/) ('') ('xabc')   |> S.stripPrefix ('x') ('xabc')\n//.     'abc'                               Just ('abc')\n//.\n//. ### Invariants\n//.\n//. Sanctuary performs rigorous [type checking][] of inputs and outputs, and\n//. throws a descriptive error if a type error is encountered. This allows bugs\n//. to be caught and fixed early in the development cycle.\n//.\n//. Ramda operates on the [garbage in, garbage out][GIGO] principal. Functions\n//. are documented to take arguments of particular types, but these invariants\n//. are not enforced. The problem with this approach in a language as\n//. permissive as JavaScript is that there's no guarantee that garbage input\n//. will produce garbage output ([ramda/ramda#1413][]). Ramda performs ad hoc\n//. type checking in some such cases ([ramda/ramda#1419][]).\n//.\n//. Sanctuary can be configured to operate in garbage in, garbage out mode.\n//. Ramda cannot be configured to enforce its invariants.\n//.\n//. ### Currying\n//.\n//. Sanctuary functions are curried. There is, for example, exactly one way to\n//. apply `S.reduce` to `S.add`, `0`, and `xs`:\n//.\n//.   - `S.reduce (S.add) (0) (xs)`\n//.\n//. Ramda functions are also curried, but in a complex manner. There are four\n//. ways to apply `R.reduce` to `R.add`, `0`, and `xs`:\n//.\n//.   - `R.reduce (R.add) (0) (xs)`\n//.   - `R.reduce (R.add) (0, xs)`\n//.   - `R.reduce (R.add, 0) (xs)`\n//.   - `R.reduce (R.add, 0, xs)`\n//.\n//. Ramda supports all these forms because curried functions enable partial\n//. application, one of the library's tenets, but `f(x)(y)(z)` is considered\n//. too unfamiliar and too unattractive to appeal to JavaScript programmers.\n//.\n//. Sanctuary's developers prefer a simple, unfamiliar construct to a complex,\n//. familiar one. Familiarity can be acquired; complexity is intrinsic.\n//.\n//. The lack of breathing room in `f(x)(y)(z)` impairs readability. The simple\n//. solution to this problem, proposed in [#438][], is to include a space when\n//. applying a function: `f (x) (y) (z)`.\n//.\n//. Ramda also provides a special placeholder value, [`R.__`][], which removes\n//. the restriction that a function must be applied to its arguments in order.\n//. The following expressions are equivalent:\n//.\n//.   - `R.reduce (R.__, 0, xs) (R.add)`\n//.   - `R.reduce (R.add, R.__, xs) (0)`\n//.   - `R.reduce (R.__, 0) (R.add) (xs)`\n//.   - `R.reduce (R.__, 0) (R.add, xs)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add) (0)`\n//.   - `R.reduce (R.__, R.__, xs) (R.add, 0)`\n//.\n//. ### Variadic functions\n//.\n//. Ramda provides several functions which take any number of arguments. These\n//. are known as [variadic functions][]. Additionally, Ramda provides several\n//. functions which take variadic functions as arguments. Although natural in\n//. a dynamically typed language, variadic functions are at odds with the type\n//. notation Ramda and Sanctuary both use, leading to some indecipherable type\n//. signatures such as this one:\n//.\n//.     R.lift :: (*... -> *...) -> ([*]... -> [*])\n//.\n//. Sanctuary has no variadic functions, nor any functions which take variadic\n//. functions as arguments. Sanctuary provides two \"lift\" functions, each with\n//. a helpful type signature:\n//.\n//.     S.lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n//.     S.lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n//.\n//. ### Implicit context\n//.\n//. Ramda provides [`R.bind`][] and [`R.invoker`][] for working with methods.\n//. Additionally, many Ramda functions use `Function#call` or `Function#apply`\n//. to preserve context. Sanctuary makes no allowances for `this`.\n//.\n//. ### Transducers\n//.\n//. Several Ramda functions act as transducers. Sanctuary provides no support\n//. for transducers.\n//.\n//. ### Modularity\n//.\n//. Whereas Ramda has no dependencies, Sanctuary has a modular design:\n//. [sanctuary-def][] provides type checking, [sanctuary-type-classes][]\n//. provides Fantasy Land functions and type classes, [sanctuary-show][]\n//. provides string representations, and algebraic data types are provided\n//. by [sanctuary-either][], [sanctuary-maybe][], and [sanctuary-pair][].\n//. Not only does this approach reduce the complexity of Sanctuary itself,\n//. but it allows these components to be reused in other contexts.\n//.\n//. ## Types\n//.\n//. Sanctuary uses Haskell-like type signatures to describe the types of\n//. values, including functions. `'foo'`, for example, is a member of `String`;\n//. `[1, 2, 3]` is a member of `Array Number`. The double colon (`::`) is used\n//. to mean \"is a member of\", so one could write:\n//.\n//.     'foo' :: String\n//.     [1, 2, 3] :: Array Number\n//.\n//. An identifier may appear to the left of the double colon:\n//.\n//.     Math.PI :: Number\n//.\n//. The arrow (`->`) is used to express a function's type:\n//.\n//.     Math.abs :: Number -> Number\n//.\n//. That states that `Math.abs` is a unary function which takes an argument\n//. of type `Number` and returns a value of type `Number`.\n//.\n//. Some functions are parametrically polymorphic: their types are not fixed.\n//. Type variables are used in the representations of such functions:\n//.\n//.     S.I :: a -> a\n//.\n//. `a` is a type variable. Type variables are not capitalized, so they\n//. are differentiable from type identifiers (which are always capitalized).\n//. By convention type variables have single-character names. The signature\n//. above states that `S.I` takes a value of any type and returns a value of\n//. the same type. Some signatures feature multiple type variables:\n//.\n//.     S.K :: a -> b -> a\n//.\n//. It must be possible to replace all occurrences of `a` with a concrete type.\n//. The same applies for each other type variable. For the function above, the\n//. types with which `a` and `b` are replaced may be different, but needn't be.\n//.\n//. Since all Sanctuary functions are curried (they accept their arguments\n//. one at a time), a binary function is represented as a unary function which\n//. returns a unary function: `* -> * -> *`. This aligns neatly with Haskell,\n//. which uses curried functions exclusively. In JavaScript, though, we may\n//. wish to represent the types of functions with arities less than or greater\n//. than one. The general form is `(<input-types>) -> <output-type>`, where\n//. `<input-types>` comprises zero or more comma–space (<code>, </code>)\n//. -separated type representations:\n//.\n//.   - `() -> String`\n//.   - `(a, b) -> a`\n//.   - `(a, b, c) -> d`\n//.\n//. `Number -> Number` can thus be seen as shorthand for `(Number) -> Number`.\n//.\n//. The question mark (`?`) is used to represent types which include `null`\n//. and `undefined` as members. `String?`, for example, represents the type\n//. comprising `null`, `undefined`, and all strings.\n//.\n//. Sanctuary embraces types. JavaScript doesn't support algebraic data types,\n//. but these can be simulated by providing a group of data constructors which\n//. return values with the same set of methods. A value of the Either type, for\n//. example, is created via the Left constructor or the Right constructor.\n//.\n//. It's necessary to extend Haskell's notation to describe implicit arguments\n//. to the *methods* provided by Sanctuary's types. In `x.map(y)`, for example,\n//. the `map` method takes an implicit argument `x` in addition to the explicit\n//. argument `y`. The type of the value upon which a method is invoked appears\n//. at the beginning of the signature, separated from the arguments and return\n//. value by a squiggly arrow (`~>`). The type of the `fantasy-land/map` method\n//. of the Maybe type is written `Maybe a ~> (a -> b) -> Maybe b`. One could\n//. read this as:\n//.\n//. _When the `fantasy-land/map` method is invoked on a value of type `Maybe a`\n//. (for any type `a`) with an argument of type `a -> b` (for any type `b`),\n//. it returns a value of type `Maybe b`._\n//.\n//. The squiggly arrow is also used when representing non-function properties.\n//. `Maybe a ~> Boolean`, for example, represents a Boolean property of a value\n//. of type `Maybe a`.\n//.\n//. Sanctuary supports type classes: constraints on type variables. Whereas\n//. `a -> a` implicitly supports every type, `Functor f => (a -> b) -> f a ->\n//. f b` requires that `f` be a type which satisfies the requirements of the\n//. Functor type class. Type-class constraints appear at the beginning of a\n//. type signature, separated from the rest of the signature by a fat arrow\n//. (`=>`).\n//.\n//. ## Type checking\n//.\n//. Sanctuary functions are defined via [sanctuary-def][] to provide run-time\n//. type checking. This is tremendously useful during development: type errors\n//. are reported immediately, avoiding circuitous stack traces (at best) and\n//. silent failures due to type coercion (at worst). For example:\n//.\n//. ```javascript\n//. S.add (2) (true);\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n//. //                          ^^^^^^^^^^^^\n//. //                               1\n//. //\n//. //   1)  true :: Boolean\n//. //\n//. //   The value at position 1 is not a member of ‘FiniteNumber’.\n//. //\n//. //   See v:sanctuary-js/sanctuary-def#FiniteNumber for information about the sanctuary-def/FiniteNumber type.\n//. ```\n//.\n//. Compare this to the behaviour of Ramda's unchecked equivalent:\n//.\n//. ```javascript\n//. R.add (2) (true);\n//. // => 3\n//. ```\n//.\n//. There is a performance cost to run-time type checking. Type checking is\n//. disabled by default if `process.env.NODE_ENV` is `'production'`. If this\n//. rule is unsuitable for a given program, one may use [`create`](#create)\n//. to create a Sanctuary module based on a different rule. For example:\n//.\n//. ```javascript\n//. const S = sanctuary.create ({\n//.   checkTypes: localStorage.getItem ('SANCTUARY_CHECK_TYPES') === 'true',\n//.   env: sanctuary.env,\n//. });\n//. ```\n//.\n//. Occasionally one may wish to perform an operation which is not type safe,\n//. such as mapping over an object with heterogeneous values. This is possible\n//. via selective use of [`unchecked`](#unchecked) functions.\n//.\n//. ## Installation\n//.\n//. `npm install sanctuary` will install Sanctuary for use in Node.js.\n//.\n//. Running Sanctuary in the browser is more involved. One must include a\n//. `<script>` for each dependency in addition to one for Sanctuary itself:\n//.\n//. ```html\n//. <script src=\"vendor/sanctuary-show.js\"></script>\n//. <script src=\"vendor/sanctuary-type-identifiers.js\"></script>\n//. <script src=\"vendor/sanctuary-type-classes.js\"></script>\n//. <script src=\"vendor/sanctuary-either.js\"></script>\n//. <script src=\"vendor/sanctuary-maybe.js\"></script>\n//. <script src=\"vendor/sanctuary-pair.js\"></script>\n//. <script src=\"vendor/sanctuary-def.js\"></script>\n//. <script src=\"vendor/sanctuary.js\"></script>\n//. ```\n//.\n//. To ensure compatibility one should use the dependency versions specified\n//. in __package.json__.\n//.\n//. For convenience one could define aliases for various modules:\n//.\n//. ```javascript\n//. const S = window.sanctuary;\n//. const $ = window.sanctuaryDef;\n//. // ...\n//. ```\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-def'),\n                        require ('sanctuary-either'),\n                        require ('sanctuary-maybe'),\n                        require ('sanctuary-pair'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-def',\n             'sanctuary-either',\n             'sanctuary-maybe',\n             'sanctuary-pair',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            f);\n  } else {\n    self.sanctuary = f (self.sanctuaryDef,\n                        self.sanctuaryEither,\n                        self.sanctuaryMaybe,\n                        self.sanctuaryPair,\n                        self.sanctuaryShow,\n                        self.sanctuaryTypeClasses,\n                        self.sanctuaryTypeIdentifiers);\n  }\n\n} (function($, Either, Maybe, Pair, show, Z, type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* eslint-disable no-unused-vars */\n    var Descending = __doctest.require ('sanctuary-descending');\n    var Nil = (__doctest.require ('./test/internal/List')).Nil;\n    var Cons = (__doctest.require ('./test/internal/List')).Cons;\n    var Sum = __doctest.require ('./test/internal/Sum');\n    var S = (function(S) {\n      //  DescendingType :: Type -> Type\n      var DescendingType = $.UnaryType\n        ('sanctuary/Descending')\n        ('')\n        (typeEq (Descending['@@type']))\n        (B (of (Array)) (Z.extract));\n\n      var S_ = S.create ({\n        checkTypes: true,\n        env: S.env.concat ([\n          DescendingType ($.Unknown),\n          (__doctest.require ('./test/internal/List')).Type ($.Unknown),\n          Sum.Type\n        ])\n      });\n      S_.env = S.env;  // see S.env doctest\n      return S_;\n    } (require ('.')));\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  Nothing :: Maybe a\n  var Nothing = Maybe.Nothing;\n\n  //  Just :: a -> Maybe a\n  var Just = Maybe.Just;\n\n  //  B :: (b -> c) -> (a -> b) -> a -> c\n  function B(f) {\n    return function(g) {\n      return function(x) {\n        return f (g (x));\n      };\n    };\n  }\n\n  //  C :: (a -> b -> c) -> b -> a -> c\n  function C(f) {\n    return function(y) {\n      return function(x) {\n        return f (x) (y);\n      };\n    };\n  }\n\n  //  Fn :: Type -> Type -> Type\n  function Fn(x) {\n    return function(y) {\n      return $.Function ([x, y]);\n    };\n  }\n\n  //  get_ :: String -> a -> Maybe b\n  function get_(key) {\n    return B (function(obj) { return key in obj ? Just (obj[key]) : Nothing; })\n             (toObject);\n  }\n\n  //  invoke0 :: String -> a -> b\n  function invoke0(name) {\n    return function(target) {\n      return target[name] ();\n    };\n  }\n\n  //  invoke1 :: String -> a -> b -> c\n  function invoke1(name) {\n    return function(x) {\n      return function(target) {\n        return target[name] (x);\n      };\n    };\n  }\n\n  //  toObject :: a -> Object\n  function toObject(x) {\n    return x == null ? Object.create (null) : Object (x);\n  }\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(typeIdent) {\n    return function(x) {\n      return type (x) === typeIdent;\n    };\n  }\n\n  //  value :: { value :: a } -> a\n  function value(r) {\n    return r.value;\n  }\n\n  //  :: Type\n  var a = $.TypeVariable ('a');\n  var b = $.TypeVariable ('b');\n  var c = $.TypeVariable ('c');\n  var d = $.TypeVariable ('d');\n  var e = $.TypeVariable ('e');\n  var g = $.TypeVariable ('g');\n  var l = $.TypeVariable ('l');\n  var r = $.TypeVariable ('r');\n\n  //  :: Type -> Type\n  var f = $.UnaryTypeVariable ('f');\n  var m = $.UnaryTypeVariable ('m');\n  var t = $.UnaryTypeVariable ('t');\n  var w = $.UnaryTypeVariable ('w');\n\n  //  :: Type -> Type -> Type\n  var p = $.BinaryTypeVariable ('p');\n  var s = $.BinaryTypeVariable ('s');\n\n  //  $Either :: Type -> Type -> Type\n  var $Either = $.BinaryType\n    ('sanctuary/Either')\n    ('https://github.com/sanctuary-js/sanctuary-either')\n    (typeEq ('sanctuary-either/Either@1'))\n    (either (of (Array)) (K ([])))\n    (either (K ([])) (of (Array)));\n\n  //  $Maybe :: Type -> Type\n  var $Maybe = $.UnaryType\n    ('sanctuary/Maybe')\n    ('https://github.com/sanctuary-js/sanctuary-maybe')\n    (typeEq ('sanctuary-maybe/Maybe@1'))\n    (maybe ([]) (of (Array)));\n\n  //  $Pair :: Type -> Type -> Type\n  var $Pair = $.BinaryType\n    ('sanctuary/Pair')\n    ('https://github.com/sanctuary-js/sanctuary-pair')\n    (typeEq ('sanctuary-pair/Pair@1'))\n    (function(pair) { return [pair.fst]; })\n    (function(pair) { return [pair.snd]; });\n\n  //  TypeRep :: Type -> Type\n  var TypeRep = $.UnaryType\n    ('sanctuary/TypeRep')\n    ('https://github.com/fantasyland/fantasy-land#type-representatives')\n    (function(x) {\n       return $.AnyFunction._test (x) ||\n              x != null && $.String._test (x['@@type']);\n     })\n    (K ([]));\n\n  //  Options :: Type\n  var Options = $.RecordType ({checkTypes: $.Boolean, env: $.Array ($.Any)});\n\n  var _ = {};\n\n  //. ### Configure\n\n  //# create :: { checkTypes :: Boolean, env :: Array Type } -> Module\n  //.\n  //. Takes an options record and returns a Sanctuary module. `checkTypes`\n  //. specifies whether to enable type checking. The module's polymorphic\n  //. functions (such as [`I`](#I)) require each value associated with a\n  //. type variable to be a member of at least one type in the environment.\n  //.\n  //. A well-typed application of a Sanctuary function will produce the same\n  //. result regardless of whether type checking is enabled. If type checking\n  //. is enabled, a badly typed application will produce an exception with a\n  //. descriptive error message.\n  //.\n  //. The following snippet demonstrates defining a custom type and using\n  //. `create` to produce a Sanctuary module which is aware of that type:\n  //.\n  //. ```javascript\n  //. const {create, env} = require ('sanctuary');\n  //. const $ = require ('sanctuary-def');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    Identity :: a -> Identity a\n  //. const Identity = x => {\n  //.   const identity = Object.create (Identity$prototype);\n  //.   identity.value = x;\n  //.   return identity;\n  //. };\n  //.\n  //. Identity['@@type'] = 'my-package/Identity@1';\n  //.\n  //. const Identity$prototype = {\n  //.   'constructor': Identity,\n  //.   '@@show': function() { return `Identity (${S.show (this.value)})`; },\n  //.   'fantasy-land/map': function(f) { return Identity (f (this.value)); },\n  //. };\n  //.\n  //. //    IdentityType :: Type -> Type\n  //. const IdentityType = $.UnaryType\n  //.   (Identity['@@type'])\n  //.   ('http://example.com/my-package#Identity')\n  //.   (x => type (x) === Identity['@@type'])\n  //.   (identity => [identity.value]);\n  //.\n  //. const S = create ({\n  //.   checkTypes: process.env.NODE_ENV !== 'production',\n  //.   env: env.concat ([IdentityType ($.Unknown)]),\n  //. });\n  //.\n  //. S.map (S.sub (1)) (Identity (43));\n  //. // => Identity (42)\n  //. ```\n  //.\n  //. See also [`env`](#env).\n  function create(opts) {\n    var def = $.create (opts);\n    var S = {\n      env: opts.env,\n      is: def ('is') ({}) ([$.Type, $.Any, $.Boolean]) ($.test (opts.env)),\n      MaybeType: $Maybe,\n      Maybe: Maybe,\n      Nothing: Nothing,\n      EitherType: $Either,\n      Either: Either,\n      PairType: $Pair\n    };\n    (Object.keys (_)).forEach (function(name) {\n      S[name] = def (name) (_[name].consts) (_[name].types) (_[name].impl);\n    });\n    S.unchecked = opts.checkTypes ? create ({checkTypes: false, env: opts.env})\n                                  : S;\n    return S;\n  }\n  _.create = {\n    consts: {},\n    types: [Options, $.Object],\n    impl: create\n  };\n\n  //# env :: Array Type\n  //.\n  //. The Sanctuary module's environment (`(S.create ({checkTypes, env})).env`\n  //. is a reference to `env`). Useful in conjunction with [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.env\n  //. [ $.AnyFunction,\n  //. . $.Arguments,\n  //. . $.Array ($.Unknown),\n  //. . $.Boolean,\n  //. . $.Date,\n  //. . $.Error,\n  //. . $.HtmlElement,\n  //. . $.Null,\n  //. . $.Number,\n  //. . $.Object,\n  //. . $.RegExp,\n  //. . $.StrMap ($.Unknown),\n  //. . $.String,\n  //. . $.Symbol,\n  //. . $.Undefined,\n  //. . $.FiniteNumber,\n  //. . $.NonZeroFiniteNumber,\n  //. . S.EitherType ($.Unknown) ($.Unknown),\n  //. . $.Function ([$.Unknown, $.Unknown]),\n  //. . $.GlobalRegExp,\n  //. . $.NonGlobalRegExp,\n  //. . $.Integer,\n  //. . $.NonNegativeInteger,\n  //. . S.MaybeType ($.Unknown),\n  //. . $.Array2 ($.Unknown) ($.Unknown),\n  //. . S.PairType ($.Unknown) ($.Unknown),\n  //. . $.RegexFlags,\n  //. . $.Type,\n  //. . $.TypeClass,\n  //. . $.ValidDate,\n  //. . $.ValidNumber ]\n  //. ```\n\n  //# unchecked :: Module\n  //.\n  //. A complete Sanctuary module which performs no type checking. This is\n  //. useful as it permits operations which Sanctuary's type checking would\n  //. disallow, such as mapping over an object with heterogeneous values.\n  //.\n  //. See also [`create`](#create).\n  //.\n  //. ```javascript\n  //. > S.unchecked.map (S.show) ({x: 'foo', y: true, z: 42})\n  //. {x: '\"foo\"', y: 'true', z: '42'}\n  //. ```\n  //.\n  //. Opting out of type checking may cause type errors to go unnoticed.\n  //.\n  //. ```javascript\n  //. > S.unchecked.add (2) ('2')\n  //. '22'\n  //. ```\n\n  //. ### Classify\n\n  //# type :: Any -> { namespace :: Maybe String, name :: String, version :: NonNegativeInteger }\n  //.\n  //. Returns the result of parsing the [type identifier][] of the given value.\n  //.\n  //. ```javascript\n  //. > S.type (S.Just (42))\n  //. {namespace: Just ('sanctuary-maybe'), name: 'Maybe', version: 1}\n  //.\n  //. > S.type ([1, 2, 3])\n  //. {namespace: Nothing, name: 'Array', version: 0}\n  //. ```\n  function type_(x) {\n    var r = type.parse (type (x));\n    r.namespace = toMaybe (r.namespace);\n    return r;\n  }\n  _.type = {\n    consts: {},\n    types: [$.Any,\n            $.RecordType ({namespace: $Maybe ($.String),\n                           name: $.String,\n                           version: $.NonNegativeInteger})],\n    impl: type_\n  };\n\n  //# is :: Type -> Any -> Boolean\n  //.\n  //. Returns `true` [iff][] the given value is a member of the specified type.\n  //. See [`$.test`][] for details.\n  //.\n  //. ```javascript\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3])\n  //. true\n  //.\n  //. > S.is ($.Array ($.Integer)) ([1, 2, 3.14])\n  //. false\n  //. ```\n\n  //. ### Showable\n\n  //# show :: Any -> String\n  //.\n  //. Alias of [`show`][].\n  //.\n  //. ```javascript\n  //. > S.show (-0)\n  //. '-0'\n  //.\n  //. > S.show (['foo', 'bar', 'baz'])\n  //. '[\"foo\", \"bar\", \"baz\"]'\n  //.\n  //. > S.show ({x: 1, y: 2, z: 3})\n  //. '{\"x\": 1, \"y\": 2, \"z\": 3}'\n  //.\n  //. > S.show (S.Left (S.Right (S.Just (S.Nothing))))\n  //. 'Left (Right (Just (Nothing)))'\n  //. ```\n  _.show = {\n    consts: {},\n    types: [$.Any, $.String],\n    impl: show\n  };\n\n  //. ### Fantasy Land\n  //.\n  //. Sanctuary is compatible with the [Fantasy Land][] specification.\n\n  //# equals :: Setoid a => a -> a -> Boolean\n  //.\n  //. Curried version of [`Z.equals`][] which requires two arguments of the\n  //. same type.\n  //.\n  //. To compare values of different types first use [`create`](#create) to\n  //. create a Sanctuary module with type checking disabled, then use that\n  //. module's `equals` function.\n  //.\n  //. ```javascript\n  //. > S.equals (0) (-0)\n  //. true\n  //.\n  //. > S.equals (NaN) (NaN)\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (S.Just ([1, 2, 3])) (S.Just ([1, 2, 4]))\n  //. false\n  //. ```\n  _.equals = {\n    consts: {a: [Z.Setoid]},\n    types: [a, a, $.Boolean],\n    impl: curry2 (Z.equals)\n  };\n\n  //# lt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than the first\n  //. according to [`Z.lt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lt (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2]\n  //. ```\n  function lt(y) {\n    return function(x) {\n      return Z.lt (x, y);\n    };\n  }\n  _.lt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lt\n  };\n\n  //# lte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is less than or equal to\n  //. the first according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (3)) ([1, 2, 3, 4, 5])\n  //. [1, 2, 3]\n  //. ```\n  function lte(y) {\n    return function(x) {\n      return Z.lte (x, y);\n    };\n  }\n  _.lte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: lte\n  };\n\n  //# gt :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than the first\n  //. according to [`Z.gt`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gt (3)) ([1, 2, 3, 4, 5])\n  //. [4, 5]\n  //. ```\n  function gt(y) {\n    return function(x) {\n      return Z.gt (x, y);\n    };\n  }\n  _.gt = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gt\n  };\n\n  //# gte :: Ord a => a -> a -> Boolean\n  //.\n  //. Returns `true` [iff][] the *second* argument is greater than or equal\n  //. to the first according to [`Z.gte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.gte (3)) ([1, 2, 3, 4, 5])\n  //. [3, 4, 5]\n  //. ```\n  function gte(y) {\n    return function(x) {\n      return Z.gte (x, y);\n    };\n  }\n  _.gte = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, $.Boolean],\n    impl: gte\n  };\n\n  //# min :: Ord a => a -> a -> a\n  //.\n  //. Returns the smaller of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > S.min (10) (2)\n  //. 2\n  //.\n  //. > S.min (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('1999-12-31')\n  //.\n  //. > S.min ('10') ('2')\n  //. '10'\n  //. ```\n  _.min = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.min)\n  };\n\n  //# max :: Ord a => a -> a -> a\n  //.\n  //. Returns the larger of its two arguments (according to [`Z.lte`][]).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > S.max (10) (2)\n  //. 10\n  //.\n  //. > S.max (new Date ('1999-12-31')) (new Date ('2000-01-01'))\n  //. new Date ('2000-01-01')\n  //.\n  //. > S.max ('10') ('2')\n  //. '2'\n  //. ```\n  _.max = {\n    consts: {a: [Z.Ord]},\n    types: [a, a, a],\n    impl: curry2 (Z.max)\n  };\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.id`][].\n  //.\n  //. ```javascript\n  //. > S.id (Function) (42)\n  //. 42\n  //. ```\n  _.id = {\n    consts: {c: [Z.Category]},\n    types: [TypeRep (c), c],\n    impl: Z.id\n  };\n\n  //# concat :: Semigroup a => a -> a -> a\n  //.\n  //. Curried version of [`Z.concat`][].\n  //.\n  //. ```javascript\n  //. > S.concat ('abc') ('def')\n  //. 'abcdef'\n  //.\n  //. > S.concat ([1, 2, 3]) ([4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > S.concat ({x: 1, y: 2}) ({y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > S.concat (S.Just ([1, 2, 3])) (S.Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Sum (18)) (Sum (24))\n  //. Sum (42)\n  //. ```\n  _.concat = {\n    consts: {a: [Z.Semigroup]},\n    types: [a, a, a],\n    impl: curry2 (Z.concat)\n  };\n\n  //# empty :: Monoid a => TypeRep a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.empty`][].\n  //.\n  //. ```javascript\n  //. > S.empty (String)\n  //. ''\n  //.\n  //. > S.empty (Array)\n  //. []\n  //.\n  //. > S.empty (Object)\n  //. {}\n  //.\n  //. > S.empty (Sum)\n  //. Sum (0)\n  //. ```\n  _.empty = {\n    consts: {a: [Z.Monoid]},\n    types: [TypeRep (a), a],\n    impl: Z.empty\n  };\n\n  //# invert :: Group g => g -> g\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.invert`][].\n  //.\n  //. ```javascript\n  //. > S.invert (Sum (5))\n  //. Sum (-5)\n  //. ```\n  _.invert = {\n    consts: {g: [Z.Group]},\n    types: [g, g],\n    impl: Z.invert\n  };\n\n  //# filter :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.filter`][]. Discards every element which does not\n  //. satisfy the predicate.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > S.filter (S.odd) ([1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > S.filter (S.odd) ({x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > S.filter (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (0))\n  //. Nothing\n  //.\n  //. > S.filter (S.odd) (S.Just (1))\n  //. Just (1)\n  //. ```\n  function filter(pred) {\n    return function(filterable) {\n      return Z.filter (pred, filterable);\n    };\n  }\n  _.filter = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: filter\n  };\n\n  //# reject :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.reject`][]. Discards every element which satisfies\n  //. the predicate.\n  //.\n  //. See also [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > S.reject (S.odd) ([1, 2, 3])\n  //. [2]\n  //.\n  //. > S.reject (S.odd) ({x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > S.reject (S.odd) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.reject (S.odd) (S.Just (0))\n  //. Just (0)\n  //.\n  //. > S.reject (S.odd) (S.Just (1))\n  //. Nothing\n  //. ```\n  _.reject = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: curry2 (Z.reject)\n  };\n\n  //# takeWhile :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.takeWhile`][]. Discards the first element which\n  //. does not satisfy the predicate, and all subsequent elements.\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > S.takeWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7]\n  //.\n  //. > S.takeWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. []\n  //. ```\n  _.takeWhile = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: curry2 (Z.takeWhile)\n  };\n\n  //# dropWhile :: Filterable f => (a -> Boolean) -> f a -> f a\n  //.\n  //. Curried version of [`Z.dropWhile`][]. Retains the first element which\n  //. does not satisfy the predicate, and all subsequent elements.\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > S.dropWhile (S.odd) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [6, 3, 5, 4]\n  //.\n  //. > S.dropWhile (S.even) ([3, 3, 3, 7, 6, 3, 5, 4])\n  //. [3, 3, 3, 7, 6, 3, 5, 4]\n  //. ```\n  _.dropWhile = {\n    consts: {f: [Z.Filterable]},\n    types: [$.Predicate (a), f (a), f (a)],\n    impl: curry2 (Z.dropWhile)\n  };\n\n  //# map :: Functor f => (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.map`][].\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) ([1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > S.map (Math.sqrt) ({x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > S.map (Math.sqrt) (S.Just (9))\n  //. Just (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Right (9))\n  //. Right (3)\n  //.\n  //. > S.map (Math.sqrt) (S.Pair (99980001) (99980001))\n  //. Pair (99980001) (9999)\n  //. ```\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the B combinator\n  //. from combinatory logic (i.e. [`compose`](#compose)):\n  //.\n  //.     Functor f => (a -> b) -> f a -> f b\n  //.     (a -> b) -> Function x a -> Function x b\n  //.     (a -> c) -> Function x a -> Function x c\n  //.     (b -> c) -> Function x b -> Function x c\n  //.     (b -> c) -> Function a b -> Function a c\n  //.     (b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  function map(f) {\n    return function(functor) {\n      return Z.map (f, functor);\n    };\n  }\n  _.map = {\n    consts: {f: [Z.Functor]},\n    types: [Fn (a) (b), f (a), f (b)],\n    impl: map\n  };\n\n  //# flip :: Functor f => f (a -> b) -> a -> f b\n  //.\n  //. Curried version of [`Z.flip`][]. Maps over the given functions, applying\n  //. each to the given value.\n  //.\n  //. Replacing `Functor f => f` with `Function x` produces the C combinator\n  //. from combinatory logic:\n  //.\n  //.     Functor f => f (a -> b) -> a -> f b\n  //.     Function x (a -> b) -> a -> Function x b\n  //.     Function x (a -> c) -> a -> Function x c\n  //.     Function x (b -> c) -> b -> Function x c\n  //.     Function a (b -> c) -> b -> Function a c\n  //.     (a -> b -> c) -> b -> a -> c\n  //.\n  //. ```javascript\n  //. > S.flip (S.concat) ('!') ('foo')\n  //. 'foo!'\n  //.\n  //. > S.flip ([Math.floor, Math.ceil]) (1.5)\n  //. [1, 2]\n  //.\n  //. > S.flip ({floor: Math.floor, ceil: Math.ceil}) (1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > S.flip (Cons (Math.floor) (Cons (Math.ceil) (Nil))) (1.5)\n  //. Cons (1) (Cons (2) (Nil))\n  //. ```\n  _.flip = {\n    consts: {f: [Z.Functor]},\n    types: [f (Fn (a) (b)), a, f (b)],\n    impl: curry2 (Z.flip)\n  };\n\n  //# bimap :: Bifunctor f => (a -> b) -> (c -> d) -> f a c -> f b d\n  //.\n  //. Curried version of [`Z.bimap`][].\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (8)\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.bimap (S.toUpper) (Math.sqrt) (S.Right (64))\n  //. Right (8)\n  //. ```\n  _.bimap = {\n    consts: {p: [Z.Bifunctor]},\n    types: [Fn (a) (b), Fn (c) (d), p (a) (c), p (b) (d)],\n    impl: curry3 (Z.bimap)\n  };\n\n  //# mapLeft :: Bifunctor f => (a -> b) -> f a c -> f b c\n  //.\n  //. Curried version of [`Z.mapLeft`][]. Maps the given function over the left\n  //. side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > S.mapLeft (S.toUpper) (S.Pair ('foo') (64))\n  //. Pair ('FOO') (64)\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Left ('foo'))\n  //. Left ('FOO')\n  //.\n  //. > S.mapLeft (S.toUpper) (S.Right (64))\n  //. Right (64)\n  //. ```\n  _.mapLeft = {\n    consts: {p: [Z.Bifunctor]},\n    types: [Fn (a) (b), p (a) (c), p (b) (c)],\n    impl: curry2 (Z.mapLeft)\n  };\n\n  //# promap :: Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n  //.\n  //. Curried version of [`Z.promap`][].\n  //.\n  //. ```javascript\n  //. > S.promap (Math.abs) (S.add (1)) (Math.sqrt) (-100)\n  //. 11\n  //. ```\n  _.promap = {\n    consts: {p: [Z.Profunctor]},\n    types: [Fn (a) (b), Fn (c) (d), p (b) (c), p (a) (d)],\n    impl: curry3 (Z.promap)\n  };\n\n  //# alt :: Alt f => f a -> f a -> f a\n  //.\n  //. Curried version of [`Z.alt`][].\n  //.\n  //. ```javascript\n  //. > S.alt (S.Nothing) (S.Just (1))\n  //. Just (1)\n  //.\n  //. > S.alt (S.Just (2)) (S.Just (3))\n  //. Just (2)\n  //.\n  //. > S.alt (S.Left ('X')) (S.Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (S.Right (2)) (S.Right (3))\n  //. Right (2)\n  //. ```\n  _.alt = {\n    consts: {f: [Z.Alt]},\n    types: [f (a), f (a), f (a)],\n    impl: curry2 (Z.alt)\n  };\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.zero`][].\n  //.\n  //. ```javascript\n  //. > S.zero (Array)\n  //. []\n  //.\n  //. > S.zero (Object)\n  //. {}\n  //.\n  //. > S.zero (S.Maybe)\n  //. Nothing\n  //. ```\n  _.zero = {\n    consts: {f: [Z.Plus]},\n    types: [TypeRep ($.TypeVariable ('f')), f (a)],\n    impl: Z.zero\n  };\n\n  //# reduce :: Foldable f => (b -> a -> b) -> b -> f a -> b\n  //.\n  //. Takes a curried binary function, an initial value, and a [Foldable][],\n  //. and applies the function to the initial value and the Foldable's first\n  //. value, then applies the function to the result of the previous\n  //. application and the Foldable's second value. Repeats this process\n  //. until each of the Foldable's values has been used. Returns the initial\n  //. value if the Foldable is empty; the result of the final application\n  //. otherwise.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.add) (0) ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.reduce (xs => x => S.prepend (x) (xs)) ([]) ([1, 2, 3, 4, 5])\n  //. [5, 4, 3, 2, 1]\n  //. ```\n  function reduce(f) {\n    return function(initial) {\n      return function(foldable) {\n        return Z.reduce (function(y, x) { return f (y) (x); },\n                         initial,\n                         foldable);\n      };\n    };\n  }\n  _.reduce = {\n    consts: {f: [Z.Foldable]},\n    types: [Fn (a) (Fn (b) (a)), a, f (b), a],\n    impl: reduce\n  };\n\n  //# traverse :: (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n  //.\n  //. Curried version of [`Z.traverse`][].\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (S.Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //.\n  //. > S.traverse (Array) (S.words) (S.Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C'])\n  //. Just ([10, 11, 12])\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) (['A', 'B', 'C', 'X'])\n  //. Nothing\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C'})\n  //. Just ({a: 10, b: 11, c: 12})\n  //.\n  //. > S.traverse (S.Maybe) (S.parseInt (16)) ({a: 'A', b: 'B', c: 'C', x: 'X'})\n  //. Nothing\n  //. ```\n  _.traverse = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep ($.TypeVariable ('f')), Fn (a) (f (b)), t (a), f (t (b))],\n    impl: curry3 (Z.traverse)\n  };\n\n  //# sequence :: (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n  //.\n  //. Curried version of [`Z.sequence`][]. Inverts the given `t (f a)`\n  //. to produce an `f (t a)`.\n  //.\n  //. ```javascript\n  //. > S.sequence (Array) (S.Just ([1, 2, 3]))\n  //. [Just (1), Just (2), Just (3)]\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Just (3)])\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.sequence (S.Maybe) ([S.Just (1), S.Just (2), S.Nothing])\n  //. Nothing\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Just (3)})\n  //. Just ({a: 1, b: 2, c: 3})\n  //.\n  //. > S.sequence (S.Maybe) ({a: S.Just (1), b: S.Just (2), c: S.Nothing})\n  //. Nothing\n  //. ```\n  _.sequence = {\n    consts: {f: [Z.Applicative], t: [Z.Traversable]},\n    types: [TypeRep ($.TypeVariable ('f')), t (f (a)), f (t (a))],\n    impl: curry2 (Z.sequence)\n  };\n\n  //# ap :: Apply f => f (a -> b) -> f a -> f b\n  //.\n  //. Curried version of [`Z.ap`][].\n  //.\n  //. ```javascript\n  //. > S.ap ([Math.sqrt, x => x * x]) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > S.ap ({x: Math.sqrt, y: S.add (1), z: S.sub (1)}) ({w: 4, x: 4, y: 4})\n  //. {x: 2, y: 5}\n  //.\n  //. > S.ap (S.Just (Math.sqrt)) (S.Just (64))\n  //. Just (8)\n  //. ```\n  //.\n  //. Replacing `Apply f => f` with `Function x` produces the S combinator\n  //. from combinatory logic:\n  //.\n  //.     Apply f => f (a -> b) -> f a -> f b\n  //.     Function x (a -> b) -> Function x a -> Function x b\n  //.     Function x (a -> c) -> Function x a -> Function x c\n  //.     Function x (b -> c) -> Function x b -> Function x c\n  //.     Function a (b -> c) -> Function a b -> Function a c\n  //.     (a -> b -> c) -> (a -> b) -> (a -> c)\n  //.\n  //. ```javascript\n  //. > S.ap (s => n => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('Haskell')\n  //. 'Hask'\n  //. ```\n  _.ap = {\n    consts: {f: [Z.Apply]},\n    types: [f (Fn (a) (b)), f (a), f (b)],\n    impl: curry2 (Z.ap)\n  };\n\n  //# lift2 :: Apply f => (a -> b -> c) -> f a -> f b -> f c\n  //.\n  //. Promotes a curried binary function to a function which operates on two\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Just (3))\n  //. Just (5)\n  //.\n  //. > S.lift2 (S.add) (S.Just (2)) (S.Nothing)\n  //. Nothing\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (true))\n  //. Just (true)\n  //.\n  //. > S.lift2 (S.and) (S.Just (true)) (S.Just (false))\n  //. Just (false)\n  //. ```\n  _.lift2 = {\n    consts: {f: [Z.Apply]},\n    types: [Fn (a) (Fn (b) (c)), f (a), f (b), f (c)],\n    impl: curry3 (Z.lift2)\n  };\n\n  //# lift3 :: Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n  //.\n  //. Promotes a curried ternary function to a function which operates on three\n  //. [Apply][]s.\n  //.\n  //. ```javascript\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Just ([1, 2, 3]))\n  //. Just (6)\n  //.\n  //. > S.lift3 (S.reduce) (S.Just (S.add)) (S.Just (0)) (S.Nothing)\n  //. Nothing\n  //. ```\n  _.lift3 = {\n    consts: {f: [Z.Apply]},\n    types: [Fn (a) (Fn (b) (Fn (c) (d))), f (a), f (b), f (c), f (d)],\n    impl: curry4 (Z.lift3)\n  };\n\n  //# apFirst :: Apply f => f a -> f b -> f a\n  //.\n  //. Curried version of [`Z.apFirst`][]. Combines two effectful actions,\n  //. keeping only the result of the first. Equivalent to Haskell's `(<*)`\n  //. function.\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > S.apFirst ([1, 2]) ([3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > S.apFirst (S.Just (1)) (S.Just (2))\n  //. Just (1)\n  //. ```\n  _.apFirst = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (a)],\n    impl: curry2 (Z.apFirst)\n  };\n\n  //# apSecond :: Apply f => f a -> f b -> f b\n  //.\n  //. Curried version of [`Z.apSecond`][]. Combines two effectful actions,\n  //. keeping only the result of the second. Equivalent to Haskell's `(*>)`\n  //. function.\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > S.apSecond ([1, 2]) ([3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > S.apSecond (S.Just (1)) (S.Just (2))\n  //. Just (2)\n  //. ```\n  _.apSecond = {\n    consts: {f: [Z.Apply]},\n    types: [f (a), f (b), f (b)],\n    impl: curry2 (Z.apSecond)\n  };\n\n  //# of :: Applicative f => TypeRep f -> a -> f a\n  //.\n  //. Curried version of [`Z.of`][].\n  //.\n  //. ```javascript\n  //. > S.of (Array) (42)\n  //. [42]\n  //.\n  //. > S.of (Function) (42) (null)\n  //. 42\n  //.\n  //. > S.of (S.Maybe) (42)\n  //. Just (42)\n  //.\n  //. > S.of (S.Either) (42)\n  //. Right (42)\n  //. ```\n  function of(typeRep) {\n    return function(x) {\n      return Z.of (typeRep, x);\n    };\n  }\n  _.of = {\n    consts: {f: [Z.Applicative]},\n    types: [TypeRep ($.TypeVariable ('f')), a, f (a)],\n    impl: of\n  };\n\n  //# chain :: Chain m => (a -> m b) -> m a -> m b\n  //.\n  //. Curried version of [`Z.chain`][].\n  //.\n  //. ```javascript\n  //. > S.chain (x => [x, x]) ([1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > S.chain (n => s => s.slice (0, n)) (s => Math.ceil (s.length / 2)) ('slice')\n  //. 'sli'\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('123'))\n  //. Just (123)\n  //.\n  //. > S.chain (S.parseInt (10)) (S.Just ('XXX'))\n  //. Nothing\n  //. ```\n  _.chain = {\n    consts: {m: [Z.Chain]},\n    types: [Fn (a) (m (b)), m (a), m (b)],\n    impl: curry2 (Z.chain)\n  };\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.join`][].\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. ```javascript\n  //. > S.join ([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > S.join ([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > S.join (S.Just (S.Just (1)))\n  //. Just (1)\n  //.\n  //. > S.join (S.Pair ('foo') (S.Pair ('bar') ('baz')))\n  //. Pair ('foobar') ('baz')\n  //. ```\n  //.\n  //. Replacing `Chain m => m` with `Function x` produces the W combinator\n  //. from combinatory logic:\n  //.\n  //.     Chain m => m (m a) -> m a\n  //.     Function x (Function x a) -> Function x a\n  //.     (x -> x -> a) -> (x -> a)\n  //.\n  //. ```javascript\n  //. > S.join (S.concat) ('abc')\n  //. 'abcabc'\n  //. ```\n  _.join = {\n    consts: {m: [Z.Chain]},\n    types: [m (m (a)), m (a)],\n    impl: Z.join\n  };\n\n  //# chainRec :: ChainRec m => TypeRep m -> (a -> m (Either a b)) -> a -> m b\n  //.\n  //. Performs a [`chain`](#chain)-like computation with constant stack usage.\n  //. Similar to [`Z.chainRec`][], but curried and more convenient due to the\n  //. use of the Either type to indicate completion (via a Right).\n  //.\n  //. ```javascript\n  //. > S.chainRec (Array)\n  //. .            (s => s.length === 2 ? S.map (S.Right) ([s + '!', s + '?'])\n  //. .                                 : S.map (S.Left) ([s + 'o', s + 'n']))\n  //. .            ('')\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep) {\n    return function(f) {\n      return function(x) {\n        return Z.chainRec (typeRep, step, x);\n      };\n      function step(next, done, x) {\n        return Z.map (either (next) (done), f (x));\n      }\n    };\n  }\n  _.chainRec = {\n    consts: {m: [Z.ChainRec]},\n    types: [TypeRep ($.TypeVariable ('m')),\n            Fn (a) (m ($Either (a) (b))),\n            a,\n            m (b)],\n    impl: chainRec\n  };\n\n  //# extend :: Extend w => (w a -> b) -> w a -> w b\n  //.\n  //. Curried version of [`Z.extend`][].\n  //.\n  //. ```javascript\n  //. > S.extend (S.joinWith ('')) (['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > S.extend (f => f ([3, 4])) (S.reverse) ([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.extend = {\n    consts: {w: [Z.Extend]},\n    types: [Fn (w (a)) (b), w (a), w (b)],\n    impl: curry2 (Z.extend)\n  };\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.duplicate`][].\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. ```javascript\n  //. > S.duplicate (S.Just (1))\n  //. Just (Just (1))\n  //.\n  //. > S.duplicate ([1])\n  //. [[1]]\n  //.\n  //. > S.duplicate ([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > S.duplicate (S.reverse) ([1, 2]) ([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  _.duplicate = {\n    consts: {w: [Z.Extend]},\n    types: [w (a), w (w (a))],\n    impl: Z.duplicate\n  };\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.extract`][].\n  //.\n  //. ```javascript\n  //. > S.extract (S.Pair ('foo') ('bar'))\n  //. 'bar'\n  //. ```\n  _.extract = {\n    consts: {w: [Z.Comonad]},\n    types: [w (a), a],\n    impl: Z.extract\n  };\n\n  //# contramap :: Contravariant f => (b -> a) -> f a -> f b\n  //.\n  //. [Type-safe][sanctuary-def] version of [`Z.contramap`][].\n  //.\n  //. ```javascript\n  //. > S.contramap (s => s.length) (Math.sqrt) ('Sanctuary')\n  //. 3\n  //. ```\n  _.contramap = {\n    consts: {f: [Z.Contravariant]},\n    types: [Fn (b) (a), f (a), f (b)],\n    impl: curry2 (Z.contramap)\n  };\n\n  //. ### Combinator\n\n  //# I :: a -> a\n  //.\n  //. The I combinator. Returns its argument. Equivalent to Haskell's `id`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.I ('foo')\n  //. 'foo'\n  //. ```\n  function I(x) {\n    return x;\n  }\n  _.I = {\n    consts: {},\n    types: [a, a],\n    impl: I\n  };\n\n  //# K :: a -> b -> a\n  //.\n  //. The K combinator. Takes two values and returns the first. Equivalent to\n  //. Haskell's `const` function.\n  //.\n  //. ```javascript\n  //. > S.K ('foo') ('bar')\n  //. 'foo'\n  //.\n  //. > S.map (S.K (42)) (S.range (0) (5))\n  //. [42, 42, 42, 42, 42]\n  //. ```\n  function K(x) {\n    return function(y) {\n      return x;\n    };\n  }\n  _.K = {\n    consts: {},\n    types: [a, b, a],\n    impl: K\n  };\n\n  //# T :: a -> (a -> b) -> b\n  //.\n  //. The T ([thrush][]) combinator. Takes a value and a function, and returns\n  //. the result of applying the function to the value. Equivalent to Haskell's\n  //. `(&)` function.\n  //.\n  //. ```javascript\n  //. > S.T (42) (S.add (1))\n  //. 43\n  //.\n  //. > S.map (S.T (100)) ([S.add (1), Math.sqrt])\n  //. [101, 10]\n  //. ```\n  function T(x) {\n    return function(f) {\n      return f (x);\n    };\n  }\n  _.T = {\n    consts: {},\n    types: [a, Fn (a) (b), b],\n    impl: T\n  };\n\n  //. ### Function\n\n  //# curry2 :: ((a, b) -> c) -> a -> b -> c\n  //.\n  //. Curries the given binary function.\n  //.\n  //. ```javascript\n  //. > S.map (S.curry2 (Math.pow) (10)) ([1, 2, 3])\n  //. [10, 100, 1000]\n  //. ```\n  function curry2(f) {\n    return function(x) {\n      return function(y) {\n        return f (x, y);\n      };\n    };\n  }\n  _.curry2 = {\n    consts: {},\n    types: [$.Function ([a, b, c]), a, b, c],\n    impl: curry2\n  };\n\n  //# curry3 :: ((a, b, c) -> d) -> a -> b -> c -> d\n  //.\n  //. Curries the given ternary function.\n  //.\n  //. ```javascript\n  //. > const replaceString = S.curry3 ((what, replacement, string) =>\n  //. .   string.replace (what, replacement)\n  //. . )\n  //.\n  //. > replaceString ('banana') ('orange') ('banana icecream')\n  //. 'orange icecream'\n  //. ```\n  function curry3(f) {\n    return function(x) {\n      return function(y) {\n        return function(z) {\n          return f (x, y, z);\n        };\n      };\n    };\n  }\n  _.curry3 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d]), a, b, c, d],\n    impl: curry3\n  };\n\n  //# curry4 :: ((a, b, c, d) -> e) -> a -> b -> c -> d -> e\n  //.\n  //. Curries the given quaternary function.\n  //.\n  //. ```javascript\n  //. > const createRect = S.curry4 ((x, y, width, height) =>\n  //. .   ({x, y, width, height})\n  //. . )\n  //.\n  //. > createRect (0) (0) (10) (10)\n  //. {x: 0, y: 0, width: 10, height: 10}\n  //. ```\n  function curry4(f) {\n    return function(w) {\n      return function(x) {\n        return function(y) {\n          return function(z) {\n            return f (w, x, y, z);\n          };\n        };\n      };\n    };\n  }\n  _.curry4 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e]), a, b, c, d, e],\n    impl: curry4\n  };\n\n  //# curry5 :: ((a, b, c, d, e) -> f) -> a -> b -> c -> d -> e -> f\n  //.\n  //. Curries the given quinary function.\n  //.\n  //. ```javascript\n  //. > const toUrl = S.curry5 ((protocol, creds, hostname, port, pathname) =>\n  //. .   protocol + '//' +\n  //. .   S.maybe ('') (S.flip (S.concat) ('@')) (creds) +\n  //. .   hostname +\n  //. .   S.maybe ('') (S.concat (':')) (port) +\n  //. .   pathname\n  //. . )\n  //.\n  //. > toUrl ('https:') (S.Nothing) ('example.com') (S.Just ('443')) ('/foo/bar')\n  //. 'https://example.com:443/foo/bar'\n  //. ```\n  function curry5(f) {\n    return function(v) {\n      return function(w) {\n        return function(x) {\n          return function(y) {\n            return function(z) {\n              return f (v, w, x, y, z);\n            };\n          };\n        };\n      };\n    };\n  }\n  _.curry5 = {\n    consts: {},\n    types: [$.Function ([a, b, c, d, e, r]), a, b, c, d, e, r],\n    impl: curry5\n  };\n\n  //. ### Composition\n\n  //# compose :: Semigroupoid s => s b c -> s a b -> s a c\n  //.\n  //. Curried version of [`Z.compose`][].\n  //.\n  //. When specialized to Function, `compose` composes two unary functions,\n  //. from right to left (this is the B combinator from combinatory logic).\n  //.\n  //. The generalized type signature indicates that `compose` is compatible\n  //. with any [Semigroupoid][].\n  //.\n  //. See also [`pipe`](#pipe).\n  //.\n  //. ```javascript\n  //. > S.compose (Math.sqrt) (S.add (1)) (99)\n  //. 10\n  //. ```\n  _.compose = {\n    consts: {s: [Z.Semigroupoid]},\n    types: [s (b) (c), s (a) (b), s (a) (c)],\n    impl: curry2 (Z.compose)\n  };\n\n  //# pipe :: Foldable f => f (Any -> Any) -> a -> b\n  //.\n  //. Takes a sequence of functions assumed to be unary and a value of any\n  //. type, and returns the result of applying the sequence of transformations\n  //. to the initial value.\n  //.\n  //. In general terms, `pipe` performs left-to-right composition of a sequence\n  //. of functions. `pipe ([f, g, h]) (x)` is equivalent to `h (g (f (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipe ([S.add (1), Math.sqrt, S.sub (1)]) (99)\n  //. 9\n  //. ```\n  function pipe(fs) {\n    return function(x) {\n      return reduce (T) (x) (fs);\n    };\n  }\n  _.pipe = {\n    consts: {f: [Z.Foldable]},\n    types: [f (Fn ($.Any) ($.Any)), a, b],\n    impl: pipe\n  };\n\n  //# pipeK :: (Foldable f, Chain m) => f (Any -> m Any) -> m a -> m b\n  //.\n  //. Takes a sequence of functions assumed to be unary which return values\n  //. with a [Chain][], and a value of that Chain, and returns the result\n  //. of applying the sequence of transformations to the initial value.\n  //.\n  //. In general terms, `pipeK` performs left-to-right [Kleisli][] composition\n  //. of an sequence of functions. `pipeK ([f, g, h]) (x)` is equivalent to\n  //. `chain (h) (chain (g) (chain (f) (x)))`.\n  //.\n  //. ```javascript\n  //. > S.pipeK ([S.tail, S.tail, S.head]) (S.Just ([1, 2, 3, 4]))\n  //. Just (3)\n  //. ```\n  function pipeK(fs) {\n    return function(x) {\n      return Z.reduce (function(x, f) { return Z.chain (f, x); }, x, fs);\n    };\n  }\n  _.pipeK = {\n    consts: {f: [Z.Foldable], m: [Z.Chain]},\n    types: [f (Fn ($.Any) (m ($.Any))), m (a), m (b)],\n    impl: pipeK\n  };\n\n  //# on :: (b -> b -> c) -> (a -> b) -> a -> a -> c\n  //.\n  //. Takes a binary function `f`, a unary function `g`, and two\n  //. values `x` and `y`. Returns `f (g (x)) (g (y))`.\n  //.\n  //. This is the P combinator from combinatory logic.\n  //.\n  //. ```javascript\n  //. > S.on (S.concat) (S.reverse) ([1, 2, 3]) ([4, 5, 6])\n  //. [3, 2, 1, 6, 5, 4]\n  //. ```\n  function on(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          return f (g (x)) (g (y));\n        };\n      };\n    };\n  }\n  _.on = {\n    consts: {},\n    types: [Fn (b) (Fn (b) (c)), Fn (a) (b), a, a, c],\n    impl: on\n  };\n\n  //. ### Pair type\n  //.\n  //. Pair is the canonical product type: a value of type `Pair a b` always\n  //. contains exactly two values: one of type `a`; one of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-pair][].\n\n  //# PairType :: Type -> Type -> Type\n  //.\n  //. A [`BinaryType`][BinaryType] for use with [sanctuary-def][].\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > S.Pair ('foo') (42)\n  //. Pair ('foo') (42)\n  //. ```\n  _.Pair = {\n    consts: {},\n    types: [a, b, $Pair (a) (b)],\n    impl: Pair\n  };\n\n  //# fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > S.fst (S.Pair ('foo') (42))\n  //. 'foo'\n  //. ```\n  _.fst = {\n    consts: {},\n    types: [$Pair (a) (b), a],\n    impl: Pair.fst\n  };\n\n  //# snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.snd (S.Pair ('foo') (42))\n  //. 42\n  //. ```\n  _.snd = {\n    consts: {},\n    types: [$Pair (a) (b), b],\n    impl: Pair.snd\n  };\n\n  //# swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > S.swap (S.Pair ('foo') (42))\n  //. Pair (42) ('foo')\n  //. ```\n  _.swap = {\n    consts: {},\n    types: [$Pair (a) (b), $Pair (b) (a)],\n    impl: Pair.swap\n  };\n\n  //. ### Maybe type\n  //.\n  //. The Maybe type represents optional values: a value of type `Maybe a` is\n  //. either Nothing (the empty value) or a Just whose value is of type `a`.\n  //.\n  //. The implementation is provided by [sanctuary-maybe][].\n\n  //# MaybeType :: Type -> Type\n  //.\n  //. A [`UnaryType`][UnaryType] for use with [sanctuary-def][].\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > S.Nothing\n  //. Nothing\n  //. ```\n\n  //# Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Just (42)\n  //. Just (42)\n  //. ```\n  _.Just = {\n    consts: {},\n    types: [a, $Maybe (a)],\n    impl: Just\n  };\n\n  //# isNothing :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is Nothing; `false` if it is a Just.\n  //.\n  //. ```javascript\n  //. > S.isNothing (S.Nothing)\n  //. true\n  //.\n  //. > S.isNothing (S.Just (42))\n  //. false\n  //. ```\n  function isNothing(maybe) {\n    return maybe.isNothing;\n  }\n  _.isNothing = {\n    consts: {},\n    types: [$Maybe (a), $.Boolean],\n    impl: isNothing\n  };\n\n  //# isJust :: Maybe a -> Boolean\n  //.\n  //. Returns `true` if the given Maybe is a Just; `false` if it is Nothing.\n  //.\n  //. ```javascript\n  //. > S.isJust (S.Just (42))\n  //. true\n  //.\n  //. > S.isJust (S.Nothing)\n  //. false\n  //. ```\n  function isJust(maybe) {\n    return maybe.isJust;\n  }\n  _.isJust = {\n    consts: {},\n    types: [$Maybe (a), $.Boolean],\n    impl: isJust\n  };\n\n  //# fromMaybe :: a -> Maybe a -> a\n  //.\n  //. Takes a default value and a Maybe, and returns the Maybe's value\n  //. if the Maybe is a Just; the default value otherwise.\n  //.\n  //. See also [`fromMaybe_`](#fromMaybe_) and\n  //. [`maybeToNullable`](#maybeToNullable).\n  //.\n  //. ```javascript\n  //. > S.fromMaybe (0) (S.Just (42))\n  //. 42\n  //.\n  //. > S.fromMaybe (0) (S.Nothing)\n  //. 0\n  //. ```\n  _.fromMaybe = {\n    consts: {},\n    types: [a, $Maybe (a), a],\n    impl: C (maybe) (I)\n  };\n\n  //# fromMaybe_ :: (() -> a) -> Maybe a -> a\n  //.\n  //. Variant of [`fromMaybe`](#fromMaybe) which takes a thunk so the default\n  //. value is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Just (1000000))\n  //. 1000000\n  //.\n  //. > S.fromMaybe_ (() => fib (30)) (S.Nothing)\n  //. 832040\n  //. ```\n  _.fromMaybe_ = {\n    consts: {},\n    types: [$.Thunk (a), $Maybe (a), a],\n    impl: C (maybe_) (I)\n  };\n\n  //# maybeToNullable :: Maybe a -> Nullable a\n  //.\n  //. Returns the given Maybe's value if the Maybe is a Just; `null` otherwise.\n  //. [Nullable][] is defined in [sanctuary-def][].\n  //.\n  //. See also [`fromMaybe`](#fromMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToNullable (S.Just (42))\n  //. 42\n  //.\n  //. > S.maybeToNullable (S.Nothing)\n  //. null\n  //. ```\n  function maybeToNullable(maybe) {\n    return maybe.isJust ? maybe.value : null;\n  }\n  _.maybeToNullable = {\n    consts: {},\n    types: [$Maybe (a), $.Nullable (a)],\n    impl: maybeToNullable\n  };\n\n  //# toMaybe :: a? -> Maybe a\n  //.\n  //. Takes a value and returns Nothing if the value is `null` or `undefined`;\n  //. Just the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.toMaybe (null)\n  //. Nothing\n  //.\n  //. > S.toMaybe (42)\n  //. Just (42)\n  //. ```\n  function toMaybe(x) {\n    return x == null ? Nothing : Just (x);\n  }\n  _.toMaybe = {\n    consts: {},\n    types: [a, $Maybe (a)],\n    impl: toMaybe\n  };\n\n  //# maybe :: b -> (a -> b) -> Maybe a -> b\n  //.\n  //. Takes a value of any type, a function, and a Maybe. If the Maybe is\n  //. a Just, the return value is the result of applying the function to\n  //. the Just's value. Otherwise, the first argument is returned.\n  //.\n  //. See also [`maybe_`](#maybe_).\n  //.\n  //. ```javascript\n  //. > S.maybe (0) (S.prop ('length')) (S.Just ('refuge'))\n  //. 6\n  //.\n  //. > S.maybe (0) (S.prop ('length')) (S.Nothing)\n  //. 0\n  //. ```\n  function maybe(x) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : x;\n      };\n    };\n  }\n  _.maybe = {\n    consts: {},\n    types: [b, Fn (a) (b), $Maybe (a), b],\n    impl: maybe\n  };\n\n  //# maybe_ :: (() -> b) -> (a -> b) -> Maybe a -> b\n  //.\n  //. Variant of [`maybe`](#maybe) which takes a thunk so the default value\n  //. is only computed if required.\n  //.\n  //. ```javascript\n  //. > function fib(n) { return n <= 1 ? n : fib (n - 2) + fib (n - 1); }\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Just (1000000))\n  //. 1000\n  //.\n  //. > S.maybe_ (() => fib (30)) (Math.sqrt) (S.Nothing)\n  //. 832040\n  //. ```\n  function maybe_(thunk) {\n    return function(f) {\n      return function(maybe) {\n        return maybe.isJust ? f (maybe.value) : thunk ();\n      };\n    };\n  }\n  _.maybe_ = {\n    consts: {},\n    types: [$.Thunk (b), Fn (a) (b), $Maybe (a), b],\n    impl: maybe_\n  };\n\n  //# justs :: (Filterable f, Functor f) => f (Maybe a) -> f a\n  //.\n  //. Discards each element which is Nothing, and unwraps each element which is\n  //. a Just. Related to Haskell's `catMaybes` function.\n  //.\n  //. See also [`lefts`](#lefts) and [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.justs ([S.Just ('foo'), S.Nothing, S.Just ('baz')])\n  //. ['foo', 'baz']\n  //. ```\n  function justs(maybes) {\n    return map (value) (filter (isJust) (maybes));\n  }\n  _.justs = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($Maybe (a)), f (a)],\n    impl: justs\n  };\n\n  //# mapMaybe :: (Filterable f, Functor f) => (a -> Maybe b) -> f a -> f b\n  //.\n  //. Takes a function and a structure, applies the function to each element\n  //. of the structure, and returns the \"successful\" results. If the result of\n  //. applying the function to an element is Nothing, the result is discarded;\n  //. if the result is a Just, the Just's value is included.\n  //.\n  //. ```javascript\n  //. > S.mapMaybe (S.head) ([[], [1, 2, 3], [], [4, 5, 6], []])\n  //. [1, 4]\n  //.\n  //. > S.mapMaybe (S.head) ({x: [1, 2, 3], y: [], z: [4, 5, 6]})\n  //. {x: 1, z: 4}\n  //. ```\n  _.mapMaybe = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [Fn (a) ($Maybe (b)), f (a), f (b)],\n    impl: B (B (justs)) (map)\n  };\n\n  //# encase :: (a -> b) -> a -> Maybe b\n  //.\n  //. Takes a unary function `f` which may throw and a value `x` of any type,\n  //. and applies `f` to `x` inside a `try` block. If an exception is caught,\n  //. the return value is Nothing; otherwise the return value is Just the\n  //. result of applying `f` to `x`.\n  //.\n  //. See also [`encaseEither`](#encaseEither).\n  //.\n  //. ```javascript\n  //. > S.encase (eval) ('1 + 1')\n  //. Just (2)\n  //.\n  //. > S.encase (eval) ('1 +')\n  //. Nothing\n  //. ```\n  function encase(f) {\n    return B (eitherToMaybe) (encaseEither (I) (f));\n  }\n  _.encase = {\n    consts: {},\n    types: [Fn (a) (b), a, $Maybe (b)],\n    impl: encase\n  };\n\n  //# encase2 :: (a -> b -> c) -> a -> b -> Maybe c\n  //.\n  //. Binary version of [`encase`](#encase).\n  _.encase2 = {\n    consts: {},\n    types: [Fn (a) (Fn (b) (c)), a, b, $Maybe (c)],\n    impl: B (B (B (eitherToMaybe))) (encaseEither2 (I))\n  };\n\n  //# encase3 :: (a -> b -> c -> d) -> a -> b -> c -> Maybe d\n  //.\n  //. Ternary version of [`encase`](#encase).\n  _.encase3 = {\n    consts: {},\n    types: [Fn (a) (Fn (b) (Fn (c) (d))), a, b, c, $Maybe (d)],\n    impl: B (B (B (B (eitherToMaybe)))) (encaseEither3 (I))\n  };\n\n  //# maybeToEither :: a -> Maybe b -> Either a b\n  //.\n  //. Converts a Maybe to an Either. Nothing becomes a Left (containing the\n  //. first argument); a Just becomes a Right.\n  //.\n  //. See also [`eitherToMaybe`](#eitherToMaybe).\n  //.\n  //. ```javascript\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('xyz'))\n  //. Left ('Expecting an integer')\n  //.\n  //. > S.maybeToEither ('Expecting an integer') (S.parseInt (10) ('42'))\n  //. Right (42)\n  //. ```\n  function maybeToEither(x) {\n    return maybe (Left (x)) (Right);\n  }\n  _.maybeToEither = {\n    consts: {},\n    types: [a, $Maybe (b), $Either (a) (b)],\n    impl: maybeToEither\n  };\n\n  //. ### Either type\n  //.\n  //. The Either type represents values with two possibilities: a value of type\n  //. `Either a b` is either a Left whose value is of type `a` or a Right whose\n  //. value is of type `b`.\n  //.\n  //. The implementation is provided by [sanctuary-either][].\n\n  //# EitherType :: Type -> Type -> Type\n  //.\n  //. A [`BinaryType`][BinaryType] for use with [sanctuary-def][].\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > S.Left ('Cannot divide by zero')\n  //. Left ('Cannot divide by zero')\n  //. ```\n  _.Left = {\n    consts: {},\n    types: [a, $Either (a) (b)],\n    impl: Left\n  };\n\n  //# Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > S.Right (42)\n  //. Right (42)\n  //. ```\n  _.Right = {\n    consts: {},\n    types: [b, $Either (a) (b)],\n    impl: Right\n  };\n\n  //# isLeft :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Left; `false` if it is a Right.\n  //.\n  //. ```javascript\n  //. > S.isLeft (S.Left ('Cannot divide by zero'))\n  //. true\n  //.\n  //. > S.isLeft (S.Right (42))\n  //. false\n  //. ```\n  function isLeft(either) {\n    return either.isLeft;\n  }\n  _.isLeft = {\n    consts: {},\n    types: [$Either (a) (b), $.Boolean],\n    impl: isLeft\n  };\n\n  //# isRight :: Either a b -> Boolean\n  //.\n  //. Returns `true` if the given Either is a Right; `false` if it is a Left.\n  //.\n  //. ```javascript\n  //. > S.isRight (S.Right (42))\n  //. true\n  //.\n  //. > S.isRight (S.Left ('Cannot divide by zero'))\n  //. false\n  //. ```\n  function isRight(either) {\n    return either.isRight;\n  }\n  _.isRight = {\n    consts: {},\n    types: [$Either (a) (b), $.Boolean],\n    impl: isRight\n  };\n\n  //# fromEither :: b -> Either a b -> b\n  //.\n  //. Takes a default value and an Either, and returns the Right value\n  //. if the Either is a Right; the default value otherwise.\n  //.\n  //. ```javascript\n  //. > S.fromEither (0) (S.Right (42))\n  //. 42\n  //.\n  //. > S.fromEither (0) (S.Left (42))\n  //. 0\n  //. ```\n  function fromEither(x) {\n    return either (K (x)) (I);\n  }\n  _.fromEither = {\n    consts: {},\n    types: [b, $Either (a) (b), b],\n    impl: fromEither\n  };\n\n  //# toEither :: a -> b? -> Either a b\n  //.\n  //. Converts an arbitrary value to an Either: a Left if the value is `null`\n  //. or `undefined`; a Right otherwise. The first argument specifies the\n  //. value of the Left in the \"failure\" case.\n  //.\n  //. ```javascript\n  //. > S.toEither ('XYZ') (null)\n  //. Left ('XYZ')\n  //.\n  //. > S.toEither ('XYZ') ('ABC')\n  //. Right ('ABC')\n  //.\n  //. > S.map (S.prop ('0'))\n  //. .       (S.toEither ('Invalid protocol')\n  //. .                   ('ftp://example.com/'.match (/^https?:/)))\n  //. Left ('Invalid protocol')\n  //.\n  //. > S.map (S.prop ('0'))\n  //. .       (S.toEither ('Invalid protocol')\n  //. .                   ('https://example.com/'.match (/^https?:/)))\n  //. Right ('https:')\n  //. ```\n  function toEither(x) {\n    return function(y) {\n      return y == null ? Left (x) : Right (y);\n    };\n  }\n  _.toEither = {\n    consts: {},\n    types: [a, b, $Either (a) (b)],\n    impl: toEither\n  };\n\n  //# either :: (a -> c) -> (b -> c) -> Either a b -> c\n  //.\n  //. Takes two functions and an Either, and returns the result of\n  //. applying the first function to the Left's value, if the Either\n  //. is a Left, or the result of applying the second function to the\n  //. Right's value, if the Either is a Right.\n  //.\n  //. ```javascript\n  //. > S.either (S.toUpper) (S.show) (S.Left ('Cannot divide by zero'))\n  //. 'CANNOT DIVIDE BY ZERO'\n  //.\n  //. > S.either (S.toUpper) (S.show) (S.Right (42))\n  //. '42'\n  //. ```\n  function either(l) {\n    return function(r) {\n      return function(either) {\n        return (either.isLeft ? l : r) (either.value);\n      };\n    };\n  }\n  _.either = {\n    consts: {},\n    types: [Fn (a) (c), Fn (b) (c), $Either (a) (b), c],\n    impl: either\n  };\n\n  //# lefts :: (Filterable f, Functor f) => f (Either a b) -> f a\n  //.\n  //. Discards each element which is a Right, and unwraps each element which is\n  //. a Left.\n  //.\n  //. See also [`rights`](#rights).\n  //.\n  //. ```javascript\n  //. > S.lefts ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. ['foo', 'bar']\n  //. ```\n  _.lefts = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($Either (a) (b)), f (a)],\n    impl: B (map (value)) (filter (isLeft))\n  };\n\n  //# rights :: (Filterable f, Functor f) => f (Either a b) -> f b\n  //.\n  //. Discards each element which is a Left, and unwraps each element which is\n  //. a Right.\n  //.\n  //. See also [`lefts`](#lefts).\n  //.\n  //. ```javascript\n  //. > S.rights ([S.Right (20), S.Left ('foo'), S.Right (10), S.Left ('bar')])\n  //. [20, 10]\n  //. ```\n  _.rights = {\n    consts: {f: [Z.Filterable, Z.Functor]},\n    types: [f ($Either (a) (b)), f (b)],\n    impl: B (map (value)) (filter (isRight))\n  };\n\n  //# tagBy :: (a -> Boolean) -> a -> Either a a\n  //.\n  //. Takes a predicate and a value, and returns a Right of the value if it\n  //. satisfies the predicate; a Left of the value otherwise.\n  //.\n  //. ```javascript\n  //. > S.tagBy (S.odd) (0)\n  //. Left (0)\n  //\n  //. > S.tagBy (S.odd) (1)\n  //. Right (1)\n  //. ```\n  function tagBy(pred) {\n    return ifElse (pred) (Right) (Left);\n  }\n  _.tagBy = {\n    consts: {},\n    types: [$.Predicate (a), a, $Either (a) (a)],\n    impl: tagBy\n  };\n\n  //# encaseEither :: (Error -> l) -> (a -> r) -> a -> Either l r\n  //.\n  //. Takes two unary functions, `f` and `g`, the second of which may throw,\n  //. and a value `x` of any type. Applies `g` to `x` inside a `try` block.\n  //. If an exception is caught, the return value is a Left containing the\n  //. result of applying `f` to the caught Error object; otherwise the return\n  //. value is a Right containing the result of applying `g` to `x`.\n  //.\n  //. See also [`encase`](#encase).\n  //.\n  //. ```javascript\n  //. > S.encaseEither (S.I) (JSON.parse) ('[\"foo\",\"bar\",\"baz\"]')\n  //. Right (['foo', 'bar', 'baz'])\n  //.\n  //. > S.encaseEither (S.I) (JSON.parse) ('[')\n  //. Left (new SyntaxError ('Unexpected end of JSON input'))\n  //.\n  //. > S.encaseEither (S.prop ('message')) (JSON.parse) ('[')\n  //. Left ('Unexpected end of JSON input')\n  //. ```\n  function encaseEither(f) {\n    return function(g) {\n      return function(x) {\n        try {\n          return Right (g (x));\n        } catch (err) {\n          return Left (f (err));\n        }\n      };\n    };\n  }\n  _.encaseEither = {\n    consts: {},\n    types: [Fn ($.Error) (l), Fn (a) (r), a, $Either (l) (r)],\n    impl: encaseEither\n  };\n\n  //# encaseEither2 :: (Error -> l) -> (a -> b -> r) -> a -> b -> Either l r\n  //.\n  //. Binary version of [`encaseEither`](#encaseEither).\n  function encaseEither2(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          try {\n            return Right (g (x) (y));\n          } catch (err) {\n            return Left (f (err));\n          }\n        };\n      };\n    };\n  }\n  _.encaseEither2 = {\n    consts: {},\n    types: [Fn ($.Error) (l), Fn (a) (Fn (b) (r)), a, b, $Either (l) (r)],\n    impl: encaseEither2\n  };\n\n  //# encaseEither3 :: (Error -> l) -> (a -> b -> c -> r) -> a -> b -> c -> Either l r\n  //.\n  //. Ternary version of [`encaseEither`](#encaseEither).\n  function encaseEither3(f) {\n    return function(g) {\n      return function(x) {\n        return function(y) {\n          return function(z) {\n            try {\n              return Right (g (x) (y) (z));\n            } catch (err) {\n              return Left (f (err));\n            }\n          };\n        };\n      };\n    };\n  }\n  _.encaseEither3 = {\n    consts: {},\n    types: [Fn ($.Error) (l),\n            Fn (a) (Fn (b) (Fn (c) (r))),\n            a,\n            b,\n            c,\n            $Either (l) (r)],\n    impl: encaseEither3\n  };\n\n  //# eitherToMaybe :: Either a b -> Maybe b\n  //.\n  //. Converts an Either to a Maybe. A Left becomes Nothing; a Right becomes\n  //. a Just.\n  //.\n  //. See also [`maybeToEither`](#maybeToEither).\n  //.\n  //. ```javascript\n  //. > S.eitherToMaybe (S.Left ('Cannot divide by zero'))\n  //. Nothing\n  //.\n  //. > S.eitherToMaybe (S.Right (42))\n  //. Just (42)\n  //. ```\n  function eitherToMaybe(either) {\n    return either.isLeft ? Nothing : Just (either.value);\n  }\n  _.eitherToMaybe = {\n    consts: {},\n    types: [$Either (a) (b), $Maybe (b)],\n    impl: eitherToMaybe\n  };\n\n  //. ### Logic\n\n  //# and :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"and\".\n  //.\n  //. ```javascript\n  //. > S.and (false) (false)\n  //. false\n  //.\n  //. > S.and (false) (true)\n  //. false\n  //.\n  //. > S.and (true) (false)\n  //. false\n  //.\n  //. > S.and (true) (true)\n  //. true\n  //. ```\n  function and(x) {\n    return function(y) {\n      return x && y;\n    };\n  }\n  _.and = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: and\n  };\n\n  //# or :: Boolean -> Boolean -> Boolean\n  //.\n  //. Boolean \"or\".\n  //.\n  //. ```javascript\n  //. > S.or (false) (false)\n  //. false\n  //.\n  //. > S.or (false) (true)\n  //. true\n  //.\n  //. > S.or (true) (false)\n  //. true\n  //.\n  //. > S.or (true) (true)\n  //. true\n  //. ```\n  function or(x) {\n    return function(y) {\n      return x || y;\n    };\n  }\n  _.or = {\n    consts: {},\n    types: [$.Boolean, $.Boolean, $.Boolean],\n    impl: or\n  };\n\n  //# not :: Boolean -> Boolean\n  //.\n  //. Boolean \"not\".\n  //.\n  //. See also [`complement`](#complement).\n  //.\n  //. ```javascript\n  //. > S.not (false)\n  //. true\n  //.\n  //. > S.not (true)\n  //. false\n  //. ```\n  function not(x) {\n    return !x;\n  }\n  _.not = {\n    consts: {},\n    types: [$.Boolean, $.Boolean],\n    impl: not\n  };\n\n  //# complement :: (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a unary predicate and a value of any type, and returns the logical\n  //. negation of applying the predicate to the value.\n  //.\n  //. See also [`not`](#not).\n  //.\n  //. ```javascript\n  //. > Number.isInteger (42)\n  //. true\n  //.\n  //. > S.complement (Number.isInteger) (42)\n  //. false\n  //. ```\n  _.complement = {\n    consts: {},\n    types: [$.Predicate (a), a, $.Boolean],\n    impl: B (not)\n  };\n\n  //# ifElse :: (a -> Boolean) -> (a -> b) -> (a -> b) -> a -> b\n  //.\n  //. Takes a unary predicate, a unary \"if\" function, a unary \"else\"\n  //. function, and a value of any type, and returns the result of\n  //. applying the \"if\" function to the value if the value satisfies\n  //. the predicate; the result of applying the \"else\" function to the\n  //. value otherwise.\n  //.\n  //. See also [`when`](#when) and [`unless`](#unless).\n  //.\n  //. ```javascript\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (-1)\n  //. 1\n  //.\n  //. > S.ifElse (x => x < 0) (Math.abs) (Math.sqrt) (16)\n  //. 4\n  //. ```\n  function ifElse(pred) {\n    return function(f) {\n      return function(g) {\n        return function(x) {\n          return (pred (x) ? f : g) (x);\n        };\n      };\n    };\n  }\n  _.ifElse = {\n    consts: {},\n    types: [$.Predicate (a), Fn (a) (b), Fn (a) (b), a, b],\n    impl: ifElse\n  };\n\n  //# when :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. satisfies the predicate; the value otherwise.\n  //.\n  //. See also [`unless`](#unless) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.when (x => x >= 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.when (x => x >= 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function when(pred) {\n    return C (ifElse (pred)) (I);\n  }\n  _.when = {\n    consts: {},\n    types: [$.Predicate (a), Fn (a) (a), a, a],\n    impl: when\n  };\n\n  //# unless :: (a -> Boolean) -> (a -> a) -> a -> a\n  //.\n  //. Takes a unary predicate, a unary function, and a value of any type, and\n  //. returns the result of applying the function to the value if the value\n  //. does not satisfy the predicate; the value otherwise.\n  //.\n  //. See also [`when`](#when) and [`ifElse`](#ifElse).\n  //.\n  //. ```javascript\n  //. > S.unless (x => x < 0) (Math.sqrt) (16)\n  //. 4\n  //.\n  //. > S.unless (x => x < 0) (Math.sqrt) (-1)\n  //. -1\n  //. ```\n  function unless(pred) {\n    return ifElse (pred) (I);\n  }\n  _.unless = {\n    consts: {},\n    types: [$.Predicate (a), Fn (a) (a), a, a],\n    impl: unless\n  };\n\n  //# allPass :: Foldable f => f (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a structure containing zero or more predicates, and a value\n  //. of any type. Returns `true` [iff][] the value satisfies all of the\n  //. predicates. None of the subsequent predicates will be applied after\n  //. the first predicate not satisfied.\n  //.\n  //. ```javascript\n  //. > S.allPass ([S.test (/q/), S.test (/u/), S.test (/i/)]) ('quiessence')\n  //. true\n  //.\n  //. > S.allPass ([S.test (/q/), S.test (/u/), S.test (/i/)]) ('fissiparous')\n  //. false\n  //. ```\n  function allPass(preds) {\n    return function(x) {\n      return Z.reduce (function(b, p) { return b && p (x); }, true, preds);\n    };\n  }\n  _.allPass = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Predicate (a)), a, $.Boolean],\n    impl: allPass\n  };\n\n  //# anyPass :: Foldable f => f (a -> Boolean) -> a -> Boolean\n  //.\n  //. Takes a structure containing zero or more predicates, and a value\n  //. of any type. Returns `true` [iff][] the value satisfies any of the\n  //. predicates. None of the subsequent predicates will be applied after\n  //. the first predicate satisfied.\n  //.\n  //. ```javascript\n  //. > S.anyPass ([S.test (/q/), S.test (/u/), S.test (/i/)]) ('incandescent')\n  //. true\n  //.\n  //. > S.anyPass ([S.test (/q/), S.test (/u/), S.test (/i/)]) ('empathy')\n  //. false\n  //. ```\n  function anyPass(preds) {\n    return function(x) {\n      return Z.reduce (function(b, p) { return b || p (x); }, false, preds);\n    };\n  }\n  _.anyPass = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.Predicate (a)), a, $.Boolean],\n    impl: anyPass\n  };\n\n  //. ### Array\n\n  //# slice :: Integer -> Integer -> Array a -> Maybe (Array a)\n  //.\n  //. Takes a start index `i`, an end index `j`, and an array, and returns\n  //. Just the `[i,j)` slice of the array if possible; Nothing otherwise.\n  //. A negative index represents an offset from the length of the array.\n  //.\n  //. See also [`take`](#take), [`drop`](#drop), [`takeLast`](#takeLast),\n  //. and [`dropLast`](#dropLast).\n  //.\n  //. ```javascript\n  //. > S.slice (1) (3) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['b', 'c'])\n  //.\n  //. > S.slice (-3) (-1) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['c', 'd'])\n  //.\n  //. > S.slice (1) (6) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //. ```\n  function slice(start) {\n    return function(end) {\n      return function(xs) {\n        var fromIdx = start < 0 ? start + xs.length : start;\n        var toIdx = end < 0 ? end + xs.length : end;\n\n        return Math.abs (start) <= xs.length &&\n               Math.abs (end) <= xs.length &&\n               fromIdx <= toIdx ?\n                 Just (xs.slice (fromIdx, toIdx)) :\n                 Nothing;\n      };\n    };\n  }\n  _.slice = {\n    consts: {},\n    types: [$.Integer, $.Integer, $.Array (a), $Maybe ($.Array (a))],\n    impl: slice\n  };\n\n  //# at :: Integer -> Array a -> Maybe a\n  //.\n  //. Returns Just the element of the given array at the specified index if\n  //. the index is within the array's bounds; Nothing otherwise. A negative\n  //. index represents an offset from the length of the array.\n  //.\n  //. ```javascript\n  //. > S.at (2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just ('c')\n  //.\n  //. > S.at (5) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //.\n  //. > S.at (-2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just ('d')\n  //. ```\n  function at(n) {\n    return function(xs) {\n      var idx = n < 0 ? xs.length + n : n;\n      return idx < 0 || idx >= xs.length ? Nothing : Just (xs[idx]);\n    };\n  }\n  _.at = {\n    consts: {},\n    types: [$.Integer, $.Array (a), $Maybe (a)],\n    impl: at\n  };\n\n  //# head :: Array a -> Maybe a\n  //.\n  //. Returns Just the first element of the given array if the array contains\n  //. at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.head ([1, 2, 3])\n  //. Just (1)\n  //.\n  //. > S.head ([])\n  //. Nothing\n  //. ```\n  function head(xs) {\n    return xs.length > 0 ? Just (xs[0]) : Nothing;\n  }\n  _.head = {\n    consts: {},\n    types: [$.Array (a), $Maybe (a)],\n    impl: head\n  };\n\n  //# last :: Array a -> Maybe a\n  //.\n  //. Returns Just the last element of the given array if the array contains\n  //. at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.last ([1, 2, 3])\n  //. Just (3)\n  //.\n  //. > S.last ([])\n  //. Nothing\n  //. ```\n  function last(xs) {\n    return xs.length > 0 ? Just (xs[xs.length - 1]) : Nothing;\n  }\n  _.last = {\n    consts: {},\n    types: [$.Array (a), $Maybe (a)],\n    impl: last\n  };\n\n  //# tail :: Array a -> Maybe (Array a)\n  //.\n  //. Returns Just all but the first of the given array's elements if the\n  //. array contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.tail ([1, 2, 3])\n  //. Just ([2, 3])\n  //.\n  //. > S.tail ([])\n  //. Nothing\n  //. ```\n  function tail(xs) {\n    return xs.length > 0 ? Just (xs.slice (1)) : Nothing;\n  }\n  _.tail = {\n    consts: {},\n    types: [$.Array (a), $Maybe ($.Array (a))],\n    impl: tail\n  };\n\n  //# init :: Array a -> Maybe (Array a)\n  //.\n  //. Returns Just all but the last of the given array's elements if the\n  //. array contains at least one element; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.init ([1, 2, 3])\n  //. Just ([1, 2])\n  //.\n  //. > S.init ([])\n  //. Nothing\n  //. ```\n  function init(xs) {\n    return xs.length > 0 ? Just (xs.slice (0, -1)) : Nothing;\n  }\n  _.init = {\n    consts: {},\n    types: [$.Array (a), $Maybe ($.Array (a))],\n    impl: init\n  };\n\n  //# take :: Integer -> Array a -> Maybe (Array a)\n  //.\n  //. Returns Just the first N elements of the given array if N is greater\n  //. than or equal to zero and less than or equal to the length of the array;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.take (2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['a', 'b'])\n  //.\n  //. > S.take (5) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['a', 'b', 'c', 'd', 'e'])\n  //.\n  //. > S.take (6) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //. ```\n  function take(n) {\n    return function(xs) {\n      return n >= 0 && n <= xs.length ? Just (xs.slice (0, n)) : Nothing;\n    };\n  }\n  _.take = {\n    consts: {},\n    types: [$.Integer, $.Array (a), $Maybe ($.Array (a))],\n    impl: take\n  };\n\n  //# takeLast :: Integer -> Array a -> Maybe (Array a)\n  //.\n  //. Returns Just the last N elements of the given array if N is greater\n  //. than or equal to zero and less than or equal to the length of the array;\n  //. Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.takeLast (2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['d', 'e'])\n  //.\n  //. > S.takeLast (5) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['a', 'b', 'c', 'd', 'e'])\n  //.\n  //. > S.takeLast (6) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //. ```\n  function takeLast(n) {\n    return function(xs) {\n      return n >= 0 && n <= xs.length ? Just (xs.slice (xs.length - n))\n                                      : Nothing;\n    };\n  }\n  _.takeLast = {\n    consts: {},\n    types: [$.Integer, $.Array (a), $Maybe ($.Array (a))],\n    impl: takeLast\n  };\n\n  //# drop :: Integer -> Array a -> Maybe (Array a)\n  //.\n  //. Returns Just all but the first N elements of the given array if N is\n  //. greater than or equal to zero and less than or equal to the length of\n  //. the array; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.drop (2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['c', 'd', 'e'])\n  //.\n  //. > S.drop (5) (['a', 'b', 'c', 'd', 'e'])\n  //. Just ([])\n  //.\n  //. > S.drop (6) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //. ```\n  function drop(n) {\n    return function(xs) {\n      return n >= 0 && n <= xs.length ? Just (xs.slice (n)) : Nothing;\n    };\n  }\n  _.drop = {\n    consts: {},\n    types: [$.Integer, $.Array (a), $Maybe ($.Array (a))],\n    impl: drop\n  };\n\n  //# dropLast :: Integer -> Array a -> Maybe (Array a)\n  //.\n  //. Returns Just all but the last N elements of the given array if N is\n  //. greater than or equal to zero and less than or equal to the length of\n  //. the array; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.dropLast (2) (['a', 'b', 'c', 'd', 'e'])\n  //. Just (['a', 'b', 'c'])\n  //.\n  //. > S.dropLast (5) (['a', 'b', 'c', 'd', 'e'])\n  //. Just ([])\n  //.\n  //. > S.dropLast (6) (['a', 'b', 'c', 'd', 'e'])\n  //. Nothing\n  //. ```\n  function dropLast(n) {\n    return function(xs) {\n      return n >= 0 && n <= xs.length ? Just (xs.slice (0, xs.length - n))\n                                      : Nothing;\n    };\n  }\n  _.dropLast = {\n    consts: {},\n    types: [$.Integer, $.Array (a), $Maybe ($.Array (a))],\n    impl: dropLast\n  };\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.size ([])\n  //. 0\n  //.\n  //. > S.size (['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > S.size (Nil)\n  //. 0\n  //.\n  //. > S.size (Cons ('foo') (Cons ('bar') (Cons ('baz') (Nil))))\n  //. 3\n  //.\n  //. > S.size (S.Nothing)\n  //. 0\n  //.\n  //. > S.size (S.Just ('quux'))\n  //. 1\n  //.\n  //. > S.size (S.Pair ('ignored!') ('counted!'))\n  //. 1\n  //. ```\n  _.size = {\n    consts: {f: [Z.Foldable]},\n    types: [f (a), $.Integer],\n    impl: Z.size\n  };\n\n  //# append :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > S.append (3) ([1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > S.append (3) (Cons (1) (Cons (2) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.append ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.append ([3]) (S.Just ([1, 2]))\n  //. Just ([1, 2, 3])\n  //. ```\n  _.append = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: curry2 (Z.append)\n  };\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => a -> f a -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > S.prepend (1) ([2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > S.prepend (1) (Cons (2) (Cons (3) (Nil)))\n  //. Cons (1) (Cons (2) (Cons (3) (Nil)))\n  //.\n  //. > S.prepend ([1]) (S.Nothing)\n  //. Just ([1])\n  //.\n  //. > S.prepend ([1]) (S.Just ([2, 3]))\n  //. Just ([1, 2, 3])\n  //. ```\n  _.prepend = {\n    consts: {f: [Z.Applicative, Z.Semigroup]},\n    types: [a, f (a), f (a)],\n    impl: curry2 (Z.prepend)\n  };\n\n  //# joinWith :: String -> Array String -> String\n  //.\n  //. Joins the strings of the second argument separated by the first argument.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s) (S.splitOn (s) (t)) = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.joinWith (':') (['foo', 'bar', 'baz'])\n  //. 'foo:bar:baz'\n  //. ```\n  _.joinWith = {\n    consts: {},\n    types: [$.String, $.Array ($.String), $.String],\n    impl: invoke1 ('join')\n  };\n\n  //# elem :: (Setoid a, Foldable f) => a -> f a -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` [iff][] the value is an\n  //. element of the structure.\n  //.\n  //. See also [`find`](#find).\n  //.\n  //. ```javascript\n  //. > S.elem ('c') (['a', 'b', 'c'])\n  //. true\n  //.\n  //. > S.elem ('x') (['a', 'b', 'c'])\n  //. false\n  //.\n  //. > S.elem (3) ({x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > S.elem (8) ({x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > S.elem (0) (S.Just (0))\n  //. true\n  //.\n  //. > S.elem (0) (S.Just (1))\n  //. false\n  //.\n  //. > S.elem (0) (S.Nothing)\n  //. false\n  //. ```\n  _.elem = {\n    consts: {a: [Z.Setoid], f: [Z.Foldable]},\n    types: [a, f (a), $.Boolean],\n    impl: curry2 (Z.elem)\n  };\n\n  //# find :: Foldable f => (a -> Boolean) -> f a -> Maybe a\n  //.\n  //. Takes a predicate and a structure and returns Just the leftmost element\n  //. of the structure which satisfies the predicate; Nothing if there is no\n  //. such element.\n  //.\n  //. See also [`elem`](#elem).\n  //.\n  //. ```javascript\n  //. > S.find (S.lt (0)) ([1, -2, 3, -4, 5])\n  //. Just (-2)\n  //.\n  //. > S.find (S.lt (0)) ([1, 2, 3, 4, 5])\n  //. Nothing\n  //. ```\n  function find(pred) {\n    return function(xs) {\n      return Z.reduce (\n        function(m, x) {\n          return m.isJust ? m : pred (x) ? Just (x) : Nothing;\n        },\n        Nothing,\n        xs\n      );\n    };\n  }\n  _.find = {\n    consts: {f: [Z.Foldable]},\n    types: [$.Predicate (a), f (a), $Maybe (a)],\n    impl: find\n  };\n\n  //# foldMap :: (Monoid m, Foldable f) => TypeRep m -> (a -> m) -> f a -> m\n  //.\n  //. Curried version of [`Z.foldMap`][]. Deconstructs a foldable by mapping\n  //. every element to a monoid and concatenating the results.\n  //.\n  //. ```javascript\n  //. > S.foldMap (String) (f => f.name) ([Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  _.foldMap = {\n    consts: {b: [Z.Monoid], f: [Z.Foldable]},\n    types: [TypeRep (b), Fn (a) (b), f (a), b],\n    impl: curry3 (Z.foldMap)\n  };\n\n  //# unfoldr :: (b -> Maybe (Pair a b)) -> b -> Array a\n  //.\n  //. Takes a function and a seed value, and returns an array generated by\n  //. applying the function repeatedly. The array is initially empty. The\n  //. function is initially applied to the seed value. Each application\n  //. of the function should result in either:\n  //.\n  //.   - Nothing, in which case the array is returned; or\n  //.\n  //.   - Just a pair, in which case the first element is appended to\n  //.     the array and the function is applied to the second element.\n  //.\n  //. ```javascript\n  //. > S.unfoldr (n => n < 5 ? S.Just (S.Pair (n) (n + 1)) : S.Nothing) (1)\n  //. [1, 2, 3, 4]\n  //. ```\n  function unfoldr(f) {\n    return function(x) {\n      var result = [];\n      for (var m = f (x); m.isJust; m = f (m.value.snd)) {\n        result.push (m.value.fst);\n      }\n      return result;\n    };\n  }\n  _.unfoldr = {\n    consts: {},\n    types: [Fn (b) ($Maybe ($Pair (a) (b))), b, $.Array (a)],\n    impl: unfoldr\n  };\n\n  //# range :: Integer -> Integer -> Array Integer\n  //.\n  //. Returns an array of consecutive integers starting with the first argument\n  //. and ending with the second argument minus one. Returns `[]` if the second\n  //. argument is less than or equal to the first argument.\n  //.\n  //. ```javascript\n  //. > S.range (0) (10)\n  //. [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  //.\n  //. > S.range (-5) (0)\n  //. [-5, -4, -3, -2, -1]\n  //.\n  //. > S.range (0) (-5)\n  //. []\n  //. ```\n  function range(from) {\n    return function(to) {\n      var result = [];\n      for (var n = from; n < to; n += 1) result.push (n);\n      return result;\n    };\n  }\n  _.range = {\n    consts: {},\n    types: [$.Integer, $.Integer, $.Array ($.Integer)],\n    impl: range\n  };\n\n  //# groupBy :: (a -> a -> Boolean) -> Array a -> Array (Array a)\n  //.\n  //. Splits its array argument into an array of arrays of equal,\n  //. adjacent elements. Equality is determined by the function\n  //. provided as the first argument. Its behaviour can be surprising\n  //. for functions that aren't reflexive, transitive, and symmetric\n  //. (see [equivalence][] relation).\n  //.\n  //. Properties:\n  //.\n  //.   - `forall f :: a -> a -> Boolean, xs :: Array a.\n  //.      S.join (S.groupBy (f) (xs)) = xs`\n  //.\n  //. ```javascript\n  //. > S.groupBy (S.equals) ([1, 1, 2, 1, 1])\n  //. [[1, 1], [2], [1, 1]]\n  //.\n  //. > S.groupBy (x => y => x + y === 0) ([2, -3, 3, 3, 3, 4, -4, 4])\n  //. [[2], [-3, 3, 3, 3], [4, -4], [4]]\n  //. ```\n  function groupBy(f) {\n    return function(xs) {\n      if (xs.length === 0) return [];\n      var x0 = xs[0];         // :: a\n      var active = [x0];      // :: Array a\n      var result = [active];  // :: Array (Array a)\n      for (var idx = 1; idx < xs.length; idx += 1) {\n        var x = xs[idx];\n        if (f (x0) (x)) active.push (x); else result.push (active = [x0 = x]);\n      }\n      return result;\n    };\n  }\n  _.groupBy = {\n    consts: {},\n    types: [Fn (a) ($.Predicate (a)), $.Array (a), $.Array ($.Array (a))],\n    impl: groupBy\n  };\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. ```javascript\n  //. > S.reverse ([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > S.reverse (Cons (1) (Cons (2) (Cons (3) (Nil))))\n  //. Cons (3) (Cons (2) (Cons (1) (Nil)))\n  //.\n  //. > S.pipe ([S.splitOn (''), S.reverse, S.joinWith ('')]) ('abc')\n  //. 'cba'\n  //. ```\n  _.reverse = {\n    consts: {f: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [f (a), f (a)],\n    impl: Z.reverse\n  };\n\n  //# sort :: (Ord a, Applicative m, Foldable m, Monoid (m a)) => m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] for comparisons.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sort (S.sort (m)) = S.sort (m)` (idempotence)\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > S.sort (['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > S.sort ([S.Left (4), S.Right (3), S.Left (2), S.Right (1)])\n  //. [Left (2), Left (4), Right (1), Right (3)]\n  //. ```\n  _.sort = {\n    consts: {a: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [m (a), m (a)],\n    impl: Z.sort\n  };\n\n  //# sortBy :: (Ord b, Applicative m, Foldable m, Monoid (m a)) => (a -> b) -> m a -> m a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure, using\n  //. [`Z.lte`][] to compare the values produced by applying the given function\n  //. to each element of the structure.\n  //.\n  //. Properties:\n  //.\n  //.   - `S.sortBy (f) (S.sortBy (f) (m)) = S.sortBy (f) (m)` (idempotence)\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > S.sortBy (S.prop ('rank')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 2, suit: 'hearts'},\n  //. . {rank: 5, suit: 'hearts'},\n  //. . {rank: 5, suit: 'spades'},\n  //. . {rank: 7, suit: 'spades'} ]\n  //.\n  //. > S.sortBy (S.prop ('suit')) ([\n  //. .   {rank: 7, suit: 'spades'},\n  //. .   {rank: 5, suit: 'hearts'},\n  //. .   {rank: 2, suit: 'hearts'},\n  //. .   {rank: 5, suit: 'spades'},\n  //. . ])\n  //. [ {rank: 5, suit: 'hearts'},\n  //. . {rank: 2, suit: 'hearts'},\n  //. . {rank: 7, suit: 'spades'},\n  //. . {rank: 5, suit: 'spades'} ]\n  //. ```\n  //.\n  //. If descending order is desired, one may use [`Descending`][]:\n  //.\n  //. ```javascript\n  //. > S.sortBy (Descending) ([83, 97, 110, 99, 116, 117, 97, 114, 121])\n  //. [121, 117, 116, 114, 110, 99, 97, 97, 83]\n  //. ```\n  _.sortBy = {\n    consts: {b: [Z.Ord], m: [Z.Applicative, Z.Foldable, Z.Monoid]},\n    types: [Fn (a) (b), m (a), m (a)],\n    impl: curry2 (Z.sortBy)\n  };\n\n  //# zip :: Array a -> Array b -> Array (Pair a b)\n  //.\n  //. Returns an array of pairs of corresponding elements from the given\n  //. arrays. The length of the resulting array is equal to the length of\n  //. the shorter input array.\n  //.\n  //. See also [`zipWith`](#zipWith).\n  //.\n  //. ```javascript\n  //. > S.zip (['a', 'b']) (['x', 'y', 'z'])\n  //. [Pair ('a') ('x'), Pair ('b') ('y')]\n  //.\n  //. > S.zip ([1, 3, 5]) ([2, 4])\n  //. [Pair (1) (2), Pair (3) (4)]\n  //. ```\n  _.zip = {\n    consts: {},\n    types: [$.Array (a), $.Array (b), $.Array ($Pair (a) (b))],\n    impl: zipWith (Pair)\n  };\n\n  //# zipWith :: (a -> b -> c) -> Array a -> Array b -> Array c\n  //.\n  //. Returns the result of combining, pairwise, the given arrays using the\n  //. given binary function. The length of the resulting array is equal to the\n  //. length of the shorter input array.\n  //.\n  //. See also [`zip`](#zip).\n  //.\n  //. ```javascript\n  //. > S.zipWith (a => b => a + b) (['a', 'b']) (['x', 'y', 'z'])\n  //. ['ax', 'by']\n  //.\n  //. > S.zipWith (a => b => [a, b]) ([1, 3, 5]) ([2, 4])\n  //. [[1, 2], [3, 4]]\n  //. ```\n  function zipWith(f) {\n    return function(xs) {\n      return function(ys) {\n        var result = [];\n        var len = Math.min (xs.length, ys.length);\n        for (var idx = 0; idx < len; idx += 1) {\n          result.push (f (xs[idx]) (ys[idx]));\n        }\n        return result;\n      };\n    };\n  }\n  _.zipWith = {\n    consts: {},\n    types: [Fn (a) (Fn (b) (c)), $.Array (a), $.Array (b), $.Array (c)],\n    impl: zipWith\n  };\n\n  //. ### Object\n\n  //# prop :: String -> a -> b\n  //.\n  //. Takes a property name and an object with known properties and returns\n  //. the value of the specified property. If for some reason the object\n  //. lacks the specified property, a type error is thrown.\n  //.\n  //. For accessing properties of uncertain objects, use [`get`](#get) instead.\n  //.\n  //. ```javascript\n  //. > S.prop ('a') ({a: 1, b: 2})\n  //. 1\n  //. ```\n  function prop(key) {\n    return function(x) {\n      var obj = toObject (x);\n      if (key in obj) return obj[key];\n      throw new TypeError ('‘prop’ expected object to have a property named ' +\n                           '‘' + key + '’; ' + show (x) + ' does not');\n    };\n  }\n  _.prop = {\n    consts: {},\n    types: [$.String, a, b],\n    impl: prop\n  };\n\n  //# props :: Array String -> a -> b\n  //.\n  //. Takes a property path (an array of property names) and an object with\n  //. known structure and returns the value at the given path. If for some\n  //. reason the path does not exist, a type error is thrown.\n  //.\n  //. For accessing property paths of uncertain objects, use [`gets`](#gets)\n  //. instead.\n  //.\n  //. ```javascript\n  //. > S.props (['a', 'b', 'c']) ({a: {b: {c: 1}}})\n  //. 1\n  //. ```\n  function props(path) {\n    return function(x) {\n      return path.reduce (function(x, key) {\n        var obj = toObject (x);\n        if (key in obj) return obj[key];\n        throw new TypeError ('‘props’ expected object to have a property at ' +\n                             show (path) + '; ' + show (x) + ' does not');\n      }, x);\n    };\n  }\n  _.props = {\n    consts: {},\n    types: [$.Array ($.String), a, b],\n    impl: props\n  };\n\n  //# get :: (Any -> Boolean) -> String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property name, and an object and returns Just the\n  //. value of the specified object property if it exists and the value\n  //. satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`gets`](#gets) and [`prop`](#prop).\n  //.\n  //. ```javascript\n  //. > S.get (S.is ($.Number)) ('x') ({x: 1, y: 2})\n  //. Just (1)\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({x: '1', y: '2'})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Number)) ('x') ({})\n  //. Nothing\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3]})\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.get (S.is ($.Array ($.Number))) ('x') ({x: [1, 2, 3, null]})\n  //. Nothing\n  //. ```\n  function get(pred) {\n    return B (B (filter (pred))) (get_);\n  }\n  _.get = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, a, $Maybe (b)],\n    impl: get\n  };\n\n  //# gets :: (Any -> Boolean) -> Array String -> a -> Maybe b\n  //.\n  //. Takes a predicate, a property path (an array of property names), and\n  //. an object and returns Just the value at the given path if such a path\n  //. exists and the value satisfies the given predicate; Nothing otherwise.\n  //.\n  //. See also [`get`](#get).\n  //.\n  //. ```javascript\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: 42}}})\n  //. Just (42)\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({a: {b: {c: '42'}}})\n  //. Nothing\n  //.\n  //. > S.gets (S.is ($.Number)) (['a', 'b', 'c']) ({})\n  //. Nothing\n  //. ```\n  function gets(pred) {\n    return function(keys) {\n      return function(x) {\n        return Z.filter (pred, keys.reduce (function(maybe, key) {\n          return Z.chain (get_ (key), maybe);\n        }, Just (x)));\n      };\n    };\n  }\n  _.gets = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.Array ($.String), a, $Maybe (b)],\n    impl: gets\n  };\n\n  //. ### StrMap\n  //.\n  //. StrMap is an abbreviation of _string map_. A string map is an object,\n  //. such as `{foo: 1, bar: 2, baz: 3}`, whose values are all members of\n  //. the same type. Formally, a value is a member of type `StrMap a` if its\n  //. [type identifier][] is `'Object'` and the values of its enumerable own\n  //. properties are all members of type `a`.\n\n  //# singleton :: String -> a -> StrMap a\n  //.\n  //. Takes a string and a value of any type, and returns a string map with\n  //. a single entry (mapping the key to the value).\n  //.\n  //. ```javascript\n  //. > S.singleton ('foo') (42)\n  //. {foo: 42}\n  //. ```\n  function singleton(key) {\n    return function(val) {\n      var strMap = {};\n      strMap[key] = val;\n      return strMap;\n    };\n  }\n  _.singleton = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a)],\n    impl: singleton\n  };\n\n  //# insert :: String -> a -> StrMap a -> StrMap a\n  //.\n  //. Takes a string, a value of any type, and a string map, and returns a\n  //. string map comprising all the entries of the given string map plus the\n  //. entry specified by the first two arguments (which takes precedence).\n  //.\n  //. Equivalent to Haskell's `insert` function. Similar to Clojure's `assoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.insert ('c') (3) ({a: 1, b: 2})\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.insert ('a') (4) ({a: 1, b: 2})\n  //. {a: 4, b: 2}\n  //. ```\n  function insert(key) {\n    return function(val) {\n      return function(strMap) {\n        return Z.concat (strMap, singleton (key) (val));\n      };\n    };\n  }\n  _.insert = {\n    consts: {},\n    types: [$.String, a, $.StrMap (a), $.StrMap (a)],\n    impl: insert\n  };\n\n  //# remove :: String -> StrMap a -> StrMap a\n  //.\n  //. Takes a string and a string map, and returns a string map comprising all\n  //. the entries of the given string map except the one whose key matches the\n  //. given string (if such a key exists).\n  //.\n  //. Equivalent to Haskell's `delete` function. Similar to Clojure's `dissoc`\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.remove ('c') ({a: 1, b: 2, c: 3})\n  //. {a: 1, b: 2}\n  //.\n  //. > S.remove ('c') ({})\n  //. {}\n  //. ```\n  function remove(key) {\n    return function(strMap) {\n      var result = Z.concat (strMap, {});\n      delete result[key];\n      return result;\n    };\n  }\n  _.remove = {\n    consts: {},\n    types: [$.String, $.StrMap (a), $.StrMap (a)],\n    impl: remove\n  };\n\n  //# keys :: StrMap a -> Array String\n  //.\n  //. Returns the keys of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.keys ({b: 2, c: 3, a: 1}))\n  //. ['a', 'b', 'c']\n  //. ```\n  _.keys = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($.String)],\n    impl: Object.keys\n  };\n\n  //# values :: StrMap a -> Array a\n  //.\n  //. Returns the values of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.values ({a: 1, c: 3, b: 2}))\n  //. [1, 2, 3]\n  //. ```\n  function values(strMap) {\n    return Z.map (function(k) { return strMap[k]; }, Object.keys (strMap));\n  }\n  _.values = {\n    consts: {},\n    types: [$.StrMap (a), $.Array (a)],\n    impl: values\n  };\n\n  //# pairs :: StrMap a -> Array (Pair String a)\n  //.\n  //. Returns the key–value pairs of the given string map, in arbitrary order.\n  //.\n  //. ```javascript\n  //. > S.sort (S.pairs ({b: 2, a: 1, c: 3}))\n  //. [Pair ('a') (1), Pair ('b') (2), Pair ('c') (3)]\n  //. ```\n  function pairs(strMap) {\n    return Z.map (function(k) { return Pair (k) (strMap[k]); },\n                  Object.keys (strMap));\n  }\n  _.pairs = {\n    consts: {},\n    types: [$.StrMap (a), $.Array ($Pair ($.String) (a))],\n    impl: pairs\n  };\n\n  //# fromPairs :: Foldable f => f (Pair String a) -> StrMap a\n  //.\n  //. Returns a string map containing the key–value pairs specified by the\n  //. given [Foldable][]. If a key appears in multiple pairs, the rightmost\n  //. pair takes precedence.\n  //.\n  //. ```javascript\n  //. > S.fromPairs ([S.Pair ('a') (1), S.Pair ('b') (2), S.Pair ('c') (3)])\n  //. {a: 1, b: 2, c: 3}\n  //.\n  //. > S.fromPairs ([S.Pair ('x') (1), S.Pair ('x') (2)])\n  //. {x: 2}\n  //. ```\n  function fromPairs(pairs) {\n    return Z.reduce (function(strMap, pair) {\n      strMap[pair.fst] = pair.snd;\n      return strMap;\n    }, {}, pairs);\n  }\n  _.fromPairs = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($Pair ($.String) (a)), $.StrMap (a)],\n    impl: fromPairs\n  };\n\n  //. ### Number\n\n  //# negate :: ValidNumber -> ValidNumber\n  //.\n  //. Negates its argument.\n  //.\n  //. ```javascript\n  //. > S.negate (12.5)\n  //. -12.5\n  //.\n  //. > S.negate (-42)\n  //. 42\n  //. ```\n  function negate(n) {\n    return -n;\n  }\n  _.negate = {\n    consts: {},\n    types: [$.ValidNumber, $.ValidNumber],\n    impl: negate\n  };\n\n  //# add :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.add (1) (1)\n  //. 2\n  //. ```\n  function add(x) {\n    return function(y) {\n      return x + y;\n    };\n  }\n  _.add = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: add\n  };\n\n  //# sum :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the sum of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.sum ([1, 2, 3, 4, 5])\n  //. 15\n  //.\n  //. > S.sum ([])\n  //. 0\n  //.\n  //. > S.sum (S.Just (42))\n  //. 42\n  //.\n  //. > S.sum (S.Nothing)\n  //. 0\n  //. ```\n  _.sum = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (add) (0)\n  };\n\n  //# sub :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _subtract `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.sub (1)) ([1, 2, 3])\n  //. [0, 1, 2]\n  //. ```\n  function sub(y) {\n    return function(x) {\n      return x - y;\n    };\n  }\n  _.sub = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: sub\n  };\n\n  //# mult :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of two (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mult (4) (2)\n  //. 8\n  //. ```\n  function mult(x) {\n    return function(y) {\n      return x * y;\n    };\n  }\n  _.mult = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: mult\n  };\n\n  //# product :: Foldable f => f FiniteNumber -> FiniteNumber\n  //.\n  //. Returns the product of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.product ([1, 2, 3, 4, 5])\n  //. 120\n  //.\n  //. > S.product ([])\n  //. 1\n  //.\n  //. > S.product (S.Just (42))\n  //. 42\n  //.\n  //. > S.product (S.Nothing)\n  //. 1\n  //. ```\n  _.product = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $.FiniteNumber],\n    impl: reduce (mult) (1)\n  };\n\n  //# div :: NonZeroFiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a non-zero finite number `n` and returns the _divide by `n`_\n  //. function.\n  //.\n  //. ```javascript\n  //. > S.map (S.div (2)) ([0, 1, 2, 3])\n  //. [0, 0.5, 1, 1.5]\n  //. ```\n  function div(y) {\n    return function(x) {\n      return x / y;\n    };\n  }\n  _.div = {\n    consts: {},\n    types: [$.NonZeroFiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: div\n  };\n\n  //# pow :: FiniteNumber -> FiniteNumber -> FiniteNumber\n  //.\n  //. Takes a finite number `n` and returns the _power of `n`_ function.\n  //.\n  //. ```javascript\n  //. > S.map (S.pow (2)) ([-3, -2, -1, 0, 1, 2, 3])\n  //. [9, 4, 1, 0, 1, 4, 9]\n  //.\n  //. > S.map (S.pow (0.5)) ([1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5]\n  //. ```\n  function pow(exp) {\n    return function(base) {\n      return Math.pow (base, exp);\n    };\n  }\n  _.pow = {\n    consts: {},\n    types: [$.FiniteNumber, $.FiniteNumber, $.FiniteNumber],\n    impl: pow\n  };\n\n  //# mean :: Foldable f => f FiniteNumber -> Maybe FiniteNumber\n  //.\n  //. Returns the mean of the given array of (finite) numbers.\n  //.\n  //. ```javascript\n  //. > S.mean ([1, 2, 3, 4, 5])\n  //. Just (3)\n  //.\n  //. > S.mean ([])\n  //. Nothing\n  //.\n  //. > S.mean (S.Just (42))\n  //. Just (42)\n  //.\n  //. > S.mean (S.Nothing)\n  //. Nothing\n  //. ```\n  function mean(foldable) {\n    var result = Z.reduce (\n      function(acc, n) {\n        acc.total += n;\n        acc.count += 1;\n        return acc;\n      },\n      {total: 0, count: 0},\n      foldable\n    );\n    return result.count > 0 ? Just (result.total / result.count) : Nothing;\n  }\n  _.mean = {\n    consts: {f: [Z.Foldable]},\n    types: [f ($.FiniteNumber), $Maybe ($.FiniteNumber)],\n    impl: mean\n  };\n\n  //. ### Integer\n\n  //# even :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is even; `false` if it is odd.\n  //.\n  //. ```javascript\n  //. > S.even (42)\n  //. true\n  //.\n  //. > S.even (99)\n  //. false\n  //. ```\n  function even(n) {\n    return n % 2 === 0;\n  }\n  _.even = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: even\n  };\n\n  //# odd :: Integer -> Boolean\n  //.\n  //. Returns `true` if the given integer is odd; `false` if it is even.\n  //.\n  //. ```javascript\n  //. > S.odd (99)\n  //. true\n  //.\n  //. > S.odd (42)\n  //. false\n  //. ```\n  function odd(n) {\n    return n % 2 !== 0;\n  }\n  _.odd = {\n    consts: {},\n    types: [$.Integer, $.Boolean],\n    impl: odd\n  };\n\n  //. ### Parse\n\n  //# parseDate :: String -> Maybe ValidDate\n  //.\n  //. Takes a string and returns Just the date represented by the string\n  //. if it does in fact represent a date; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseDate ('2011-01-19T17:40:00Z')\n  //. Just (new Date ('2011-01-19T17:40:00.000Z'))\n  //.\n  //. > S.parseDate ('today')\n  //. Nothing\n  //. ```\n  function parseDate(s) {\n    var date = new Date (s);\n    return isNaN (date.valueOf ()) ? Nothing : Just (date);\n  }\n  _.parseDate = {\n    consts: {},\n    types: [$.String, $Maybe ($.ValidDate)],\n    impl: parseDate\n  };\n\n  //  requiredNonCapturingGroup :: Array String -> String\n  function requiredNonCapturingGroup(xs) {\n    return '(?:' + xs.join ('|') + ')';\n  }\n\n  //  optionalNonCapturingGroup :: Array String -> String\n  function optionalNonCapturingGroup(xs) {\n    return requiredNonCapturingGroup (xs) + '?';\n  }\n\n  //  validFloatRepr :: RegExp\n  var validFloatRepr = new RegExp (\n    '^' +                     // start-of-string anchor\n    '\\\\s*' +                  // any number of leading whitespace characters\n    '[+-]?' +                 // optional sign\n    requiredNonCapturingGroup ([\n      'Infinity',             // \"Infinity\"\n      'NaN',                  // \"NaN\"\n      requiredNonCapturingGroup ([\n        '[0-9]+',             // number\n        '[0-9]+[.][0-9]+',    // number with interior decimal point\n        '[0-9]+[.]',          // number with trailing decimal point\n        '[.][0-9]+'           // number with leading decimal point\n      ]) +\n      optionalNonCapturingGroup ([\n        '[Ee]' +              // \"E\" or \"e\"\n        '[+-]?' +             // optional sign\n        '[0-9]+'              // exponent\n      ])\n    ]) +\n    '\\\\s*' +                  // any number of trailing whitespace characters\n    '$'                       // end-of-string anchor\n  );\n\n  //# parseFloat :: String -> Maybe Number\n  //.\n  //. Takes a string and returns Just the number represented by the string\n  //. if it does in fact represent a number; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseFloat ('-123.45')\n  //. Just (-123.45)\n  //.\n  //. > S.parseFloat ('foo.bar')\n  //. Nothing\n  //. ```\n  function parseFloat_(s) {\n    return validFloatRepr.test (s) ? Just (parseFloat (s)) : Nothing;\n  }\n  _.parseFloat = {\n    consts: {},\n    types: [$.String, $Maybe ($.Number)],\n    impl: parseFloat_\n  };\n\n  //  Radix :: Type\n  var Radix = $.NullaryType\n    ('sanctuary/Radix')\n    ('')\n    (function(x) { return $.Integer._test (x) && x >= 2 && x <= 36; });\n\n  //# parseInt :: Radix -> String -> Maybe Integer\n  //.\n  //. Takes a radix (an integer between 2 and 36 inclusive) and a string,\n  //. and returns Just the number represented by the string if it does in\n  //. fact represent a number in the base specified by the radix; Nothing\n  //. otherwise.\n  //.\n  //. This function is stricter than [`parseInt`][parseInt]: a string\n  //. is considered to represent an integer only if all its non-prefix\n  //. characters are members of the character set specified by the radix.\n  //.\n  //. ```javascript\n  //. > S.parseInt (10) ('-42')\n  //. Just (-42)\n  //.\n  //. > S.parseInt (16) ('0xFF')\n  //. Just (255)\n  //.\n  //. > S.parseInt (16) ('0xGG')\n  //. Nothing\n  //. ```\n  function parseInt_(radix) {\n    return function(s) {\n      var charset = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'.slice (0, radix);\n      var pattern = new RegExp ('^[' + charset + ']+$', 'i');\n\n      var t = s.replace (/^[+-]/, '');\n      if (pattern.test (radix === 16 ? t.replace (/^0x/i, '') : t)) {\n        var n = parseInt (s, radix);\n        if ($.Integer._test (n)) return Just (n);\n      }\n      return Nothing;\n    };\n  }\n  _.parseInt = {\n    consts: {},\n    types: [Radix, $.String, $Maybe ($.Integer)],\n    impl: parseInt_\n  };\n\n  //# parseJson :: (Any -> Boolean) -> String -> Maybe a\n  //.\n  //. Takes a predicate and a string which may or may not be valid JSON, and\n  //. returns Just the result of applying `JSON.parse` to the string *if* the\n  //. result satisfies the predicate; Nothing otherwise.\n  //.\n  //. ```javascript\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[\"1\",\"2\",\"3\"]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[0,1.5,3,4.5]')\n  //. Nothing\n  //.\n  //. > S.parseJson (S.is ($.Array ($.Integer))) ('[1,2,3]')\n  //. Just ([1, 2, 3])\n  //. ```\n  function parseJson(pred) {\n    return B (filter (pred)) (encase (JSON.parse));\n  }\n  _.parseJson = {\n    consts: {},\n    types: [$.Predicate ($.Any), $.String, $Maybe (a)],\n    impl: parseJson\n  };\n\n  //. ### RegExp\n\n  //  Match :: Type\n  var Match = $.RecordType ({\n    match: $.String,\n    groups: $.Array ($Maybe ($.String))\n  });\n\n  //  toMatch :: Array String? -> Match\n  function toMatch(ss) {\n    return {match: ss[0], groups: Z.map (toMaybe, ss.slice (1))};\n  }\n\n  //  withRegex :: (RegExp, () -> a) -> a\n  function withRegex(pattern, thunk) {\n    var lastIndex = pattern.lastIndex;\n    var result = thunk ();\n    pattern.lastIndex = lastIndex;\n    return result;\n  }\n\n  //# regex :: RegexFlags -> String -> RegExp\n  //.\n  //. Takes a [RegexFlags][] and a pattern, and returns a RegExp.\n  //.\n  //. ```javascript\n  //. > S.regex ('g') (':\\\\d+:')\n  //. /:\\d+:/g\n  //. ```\n  function regex(flags) {\n    return function(source) {\n      return new RegExp (source, flags);\n    };\n  }\n  _.regex = {\n    consts: {},\n    types: [$.RegexFlags, $.String, $.RegExp],\n    impl: regex\n  };\n\n  //# regexEscape :: String -> String\n  //.\n  //. Takes a string which may contain regular expression metacharacters,\n  //. and returns a string with those metacharacters escaped.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String.\n  //.      S.test (S.regex ('') (S.regexEscape (s))) (s) = true`\n  //.\n  //. ```javascript\n  //. > S.regexEscape ('-=*{XYZ}*=-')\n  //. '\\\\-=\\\\*\\\\{XYZ\\\\}\\\\*=\\\\-'\n  //. ```\n  function regexEscape(s) {\n    return s.replace (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n  }\n  _.regexEscape = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: regexEscape\n  };\n\n  //# test :: RegExp -> String -> Boolean\n  //.\n  //. Takes a pattern and a string, and returns `true` [iff][] the pattern\n  //. matches the string.\n  //.\n  //. ```javascript\n  //. > S.test (/^a/) ('abacus')\n  //. true\n  //.\n  //. > S.test (/^a/) ('banana')\n  //. false\n  //. ```\n  function test(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() { return pattern.test (s); });\n    };\n  }\n  _.test = {\n    consts: {},\n    types: [$.RegExp, $.String, $.Boolean],\n    impl: test\n  };\n\n  //# match :: NonGlobalRegExp -> String -> Maybe { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns Just a match record if the\n  //. pattern matches the string; Nothing otherwise.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall p :: Pattern, s :: String.\n  //.      S.head (S.matchAll (S.regex ('g') (p)) (s))\n  //.      = S.match (S.regex ('') (p)) (s)`\n  //.\n  //. See also [`matchAll`](#matchAll).\n  //.\n  //. ```javascript\n  //. > S.match (/(good)?bye/) ('goodbye')\n  //. Just ({match: 'goodbye', groups: [Just ('good')]})\n  //.\n  //. > S.match (/(good)?bye/) ('bye')\n  //. Just ({match: 'bye', groups: [Nothing]})\n  //. ```\n  function match(pattern) {\n    return function(s) {\n      return Z.map (toMatch, toMaybe (s.match (pattern)));\n    };\n  }\n  _.match = {\n    consts: {},\n    types: [$.NonGlobalRegExp, $.String, $Maybe (Match)],\n    impl: match\n  };\n\n  //# matchAll :: GlobalRegExp -> String -> Array { match :: String, groups :: Array (Maybe String) }\n  //.\n  //. Takes a pattern and a string, and returns an array of match records.\n  //.\n  //. `groups :: Array (Maybe String)` acknowledges the existence of optional\n  //. capturing groups.\n  //.\n  //. See also [`match`](#match).\n  //.\n  //. ```javascript\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, world!')\n  //. []\n  //.\n  //. > S.matchAll (/@([a-z]+)/g) ('Hello, @foo! Hello, @bar! Hello, @baz!')\n  //. [ {match: '@foo', groups: [Just ('foo')]},\n  //. . {match: '@bar', groups: [Just ('bar')]},\n  //. . {match: '@baz', groups: [Just ('baz')]} ]\n  //. ```\n  function matchAll(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        return unfoldr (function(_) {\n          return Z.map (function(ss) {\n            return Pair (toMatch (ss)) (null);\n          }, toMaybe (pattern.exec (s)));\n        }) ([]);\n      });\n    };\n  }\n  _.matchAll = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array (Match)],\n    impl: matchAll\n  };\n\n  //. ### String\n\n  //# toUpper :: String -> String\n  //.\n  //. Returns the upper-case equivalent of its argument.\n  //.\n  //. See also [`toLower`](#toLower).\n  //.\n  //. ```javascript\n  //. > S.toUpper ('ABC def 123')\n  //. 'ABC DEF 123'\n  //. ```\n  _.toUpper = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toUpperCase')\n  };\n\n  //# toLower :: String -> String\n  //.\n  //. Returns the lower-case equivalent of its argument.\n  //.\n  //. See also [`toUpper`](#toUpper).\n  //.\n  //. ```javascript\n  //. > S.toLower ('ABC def 123')\n  //. 'abc def 123'\n  //. ```\n  _.toLower = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('toLowerCase')\n  };\n\n  //# trim :: String -> String\n  //.\n  //. Strips leading and trailing whitespace characters.\n  //.\n  //. ```javascript\n  //. > S.trim ('\\t\\t foo bar \\n')\n  //. 'foo bar'\n  //. ```\n  _.trim = {\n    consts: {},\n    types: [$.String, $.String],\n    impl: invoke0 ('trim')\n  };\n\n  //# stripPrefix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given prefix (the first argument) if the string starts\n  //. with the prefix; Nothing otherwise.\n  //.\n  //. See also [`stripSuffix`](#stripSuffix).\n  //.\n  //. ```javascript\n  //. > S.stripPrefix ('https://') ('https://sanctuary.js.org')\n  //. Just ('sanctuary.js.org')\n  //.\n  //. > S.stripPrefix ('https://') ('http://sanctuary.js.org')\n  //. Nothing\n  //. ```\n  function stripPrefix(prefix) {\n    return function(s) {\n      var idx = prefix.length;\n      return s.slice (0, idx) === prefix ? Just (s.slice (idx)) : Nothing;\n    };\n  }\n  _.stripPrefix = {\n    consts: {},\n    types: [$.String, $.String, $Maybe ($.String)],\n    impl: stripPrefix\n  };\n\n  //# stripSuffix :: String -> String -> Maybe String\n  //.\n  //. Returns Just the portion of the given string (the second argument) left\n  //. after removing the given suffix (the first argument) if the string ends\n  //. with the suffix; Nothing otherwise.\n  //.\n  //. See also [`stripPrefix`](#stripPrefix).\n  //.\n  //. ```javascript\n  //. > S.stripSuffix ('.md') ('README.md')\n  //. Just ('README')\n  //.\n  //. > S.stripSuffix ('.md') ('README')\n  //. Nothing\n  //. ```\n  function stripSuffix(suffix) {\n    return function(s) {\n      var idx = s.length - suffix.length;  // value may be negative\n      return s.slice (idx) === suffix ? Just (s.slice (0, idx)) : Nothing;\n    };\n  }\n  _.stripSuffix = {\n    consts: {},\n    types: [$.String, $.String, $Maybe ($.String)],\n    impl: stripSuffix\n  };\n\n  //# words :: String -> Array String\n  //.\n  //. Takes a string and returns the array of words the string contains\n  //. (words are delimited by whitespace characters).\n  //.\n  //. See also [`unwords`](#unwords).\n  //.\n  //. ```javascript\n  //. > S.words (' foo bar baz ')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function words(s) {\n    var words = s.split (/\\s+/);\n    var len = words.length;\n    return words.slice (words[0] === '' ? 1 : 0,\n                        words[len - 1] === '' ? len - 1 : len);\n  }\n  _.words = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: words\n  };\n\n  //# unwords :: Array String -> String\n  //.\n  //. Takes an array of words and returns the result of joining the words\n  //. with separating spaces.\n  //.\n  //. See also [`words`](#words).\n  //.\n  //. ```javascript\n  //. > S.unwords (['foo', 'bar', 'baz'])\n  //. 'foo bar baz'\n  //. ```\n  _.unwords = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: invoke1 ('join') (' ')\n  };\n\n  //# lines :: String -> Array String\n  //.\n  //. Takes a string and returns the array of lines the string contains\n  //. (lines are delimited by newlines: `'\\n'` or `'\\r\\n'` or `'\\r'`).\n  //. The resulting strings do not contain newlines.\n  //.\n  //. See also [`unlines`](#unlines).\n  //.\n  //. ```javascript\n  //. > S.lines ('foo\\nbar\\nbaz\\n')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function lines(s) {\n    return s === '' ? []\n                    : (s.replace (/\\r\\n?/g, '\\n')).match (/^(?=[\\s\\S]).*/gm);\n  }\n  _.lines = {\n    consts: {},\n    types: [$.String, $.Array ($.String)],\n    impl: lines\n  };\n\n  //# unlines :: Array String -> String\n  //.\n  //. Takes an array of lines and returns the result of joining the lines\n  //. after appending a terminating line feed (`'\\n'`) to each.\n  //.\n  //. See also [`lines`](#lines).\n  //.\n  //. ```javascript\n  //. > S.unlines (['foo', 'bar', 'baz'])\n  //. 'foo\\nbar\\nbaz\\n'\n  //. ```\n  function unlines(xs) {\n    return xs.reduce (function(s, x) { return s + x + '\\n'; }, '');\n  }\n  _.unlines = {\n    consts: {},\n    types: [$.Array ($.String), $.String],\n    impl: unlines\n  };\n\n  //# splitOn :: String -> String -> Array String\n  //.\n  //. Returns the substrings of its second argument separated by occurrences\n  //. of its first argument.\n  //.\n  //. See also [`joinWith`](#joinWith) and [`splitOnRegex`](#splitOnRegex).\n  //.\n  //. ```javascript\n  //. > S.splitOn ('::') ('foo::bar::baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  _.splitOn = {\n    consts: {},\n    types: [$.String, $.String, $.Array ($.String)],\n    impl: invoke1 ('split')\n  };\n\n  //# splitOnRegex :: GlobalRegExp -> String -> Array String\n  //.\n  //. Takes a pattern and a string, and returns the result of splitting the\n  //. string at every non-overlapping occurrence of the pattern.\n  //.\n  //. Properties:\n  //.\n  //.   - `forall s :: String, t :: String.\n  //.      S.joinWith (s)\n  //.                 (S.splitOnRegex (S.regex ('g') (S.regexEscape (s))) (t))\n  //.      = t`\n  //.\n  //. See also [`splitOn`](#splitOn).\n  //.\n  //. ```javascript\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo, bar, baz')\n  //. ['foo', 'bar', 'baz']\n  //.\n  //. > S.splitOnRegex (/[,;][ ]*/g) ('foo;bar;baz')\n  //. ['foo', 'bar', 'baz']\n  //. ```\n  function splitOnRegex(pattern) {\n    return function(s) {\n      return withRegex (pattern, function() {\n        var result = [];\n        var lastIndex = 0;\n        var match;\n        while ((match = pattern.exec (s)) != null) {\n          if (pattern.lastIndex === lastIndex && match[0] === '') {\n            if (pattern.lastIndex === s.length) return result;\n            pattern.lastIndex += 1;\n          } else {\n            result.push (s.slice (lastIndex, match.index));\n            lastIndex = match.index + match[0].length;\n          }\n        }\n        result.push (s.slice (lastIndex));\n        return result;\n      });\n    };\n  }\n  _.splitOnRegex = {\n    consts: {},\n    types: [$.GlobalRegExp, $.String, $.Array ($.String)],\n    impl: splitOnRegex\n  };\n\n  return create ({\n    checkTypes: (\n      /* global process:false */\n      typeof process === 'undefined'\n      || process == null\n      || process.env == null\n      || process.env.NODE_ENV !== 'production'\n    ),\n    env: Z.concat ($.env, [\n      $.FiniteNumber,\n      $.NonZeroFiniteNumber,\n      $Either ($.Unknown) ($.Unknown),\n      Fn ($.Unknown) ($.Unknown),\n      $.GlobalRegExp,\n      $.NonGlobalRegExp,\n      $.Integer,\n      $.NonNegativeInteger,\n      $Maybe ($.Unknown),\n      $.Array2 ($.Unknown) ($.Unknown),\n      $Pair ($.Unknown) ($.Unknown),\n      $.RegexFlags,\n      $.Type,\n      $.TypeClass,\n      $.ValidDate,\n      $.ValidNumber\n    ])\n  });\n\n}));\n\n//. [#438]:                     https://github.com/sanctuary-js/sanctuary/issues/438\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [BinaryType]:               v:sanctuary-js/sanctuary-def#BinaryType\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [Either]:                   #either-type\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [GIGO]:                     https://en.wikipedia.org/wiki/Garbage_in,_garbage_out\n//. [Haskell]:                  https://www.haskell.org/\n//. [Kleisli]:                  https://en.wikipedia.org/wiki/Kleisli_category\n//. [Maybe]:                    #maybe-type\n//. [Nullable]:                 v:sanctuary-js/sanctuary-def#Nullable\n//. [PureScript]:               http://www.purescript.org/\n//. [Ramda]:                    http://ramdajs.com/\n//. [RegexFlags]:               v:sanctuary-js/sanctuary-def#RegexFlags\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [UnaryType]:                v:sanctuary-js/sanctuary-def#UnaryType\n//. [`$.test`]:                 v:sanctuary-js/sanctuary-def#test\n//. [`Descending`]:             v:sanctuary-js/sanctuary-descending#Descending\n//. [`R.__`]:                   http://ramdajs.com/docs/#__\n//. [`R.bind`]:                 http://ramdajs.com/docs/#bind\n//. [`R.invoker`]:              http://ramdajs.com/docs/#invoker\n//. [`Z.alt`]:                  v:sanctuary-js/sanctuary-type-classes#alt\n//. [`Z.ap`]:                   v:sanctuary-js/sanctuary-type-classes#ap\n//. [`Z.apFirst`]:              v:sanctuary-js/sanctuary-type-classes#apFirst\n//. [`Z.apSecond`]:             v:sanctuary-js/sanctuary-type-classes#apSecond\n//. [`Z.bimap`]:                v:sanctuary-js/sanctuary-type-classes#bimap\n//. [`Z.chain`]:                v:sanctuary-js/sanctuary-type-classes#chain\n//. [`Z.chainRec`]:             v:sanctuary-js/sanctuary-type-classes#chainRec\n//. [`Z.compose`]:              v:sanctuary-js/sanctuary-type-classes#compose\n//. [`Z.concat`]:               v:sanctuary-js/sanctuary-type-classes#concat\n//. [`Z.contramap`]:            v:sanctuary-js/sanctuary-type-classes#contramap\n//. [`Z.dropWhile`]:            v:sanctuary-js/sanctuary-type-classes#dropWhile\n//. [`Z.duplicate`]:            v:sanctuary-js/sanctuary-type-classes#duplicate\n//. [`Z.empty`]:                v:sanctuary-js/sanctuary-type-classes#empty\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.extend`]:               v:sanctuary-js/sanctuary-type-classes#extend\n//. [`Z.extract`]:              v:sanctuary-js/sanctuary-type-classes#extract\n//. [`Z.filter`]:               v:sanctuary-js/sanctuary-type-classes#filter\n//. [`Z.flip`]:                 v:sanctuary-js/sanctuary-type-classes#flip\n//. [`Z.foldMap`]:              v:sanctuary-js/sanctuary-type-classes#foldMap\n//. [`Z.gt`]:                   v:sanctuary-js/sanctuary-type-classes#gt\n//. [`Z.gte`]:                  v:sanctuary-js/sanctuary-type-classes#gte\n//. [`Z.id`]:                   v:sanctuary-js/sanctuary-type-classes#id\n//. [`Z.invert`]:               v:sanctuary-js/sanctuary-type-classes#invert\n//. [`Z.join`]:                 v:sanctuary-js/sanctuary-type-classes#join\n//. [`Z.lt`]:                   v:sanctuary-js/sanctuary-type-classes#lt\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [`Z.map`]:                  v:sanctuary-js/sanctuary-type-classes#map\n//. [`Z.mapLeft`]:              v:sanctuary-js/sanctuary-type-classes#mapLeft\n//. [`Z.of`]:                   v:sanctuary-js/sanctuary-type-classes#of\n//. [`Z.promap`]:               v:sanctuary-js/sanctuary-type-classes#promap\n//. [`Z.reject`]:               v:sanctuary-js/sanctuary-type-classes#reject\n//. [`Z.sequence`]:             v:sanctuary-js/sanctuary-type-classes#sequence\n//. [`Z.takeWhile`]:            v:sanctuary-js/sanctuary-type-classes#takeWhile\n//. [`Z.traverse`]:             v:sanctuary-js/sanctuary-type-classes#traverse\n//. [`Z.zero`]:                 v:sanctuary-js/sanctuary-type-classes#zero\n//. [`show`]:                   v:sanctuary-js/sanctuary-show#show\n//. [equivalence]:              https://en.wikipedia.org/wiki/Equivalence_relation\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [parseInt]:                 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\n//. [partial functions]:        https://en.wikipedia.org/wiki/Partial_function\n//. [ramda/ramda#683]:          https://github.com/ramda/ramda/issues/683\n//. [ramda/ramda#1413]:         https://github.com/ramda/ramda/issues/1413\n//. [ramda/ramda#1419]:         https://github.com/ramda/ramda/pull/1419\n//. [sanctuary-def]:            v:sanctuary-js/sanctuary-def\n//. [sanctuary-either]:         v:sanctuary-js/sanctuary-either\n//. [sanctuary-maybe]:          v:sanctuary-js/sanctuary-maybe\n//. [sanctuary-pair]:           v:sanctuary-js/sanctuary-pair\n//. [sanctuary-show]:           v:sanctuary-js/sanctuary-show\n//. [sanctuary-type-classes]:   v:sanctuary-js/sanctuary-type-classes\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [thrush]:                   https://github.com/raganwald-deprecated/homoiconic/blob/master/2008-10-30/thrush.markdown\n//. [total functions]:          https://en.wikipedia.org/wiki/Partial_function#Total_function\n//. [type checking]:            #type-checking\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n//. [variadic functions]:       https://en.wikipedia.org/wiki/Variadic_function\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '9.0.0';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*\n         _______    ___    _________    ___   ___    _______    ______\n        /  ____/\\  /  /\\  /__   ___/\\  /  /\\ /  /\\  /  ____/\\  /  __  \\\n       /  /\\___\\/ /  / /  \\_/  /\\__\\/ /  /_//  / / /  /\\___\\/ /  /\\/  /\\\n      /  ____/\\  /  / /    /  / /    /  ___   / / /  ____/\\  /      _/ /\n     /  /\\___\\/ /  / /    /  / /    /  /\\_/  / / /  /\\___\\/ /  /|  |\\\\/\n    /______/\\  /__/ /    /__/ /    /__/ //__/ / /______/\\  /__/ |__| |\n    \\______\\/  \\__\\/     \\__\\/     \\__\\/ \\__\\/  \\______\\/  \\__\\/ \\__\\|\n                                                                            */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-either\n//.\n//. The Either type represents values with two possibilities: a value of type\n//. `Either a b` is either a Left whose value is of type `a` or a Right whose\n//. value is of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryEither = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var EitherType = $.BinaryType\n        ('sanctuary-either/Either')\n        ('')\n        (function(x) { return type (x) === Either['@@type']; })\n        (function(e) { return e.isLeft ? [e.value] : []; })\n        (function(e) { return e.isLeft ? [] : [e.value]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, EitherType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Either = {};\n\n  var Left$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 true,\n    'isRight':                false,\n    '@@show':                 Left$prototype$show,\n    'fantasy-land/map':       Left$prototype$map,\n    'fantasy-land/bimap':     Left$prototype$bimap,\n    'fantasy-land/ap':        Left$prototype$ap,\n    'fantasy-land/chain':     Left$prototype$chain,\n    'fantasy-land/alt':       Left$prototype$alt,\n    'fantasy-land/reduce':    Left$prototype$reduce,\n    'fantasy-land/traverse':  Left$prototype$traverse,\n    'fantasy-land/extend':    Left$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Right$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Either,\n    'isLeft':                 false,\n    'isRight':                true,\n    '@@show':                 Right$prototype$show,\n    'fantasy-land/map':       Right$prototype$map,\n    'fantasy-land/bimap':     Right$prototype$bimap,\n    'fantasy-land/ap':        Right$prototype$ap,\n    'fantasy-land/chain':     Right$prototype$chain,\n    'fantasy-land/alt':       Right$prototype$alt,\n    'fantasy-land/reduce':    Right$prototype$reduce,\n    'fantasy-land/traverse':  Right$prototype$traverse,\n    'fantasy-land/extend':    Right$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  var inspect =\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect';\n  Left$prototype[inspect] = Left$prototype$show;\n  Right$prototype[inspect] = Right$prototype$show;\n\n  //. `Either a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Right (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Right (['foo'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */               '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Either :: TypeRep Either\n  //.\n  //. Either [type representative][].\n\n  //# Either.Left :: a -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Left ('sqrt undefined for -1')\n  //. Left ('sqrt undefined for -1')\n  //. ```\n  var Left = Either.Left = function(value) {\n    var left = Object.create (Left$prototype);\n    if (Z.Setoid.test (value)) {\n      left['fantasy-land/equals'] = Left$prototype$equals;\n      if (Z.Ord.test (value)) {\n        left['fantasy-land/lte'] = Left$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      left['fantasy-land/concat'] = Left$prototype$concat;\n    }\n    left.value = value;\n    return left;\n  };\n\n  //# Either.Right :: b -> Either a b\n  //.\n  //. Constructs a value of type `Either a b` from a value of type `b`.\n  //.\n  //. ```javascript\n  //. > Right (42)\n  //. Right (42)\n  //. ```\n  var Right = Either.Right = function Right(value) {\n    var right = Object.create (Right$prototype);\n    if (Z.Setoid.test (value)) {\n      right['fantasy-land/equals'] = Right$prototype$equals;\n      if (Z.Ord.test (value)) {\n        right['fantasy-land/lte'] = Right$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      right['fantasy-land/concat'] = Right$prototype$concat;\n    }\n    right.value = value;\n    return right;\n  };\n\n  //# Either.@@type :: String\n  //.\n  //. Either [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Right (42))\n  //. 'sanctuary-either/Either@1'\n  //.\n  //. > type.parse (type (Right (42)))\n  //. {namespace: 'sanctuary-either', name: 'Either', version: 1}\n  //. ```\n  Either['@@type'] = 'sanctuary-either/Either@1';\n\n  //# Either.fantasy-land/of :: b -> Either a b\n  //.\n  //.   - `of (Either) (x)` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Either) (42)\n  //. Right (42)\n  //. ```\n  Either['fantasy-land/of'] = Right;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Either.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Either d c, a) -> Either d b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Left ('!!')\n  //.\n  //. > Z.chainRec (\n  //. .   Either,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Left ('!!') : Right (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Right (65536)\n  //. ```\n  Either['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var either = f (next, done, r.value);\n      if (either.isLeft) return either;\n      r = either.value;\n    }\n    return Right (r.value);\n  };\n\n  //# Either#@@show :: (Showable a, Showable b) => Either a b ~> () -> String\n  //.\n  //.   - `show (Left (x))` is equivalent to `'Left (' + show (x) + ')'`\n  //.   - `show (Right (x))` is equivalent to `'Right (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Left ('sqrt undefined for -1'))\n  //. 'Left (\"sqrt undefined for -1\")'\n  //.\n  //. > show (Right ([1, 2, 3]))\n  //. 'Right ([1, 2, 3])'\n  //. ```\n  function Left$prototype$show() {\n    return 'Left (' + show (this.value) + ')';\n  }\n  function Right$prototype$show() {\n    return 'Right (' + show (this.value) + ')';\n  }\n\n  //# Either#fantasy-land/equals :: (Setoid a, Setoid b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is equal to `Left (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Right (x)` is equal to `Right (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Left (x)` is never equal to `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.equals (Left ([1, 2, 3])) (Left ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Right ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Left ([1, 2, 3])) (Right ([1, 2, 3]))\n  //. false\n  //. ```\n  function Left$prototype$equals(other) {\n    return other.isLeft && Z.equals (this.value, other.value);\n  }\n  function Right$prototype$equals(other) {\n    return other.isRight && Z.equals (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/lte :: (Ord a, Ord b) => Either a b ~> Either a b -> Boolean\n  //.\n  //.   - `Left (x)` is less than or equal to `Left (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Right (x)` is less than or equal to `Right (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Left (x)` is always less than `Right (y)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Left (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1)]\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Right (0), Right (1), Right (2)])\n  //. [Right (0), Right (1)]\n  //.\n  //. > S.filter (S.lte (Left (1))) ([Right (0), Right (1), Right (2)])\n  //. []\n  //.\n  //. > S.filter (S.lte (Right (1))) ([Left (0), Left (1), Left (2)])\n  //. [Left (0), Left (1), Left (2)]\n  //. ```\n  function Left$prototype$lte(other) {\n    return other.isRight || Z.lte (this.value, other.value);\n  }\n  function Right$prototype$lte(other) {\n    return other.isRight && Z.lte (this.value, other.value);\n  }\n\n  //# Either#fantasy-land/concat :: (Semigroup a, Semigroup b) => Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `concat (Left (x)) (Left (y))` is equivalent to\n  //.     `Left (concat (x) (y))`\n  //.   - `concat (Right (x)) (Right (y))` is equivalent to\n  //.     `Right (concat (x) (y))`\n  //.   - `concat (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `concat (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Left ('abc')) (Left ('def'))\n  //. Left ('abcdef')\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Right ([4, 5, 6]))\n  //. Right ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Left ('abc')) (Right ([1, 2, 3]))\n  //. Right ([1, 2, 3])\n  //.\n  //. > S.concat (Right ([1, 2, 3])) (Left ('abc'))\n  //. Right ([1, 2, 3])\n  //. ```\n  function Left$prototype$concat(other) {\n    return other.isLeft ? Left (Z.concat (this.value, other.value)) : other;\n  }\n  function Right$prototype$concat(other) {\n    return other.isRight ? Right (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Either#fantasy-land/map :: Either a b ~> (b -> c) -> Either a c\n  //.\n  //.   - `map (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `map (f) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (S.add (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.map (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$map(f) {\n    return this;\n  }\n  function Right$prototype$map(f) {\n    return Right (f (this.value));\n  }\n\n  //# Either#fantasy-land/bimap :: Either a c ~> (a -> b, c -> d) -> Either b d\n  //.\n  //.   - `bimap (f) (g) (Left (x))` is equivalent to `Left (f (x))`\n  //.   - `bimap (f) (g) (Right (x))` is equivalent to `Right (g (x))`\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (S.add (1)) (Left ('abc'))\n  //. Left ('ABC')\n  //.\n  //. > S.bimap (S.toUpper) (S.add (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$bimap(f, g) {\n    return Left (f (this.value));\n  }\n  function Right$prototype$bimap(f, g) {\n    return Right (g (this.value));\n  }\n\n  //# Either#fantasy-land/ap :: Either a b ~> Either a (b -> c) -> Either a c\n  //.\n  //.   - `ap (Left (x)) (Left (y))` is equivalent to `Left (x)`\n  //.   - `ap (Left (x)) (Right (y))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Left (x))` is equivalent to `Left (x)`\n  //.   - `ap (Right (f)) (Right (x))` is equivalent to `Right (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Left ('div undefined for 0')) (Left ('sqrt undefined for -1'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Left ('div undefined for 0')) (Right (99))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.ap (Right (S.add (1))) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.ap (Right (S.add (1))) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$ap(other) {\n    return other.isLeft ? other : this;\n  }\n  function Right$prototype$ap(other) {\n    return other.isLeft ? other : Right (other.value (this.value));\n  }\n\n  //# Either#fantasy-land/chain :: Either a b ~> (b -> Either a c) -> Either a c\n  //.\n  //.   - `chain (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `chain (f) (Right (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const sqrt = n => n < 0 ? Left ('sqrt undefined for ' + show (n))\n  //. .                         : Right (Math.sqrt (n))\n  //.\n  //. > S.chain (sqrt) (Left ('div undefined for 0'))\n  //. Left ('div undefined for 0')\n  //.\n  //. > S.chain (sqrt) (Right (-1))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.chain (sqrt) (Right (25))\n  //. Right (5)\n  //. ```\n  function Left$prototype$chain(f) {\n    return this;\n  }\n  function Right$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Either#fantasy-land/alt :: Either a b ~> Either a b -> Either a b\n  //.\n  //.   - `alt (Left (x)) (Left (y))` is equivalent to `Left (y)`\n  //.   - `alt (Left (x)) (Right (y))` is equivalent to `Right (y)`\n  //.   - `alt (Right (x)) (Left (y))` is equivalent to `Right (x)`\n  //.   - `alt (Right (x)) (Right (y))` is equivalent to `Right (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Left ('A')) (Left ('B'))\n  //. Left ('B')\n  //.\n  //. > S.alt (Left ('C')) (Right (1))\n  //. Right (1)\n  //.\n  //. > S.alt (Right (2)) (Left ('D'))\n  //. Right (2)\n  //.\n  //. > S.alt (Right (3)) (Right (4))\n  //. Right (3)\n  //. ```\n  function Left$prototype$alt(other) {\n    return other;\n  }\n  function Right$prototype$alt(other) {\n    return this;\n  }\n\n  //# Either#fantasy-land/reduce :: Either a b ~> ((c, b) -> c, c) -> c\n  //.\n  //.   - `reduce (f) (x) (Left (y))` is equivalent to `x`\n  //.   - `reduce (f) (x) (Right (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1]) (Left ('sqrt undefined for -1'))\n  //. [1]\n  //.\n  //. > S.reduce (S.concat) ([1]) (Right ([2]))\n  //. [1, 2]\n  //. ```\n  function Left$prototype$reduce(f, x) {\n    return x;\n  }\n  function Right$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Either#fantasy-land/traverse :: Applicative f => Either a b ~> (TypeRep f, b -> f c) -> f (Either a c)\n  //.\n  //.   - `traverse (A) (f) (Left (x))` is equivalent to `of (A) (Left (x))`\n  //.   - `traverse (A) (f) (Right (x))` is equivalent to `map (Right) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Left ('sqrt undefined for -1'))\n  //. [Left ('sqrt undefined for -1')]\n  //.\n  //. > S.traverse (Array) (S.words) (Right ('foo bar baz'))\n  //. [Right ('foo'), Right ('bar'), Right ('baz')]\n  //. ```\n  function Left$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Right$prototype$traverse(typeRep, f) {\n    return Z.map (Right, f (this.value));\n  }\n\n  //# Either#fantasy-land/extend :: Either a b ~> (Either a b -> c) -> Either a c\n  //.\n  //.   - `extend (f) (Left (x))` is equivalent to `Left (x)`\n  //.   - `extend (f) (Right (x))` is equivalent to `Right (f (Right (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Left ('sqrt undefined for -1'))\n  //. Left ('sqrt undefined for -1')\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Right (99))\n  //. Right (100)\n  //. ```\n  function Left$prototype$extend(f) {\n    return this;\n  }\n  function Right$prototype$extend(f) {\n    return Right (f (this));\n  }\n\n  return Either;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\n//\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\n//\n// Orginal javascript code was by Mauricio Santos\n//\nvar _arrays = require(\"./arrays\");\nexports.arrays = _arrays;\nvar Bag_1 = require(\"./Bag\");\nexports.Bag = Bag_1.default;\nvar BSTree_1 = require(\"./BSTree\");\nexports.BSTree = BSTree_1.default;\nvar BSTreeKV_1 = require(\"./BSTreeKV\");\nexports.BSTreeKV = BSTreeKV_1.default;\nvar Dictionary_1 = require(\"./Dictionary\");\nexports.Dictionary = Dictionary_1.default;\nvar Heap_1 = require(\"./Heap\");\nexports.Heap = Heap_1.default;\nvar LinkedDictionary_1 = require(\"./LinkedDictionary\");\nexports.LinkedDictionary = LinkedDictionary_1.default;\nvar LinkedList_1 = require(\"./LinkedList\");\nexports.LinkedList = LinkedList_1.default;\nvar MultiDictionary_1 = require(\"./MultiDictionary\");\nexports.MultiDictionary = MultiDictionary_1.default;\nvar FactoryDictionary_1 = require(\"./FactoryDictionary\");\nexports.FactoryDictionary = FactoryDictionary_1.default;\nvar FactoryDictionary_2 = require(\"./FactoryDictionary\");\nexports.DefaultDictionary = FactoryDictionary_2.default;\nvar Queue_1 = require(\"./Queue\");\nexports.Queue = Queue_1.default;\nvar PriorityQueue_1 = require(\"./PriorityQueue\");\nexports.PriorityQueue = PriorityQueue_1.default;\nvar Set_1 = require(\"./Set\");\nexports.Set = Set_1.default;\nvar Stack_1 = require(\"./Stack\");\nexports.Stack = Stack_1.default;\nvar MultiRootTree_1 = require(\"./MultiRootTree\");\nexports.MultiRootTree = MultiRootTree_1.default;\nvar _util = require(\"./util\");\nexports.util = _util;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar LinkedList = /** @class */ (function () {\n    /**\n    * Creates an empty Linked List.\n    * @class A linked list is a data structure consisting of a group of nodes\n    * which together represent a sequence.\n    * @constructor\n    */\n    function LinkedList() {\n        /**\n        * First node in the list\n        * @type {Object}\n        * @private\n        */\n        this.firstNode = null;\n        /**\n        * Last node in the list\n        * @type {Object}\n        * @private\n        */\n        this.lastNode = null;\n        /**\n        * Number of elements in the list\n        * @type {number}\n        * @private\n        */\n        this.nElements = 0;\n    }\n    /**\n    * Adds an element to this list.\n    * @param {Object} item element to be added.\n    * @param {number=} index optional index to add the element. If no index is specified\n    * the element is added to the end of this list.\n    * @return {boolean} true if the element was added or false if the index is invalid\n    * or if the element is undefined.\n    */\n    LinkedList.prototype.add = function (item, index) {\n        if (util.isUndefined(index)) {\n            index = this.nElements;\n        }\n        if (index < 0 || index > this.nElements || util.isUndefined(item)) {\n            return false;\n        }\n        var newNode = this.createNode(item);\n        if (this.nElements === 0 || this.lastNode === null) {\n            // First node in the list.\n            this.firstNode = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === this.nElements) {\n            // Insert at the end.\n            this.lastNode.next = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === 0) {\n            // Change first node.\n            newNode.next = this.firstNode;\n            this.firstNode = newNode;\n        }\n        else {\n            var prev = this.nodeAtIndex(index - 1);\n            if (prev == null) {\n                return false;\n            }\n            newNode.next = prev.next;\n            prev.next = newNode;\n        }\n        this.nElements++;\n        return true;\n    };\n    /**\n    * Returns the first element in this list.\n    * @return {*} the first element of the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.first = function () {\n        if (this.firstNode !== null) {\n            return this.firstNode.element;\n        }\n        return undefined;\n    };\n    /**\n    * Returns the last element in this list.\n    * @return {*} the last element in the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.last = function () {\n        if (this.lastNode !== null) {\n            return this.lastNode.element;\n        }\n        return undefined;\n    };\n    /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index desired index.\n     * @return {*} the element at the given index or undefined if the index is\n     * out of bounds.\n     */\n    LinkedList.prototype.elementAtIndex = function (index) {\n        var node = this.nodeAtIndex(index);\n        if (node === null) {\n            return undefined;\n        }\n        return node.element;\n    };\n    /**\n     * Returns the index in this list of the first occurrence of the\n     * specified element, or -1 if the List does not contain this element.\n     * <p>If the elements inside this list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\n     * function used to check if two elements are equal.\n     * @return {number} the index in this list of the first occurrence\n     * of the specified element, or -1 if this list does not contain the\n     * element.\n     */\n    LinkedList.prototype.indexOf = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (util.isUndefined(item)) {\n            return -1;\n        }\n        var currentNode = this.firstNode;\n        var index = 0;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                return index;\n            }\n            index++;\n            currentNode = currentNode.next;\n        }\n        return -1;\n    };\n    /**\n       * Returns true if this list contains the specified element.\n       * <p>If the elements inside the list are\n       * not comparable with the === operator a custom equals function should be\n       * provided to perform searches, the function must receive two arguments and\n       * return true if they are equal, false otherwise. Example:</p>\n       *\n       * <pre>\n       * const petsAreEqualByName = function(pet1, pet2) {\n       *  return pet1.name === pet2.name;\n       * }\n       * </pre>\n       * @param {Object} item element to search for.\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\n       * function used to check if two elements are equal.\n       * @return {boolean} true if this list contains the specified element, false\n       * otherwise.\n       */\n    LinkedList.prototype.contains = function (item, equalsFunction) {\n        return (this.indexOf(item, equalsFunction) >= 0);\n    };\n    /**\n     * Removes the first occurrence of the specified element in this list.\n     * <p>If the elements inside the list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to be removed from this list, if present.\n     * @return {boolean} true if the list contained the specified element.\n     */\n    LinkedList.prototype.remove = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (this.nElements < 1 || util.isUndefined(item)) {\n            return false;\n        }\n        var previous = null;\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                if (previous == null) {\n                    this.firstNode = currentNode.next;\n                    if (currentNode === this.lastNode) {\n                        this.lastNode = null;\n                    }\n                }\n                else if (currentNode === this.lastNode) {\n                    this.lastNode = previous;\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                else {\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                this.nElements--;\n                return true;\n            }\n            previous = currentNode;\n            currentNode = currentNode.next;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this list.\n     */\n    LinkedList.prototype.clear = function () {\n        this.firstNode = null;\n        this.lastNode = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this list is equal to the given list.\n     * Two lists are equal if they have the same elements in the same order.\n     * @param {LinkedList} other the other list.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function used to check if two elements are equal. If the elements in the lists\n     * are custom objects you should provide a function, otherwise\n     * the === operator is used to check equality between elements.\n     * @return {boolean} true if this list is equal to the given list.\n     */\n    LinkedList.prototype.equals = function (other, equalsFunction) {\n        var eqF = equalsFunction || util.defaultEquals;\n        if (!(other instanceof LinkedList)) {\n            return false;\n        }\n        if (this.size() !== other.size()) {\n            return false;\n        }\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\n    };\n    /**\n    * @private\n    */\n    LinkedList.prototype.equalsAux = function (n1, n2, eqF) {\n        while (n1 !== null && n2 !== null) {\n            if (!eqF(n1.element, n2.element)) {\n                return false;\n            }\n            n1 = n1.next;\n            n2 = n2.next;\n        }\n        return true;\n    };\n    /**\n     * Removes the element at the specified position in this list.\n     * @param {number} index given index.\n     * @return {*} removed element or undefined if the index is out of bounds.\n     */\n    LinkedList.prototype.removeElementAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements || this.firstNode === null || this.lastNode === null) {\n            return undefined;\n        }\n        var element;\n        if (this.nElements === 1) {\n            //First node in the list.\n            element = this.firstNode.element;\n            this.firstNode = null;\n            this.lastNode = null;\n        }\n        else {\n            var previous = this.nodeAtIndex(index - 1);\n            if (previous === null) {\n                element = this.firstNode.element;\n                this.firstNode = this.firstNode.next;\n            }\n            else if (previous.next === this.lastNode) {\n                element = this.lastNode.element;\n                this.lastNode = previous;\n            }\n            if (previous !== null && previous.next !== null) {\n                element = previous.next.element;\n                previous.next = previous.next.next;\n            }\n        }\n        this.nElements--;\n        return element;\n    };\n    /**\n     * Executes the provided function once for each element present in this list in order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    LinkedList.prototype.forEach = function (callback) {\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (callback(currentNode.element) === false) {\n                break;\n            }\n            currentNode = currentNode.next;\n        }\n    };\n    /**\n     * Reverses the order of the elements in this linked list (makes the last\n     * element first, and the first element last).\n     */\n    LinkedList.prototype.reverse = function () {\n        var previous = null;\n        var current = this.firstNode;\n        var temp = null;\n        while (current !== null) {\n            temp = current.next;\n            current.next = previous;\n            previous = current;\n            current = temp;\n        }\n        temp = this.firstNode;\n        this.firstNode = this.lastNode;\n        this.lastNode = temp;\n    };\n    /**\n     * Returns an array containing all of the elements in this list in proper\n     * sequence.\n     * @return {Array.<*>} an array containing all of the elements in this list,\n     * in proper sequence.\n     */\n    LinkedList.prototype.toArray = function () {\n        var array = [];\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            array.push(currentNode.element);\n            currentNode = currentNode.next;\n        }\n        return array;\n    };\n    /**\n     * Returns the number of elements in this list.\n     * @return {number} the number of elements in this list.\n     */\n    LinkedList.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this list contains no elements.\n     * @return {boolean} true if this list contains no elements.\n     */\n    LinkedList.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    LinkedList.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.nodeAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements) {\n            return null;\n        }\n        if (index === (this.nElements - 1)) {\n            return this.lastNode;\n        }\n        var node = this.firstNode;\n        for (var i = 0; i < index && node != null; i++) {\n            node = node.next;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.createNode = function (item) {\n        return {\n            element: item,\n            next: null\n        };\n    };\n    return LinkedList;\n}()); // End of linked list\nexports.default = LinkedList;\n//# sourceMappingURL=LinkedList.js.map","export enum WorkerCommands {\n    TICK,\n    RENDER,\n    READY,\n    INIT,\n    WORLD_START,\n    BALL_START,\n    BALL_STOP\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","var rootPosition = { left: 0, top: 0 }\n\nmodule.exports = mouseEventOffset\nfunction mouseEventOffset (ev, target, out) {\n  target = target || ev.currentTarget || ev.srcElement\n  if (!Array.isArray(out)) {\n    out = [ 0, 0 ]\n  }\n  var cx = ev.clientX || 0\n  var cy = ev.clientY || 0\n  var rect = getBoundingClientOffset(target)\n  out[0] = cx - rect.left\n  out[1] = cy - rect.top\n  return out\n}\n\nfunction getBoundingClientOffset (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return rootPosition\n  } else {\n    return element.getBoundingClientRect()\n  }\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dictionary_1 = require(\"./Dictionary\");\nvar util = require(\"./util\");\nvar FactoryDictionary = /** @class */ (function (_super) {\n    __extends(FactoryDictionary, _super);\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>The default factory function should return a new object of the provided\n     * type. Example:</p>\n     * <pre>\n     * function petFactory() {\n     *  return new Pet();\n     * }\n     * </pre>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function():V=} defaultFactoryFunction function used to create a\n     * default object.\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function FactoryDictionary(defaultFactoryFunction, toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.defaultFactoryFunction = defaultFactoryFunction;\n        return _this;\n    }\n    /**\n     * Associates the specified default value with the specified key in this dictionary,\n     * if it didn't contain the key yet. If the key existed, the existing value will be used.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} defaultValue default value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or the default value,\n     * if the key didn't exist yet.\n     */\n    FactoryDictionary.prototype.setDefault = function (key, defaultValue) {\n        var currentValue = _super.prototype.getValue.call(this, key);\n        if (util.isUndefined(currentValue)) {\n            this.setValue(key, defaultValue);\n            return defaultValue;\n        }\n        return currentValue;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns a default value created by the factory passed in the constructor,\n     * if this dictionary contains no mapping for this key. The missing key will\n     * automatically be added to the dictionary.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * a default value if the map contains no mapping for this key.\n     */\n    FactoryDictionary.prototype.getValue = function (key) {\n        return this.setDefault(key, this.defaultFactoryFunction());\n    };\n    return FactoryDictionary;\n}(Dictionary_1.default));\nexports.default = FactoryDictionary;\n//# sourceMappingURL=FactoryDictionary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar Heap = /** @class */ (function () {\n    /**\n     * Creates an empty Heap.\n     * @class\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\n     * each node is smaller than each of its children and therefore a MinHeap\n     * This implementation uses an array to store elements.</p>\n     * <p>If the inserted elements are custom objects a compare function must be provided,\n     *  at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     *\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\n     * reverse compare function to accomplish that behavior. Example:</p>\n     *\n     * <pre>\n     * function reverseCompare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return 1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return -1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function Heap(compareFunction) {\n        /**\n         * Array used to store the elements of the heap.\n         * @type {Array.<Object>}\n         * @private\n         */\n        this.data = [];\n        this.compare = compareFunction || collections.defaultCompare;\n    }\n    /**\n     * Returns the index of the left child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the left child\n     * for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    Heap.prototype.leftChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 1;\n    };\n    /**\n     * Returns the index of the right child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the right child\n     * for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    Heap.prototype.rightChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 2;\n    };\n    /**\n     * Returns the index of the parent of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    Heap.prototype.parentIndex = function (nodeIndex) {\n        return Math.floor((nodeIndex - 1) / 2);\n    };\n    /**\n     * Returns the index of the smaller child node (if it exists).\n     * @param {number} leftChild left child index.\n     * @param {number} rightChild right child index.\n     * @return {number} the index with the minimum value or -1 if it doesn't\n     * exists.\n     * @private\n     */\n    Heap.prototype.minIndex = function (leftChild, rightChild) {\n        if (rightChild >= this.data.length) {\n            if (leftChild >= this.data.length) {\n                return -1;\n            }\n            else {\n                return leftChild;\n            }\n        }\n        else {\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\n                return leftChild;\n            }\n            else {\n                return rightChild;\n            }\n        }\n    };\n    /**\n     * Moves the node at the given index up to its proper place in the heap.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    Heap.prototype.siftUp = function (index) {\n        var parent = this.parentIndex(index);\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\n            arrays.swap(this.data, parent, index);\n            index = parent;\n            parent = this.parentIndex(index);\n        }\n    };\n    /**\n     * Moves the node at the given index down to its proper place in the heap.\n     * @param {number} nodeIndex The index of the node to move down.\n     * @private\n     */\n    Heap.prototype.siftDown = function (nodeIndex) {\n        //smaller child index\n        var min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        while (min >= 0 && this.compare(this.data[nodeIndex], this.data[min]) > 0) {\n            arrays.swap(this.data, min, nodeIndex);\n            nodeIndex = min;\n            min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        }\n    };\n    /**\n     * Retrieves but does not remove the root element of this heap.\n     * @return {*} The value at the root of the heap. Returns undefined if the\n     * heap is empty.\n     */\n    Heap.prototype.peek = function () {\n        if (this.data.length > 0) {\n            return this.data[0];\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Adds the given element into the heap.\n     * @param {*} element the element.\n     * @return true if the element was added or fals if it is undefined.\n     */\n    Heap.prototype.add = function (element) {\n        if (collections.isUndefined(element)) {\n            return false;\n        }\n        this.data.push(element);\n        this.siftUp(this.data.length - 1);\n        return true;\n    };\n    /**\n     * Retrieves and removes the root element of this heap.\n     * @return {*} The value removed from the root of the heap. Returns\n     * undefined if the heap is empty.\n     */\n    Heap.prototype.removeRoot = function () {\n        if (this.data.length > 0) {\n            var obj = this.data[0];\n            this.data[0] = this.data[this.data.length - 1];\n            this.data.splice(this.data.length - 1, 1);\n            if (this.data.length > 0) {\n                this.siftDown(0);\n            }\n            return obj;\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if this heap contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this Heap contains the specified element, false\n     * otherwise.\n     */\n    Heap.prototype.contains = function (element) {\n        var equF = collections.compareToEquals(this.compare);\n        return arrays.contains(this.data, element, equF);\n    };\n    /**\n     * Returns the number of elements in this heap.\n     * @return {number} the number of elements in this heap.\n     */\n    Heap.prototype.size = function () {\n        return this.data.length;\n    };\n    /**\n     * Checks if this heap is empty.\n     * @return {boolean} true if and only if this heap contains no items; false\n     * otherwise.\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.data.length <= 0;\n    };\n    /**\n     * Removes all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.data.length = 0;\n    };\n    /**\n     * Executes the provided function once for each element present in this heap in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Heap.prototype.forEach = function (callback) {\n        arrays.forEach(this.data, callback);\n    };\n    return Heap;\n}());\nexports.default = Heap;\n//# sourceMappingURL=Heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList_1 = require(\"./LinkedList\");\nvar Queue = /** @class */ (function () {\n    /**\n     * Creates an empty queue.\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\n     * element added to the queue will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Queue() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.enqueue = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.add = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Retrieves and removes the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.dequeue = function () {\n        if (this.list.size() !== 0) {\n            var el = this.list.first();\n            this.list.removeElementAtIndex(0);\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.peek = function () {\n        if (this.list.size() !== 0) {\n            return this.list.first();\n        }\n        return undefined;\n    };\n    /**\n     * Returns the number of elements in this queue.\n     * @return {number} the number of elements in this queue.\n     */\n    Queue.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this queue contains the specified element,\n     * false otherwise.\n     */\n    Queue.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this queue is empty.\n     * @return {boolean} true if and only if this queue contains no items; false\n     * otherwise.\n     */\n    Queue.prototype.isEmpty = function () {\n        return this.list.size() <= 0;\n    };\n    /**\n     * Removes all of the elements from this queue.\n     */\n    Queue.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * FIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Queue.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Queue;\n}()); // End of queue\nexports.default = Queue;\n//# sourceMappingURL=Queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Queue_1 = require(\"./Queue\");\n/**\n * General binary search tree implementation.\n *\n * This interface allows one to search elements using a subset of their attributes (thus the\n * tree can be used as an index for complex objects).\n * The attributes required to define an ordering in the tree must be defined in the type K.\n * Any additional attribute must be defined in the type V.\n *\n * @see BSTree\n */\nvar BSTreeKV = /** @class */ (function () {\n    /**\n     * Creates an empty binary search tree.\n     * @class <p>A binary search tree is a binary tree in which each\n     * internal node stores an element such that the elements stored in the\n     * left subtree are less than it and the elements\n     * stored in the right subtree are greater.</p>\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\n     * has the following properties:</p>\n     * <ul>\n     * <li>The left subtree of a node contains only nodes with elements less\n     * than the node's element</li>\n     * <li>The right subtree of a node contains only nodes with elements greater\n     * than the node's element</li>\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\n     * </ul>\n     * <p>If the inserted elements are custom objects a compare function must\n     * be provided at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function BSTreeKV(compareFunction) {\n        this.root = null;\n        this.compare = compareFunction || util.defaultCompare;\n        this.nElements = 0;\n    }\n    /**\n     * Adds the specified element to this tree if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this tree did not already contain the specified element.\n     */\n    BSTreeKV.prototype.add = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        if (this.insertNode(this.createNode(element)) !== null) {\n            this.nElements++;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this tree.\n     */\n    BSTreeKV.prototype.clear = function () {\n        this.root = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this tree contains no elements.\n     * @return {boolean} true if this tree contains no elements.\n     */\n    BSTreeKV.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Returns the number of elements in this tree.\n     * @return {number} the number of elements in this tree.\n     */\n    BSTreeKV.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this tree contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this tree contains the specified element,\n     * false otherwise.\n     */\n    BSTreeKV.prototype.contains = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        return this.searchNode(this.root, element) !== null;\n    };\n    /**\n     * Looks for the value with the provided search key.\n     * @param {Object} element The key to look for\n     * @return {Object} The value found or undefined if it was not found.\n     */\n    BSTreeKV.prototype.search = function (element) {\n        var ret = this.searchNode(this.root, element);\n        if (ret === null) {\n            return undefined;\n        }\n        return ret.element;\n    };\n    /**\n     * Removes the specified element from this tree if it is present.\n     * @return {boolean} true if this tree contained the specified element.\n     */\n    BSTreeKV.prototype.remove = function (element) {\n        var node = this.searchNode(this.root, element);\n        if (node === null) {\n            return false;\n        }\n        this.removeNode(node);\n        this.nElements--;\n        return true;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * in-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.inorderTraversal = function (callback) {\n        this.inorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in pre-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.preorderTraversal = function (callback) {\n        this.preorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in post-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.postorderTraversal = function (callback) {\n        this.postorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * level-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.levelTraversal = function (callback) {\n        this.levelTraversalAux(this.root, callback);\n    };\n    /**\n     * Returns the minimum element of this tree.\n     * @return {*} the minimum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.minimum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.minimumAux(this.root).element;\n    };\n    /**\n     * Returns the maximum element of this tree.\n     * @return {*} the maximum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.maximum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.maximumAux(this.root).element;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in inorder.\n     * Equivalent to inorderTraversal.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    BSTreeKV.prototype.forEach = function (callback) {\n        this.inorderTraversal(callback);\n    };\n    /**\n     * Returns an array containing all of the elements in this tree in in-order.\n     * @return {Array} an array containing all of the elements in this tree in in-order.\n     */\n    BSTreeKV.prototype.toArray = function () {\n        var array = [];\n        this.inorderTraversal(function (element) {\n            array.push(element);\n            return true;\n        });\n        return array;\n    };\n    /**\n     * Returns the height of this tree.\n     * @return {number} the height of this tree or -1 if is empty.\n     */\n    BSTreeKV.prototype.height = function () {\n        return this.heightAux(this.root);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.searchNode = function (node, element) {\n        var cmp = 1;\n        while (node !== null && cmp !== 0) {\n            cmp = this.compare(element, node.element);\n            if (cmp < 0) {\n                node = node.leftCh;\n            }\n            else if (cmp > 0) {\n                node = node.rightCh;\n            }\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.transplant = function (n1, n2) {\n        if (n1.parent === null) {\n            this.root = n2;\n        }\n        else if (n1 === n1.parent.leftCh) {\n            n1.parent.leftCh = n2;\n        }\n        else {\n            n1.parent.rightCh = n2;\n        }\n        if (n2 !== null) {\n            n2.parent = n1.parent;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.removeNode = function (node) {\n        if (node.leftCh === null) {\n            this.transplant(node, node.rightCh);\n        }\n        else if (node.rightCh === null) {\n            this.transplant(node, node.leftCh);\n        }\n        else {\n            var y = this.minimumAux(node.rightCh);\n            if (y.parent !== node) {\n                this.transplant(y, y.rightCh);\n                y.rightCh = node.rightCh;\n                y.rightCh.parent = y;\n            }\n            this.transplant(node, y);\n            y.leftCh = node.leftCh;\n            y.leftCh.parent = y;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.inorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.levelTraversalAux = function (node, callback) {\n        var queue = new Queue_1.default();\n        if (node !== null) {\n            queue.enqueue(node);\n        }\n        node = queue.dequeue() || null;\n        while (node != null) {\n            if (callback(node.element) === false) {\n                return;\n            }\n            if (node.leftCh !== null) {\n                queue.enqueue(node.leftCh);\n            }\n            if (node.rightCh !== null) {\n                queue.enqueue(node.rightCh);\n            }\n            node = queue.dequeue() || null;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.preorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.postorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.rightCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n    };\n    BSTreeKV.prototype.minimumAux = function (node) {\n        while (node != null && node.leftCh !== null) {\n            node = node.leftCh;\n        }\n        return node;\n    };\n    BSTreeKV.prototype.maximumAux = function (node) {\n        while (node != null && node.rightCh !== null) {\n            node = node.rightCh;\n        }\n        return node;\n    };\n    /**\n      * @private\n      */\n    BSTreeKV.prototype.heightAux = function (node) {\n        if (node === null) {\n            return -1;\n        }\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\n    };\n    /*\n    * @private\n    */\n    BSTreeKV.prototype.insertNode = function (node) {\n        var parent = null;\n        var position = this.root;\n        while (position !== null) {\n            var cmp = this.compare(node.element, position.element);\n            if (cmp === 0) {\n                return null;\n            }\n            else if (cmp < 0) {\n                parent = position;\n                position = position.leftCh;\n            }\n            else {\n                parent = position;\n                position = position.rightCh;\n            }\n        }\n        node.parent = parent;\n        if (parent === null) {\n            // tree is empty\n            this.root = node;\n        }\n        else if (this.compare(node.element, parent.element) < 0) {\n            parent.leftCh = node;\n        }\n        else {\n            parent.rightCh = node;\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.createNode = function (element) {\n        return {\n            element: element,\n            leftCh: null,\n            rightCh: null,\n            parent: null\n        };\n    };\n    return BSTreeKV;\n}());\nexports.default = BSTreeKV;\n//# sourceMappingURL=BSTreeKV.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar arrays = require(\"./arrays\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar Set = /** @class */ (function () {\n    /**\n     * Creates an empty set.\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStringFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Set(toStringFunction) {\n        this.dictionary = new Dictionary_1.default(toStringFunction);\n    }\n    /**\n     * Returns true if this set contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this set contains the specified element,\n     * false otherwise.\n     */\n    Set.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n     * Adds the specified element to this set if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this set did not already contain the specified element.\n     */\n    Set.prototype.add = function (element) {\n        if (this.contains(element) || util.isUndefined(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.setValue(element, element);\n            return true;\n        }\n    };\n    /**\n     * Performs an intersecion between this and another set.\n     * Removes all values that are not present this set and the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.intersection = function (otherSet) {\n        var set = this;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                set.remove(element);\n            }\n            return true;\n        });\n    };\n    /**\n     * Performs a union between this and another set.\n     * Adds all values from the given set to this set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.union = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.add(element);\n            return true;\n        });\n    };\n    /**\n     * Performs a difference between this and another set.\n     * Removes from this set all the values that are present in the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.difference = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.remove(element);\n            return true;\n        });\n    };\n    /**\n     * Checks whether the given set contains all the elements in this set.\n     * @param {collections.Set} otherSet other set.\n     * @return {boolean} true if this set is a subset of the given set.\n     */\n    Set.prototype.isSubsetOf = function (otherSet) {\n        if (this.size() > otherSet.size()) {\n            return false;\n        }\n        var isSub = true;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                isSub = false;\n                return false;\n            }\n            return true;\n        });\n        return isSub;\n    };\n    /**\n     * Removes the specified element from this set if it is present.\n     * @return {boolean} true if this set contained the specified element.\n     */\n    Set.prototype.remove = function (element) {\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.remove(element);\n            return true;\n        }\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this set.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one arguments: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Set.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            return callback(v);\n        });\n    };\n    /**\n     * Returns an array containing all of the elements in this set in arbitrary order.\n     * @return {Array} an array containing all of the elements in this set.\n     */\n    Set.prototype.toArray = function () {\n        return this.dictionary.values();\n    };\n    /**\n     * Returns true if this set contains no elements.\n     * @return {boolean} true if this set contains no elements.\n     */\n    Set.prototype.isEmpty = function () {\n        return this.dictionary.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this set.\n     * @return {number} the number of elements in this set.\n     */\n    Set.prototype.size = function () {\n        return this.dictionary.size();\n    };\n    /**\n     * Removes all of the elements from this set.\n     */\n    Set.prototype.clear = function () {\n        this.dictionary.clear();\n    };\n    /*\n    * Provides a string representation for display\n    */\n    Set.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    return Set;\n}()); // end of Set\nexports.default = Set;\n//# sourceMappingURL=Set.js.map","import {StreamSink} from \"sodiumjs\";\n\nexport const sLoadingFinished = new StreamSink<any>();\n","import * as React from \"react\";\n\nexport const RootContext = React.createContext(null);\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","export const Quadratic = (a:number) => (b:number) => (c:number) => {\n    \n    const root_part = Math.sqrt(b * b - 4 * a * c);\n    const denom = 2 * a;\n \n    const root1 = ( -b + root_part ) / denom;\n    const root2 = ( -b - root_part ) / denom;\n\n    return [root1, root2]; \n}\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '9.0.0';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","       /*                   *\\\n      //                     \\\\\n     //   @@  @@     @@  @@   \\\\\n    //      @@       @@  @@    \\\\\n    \\\\      @@       @@  @@    //\n     \\\\   @@  @@  @    @@ @   //\n      \\\\          /       @  //\n       \\*             @@@@  */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-pair\n//.\n//. Pair is the canonical product type: a value of type `Pair a b` always\n//. contains exactly two values: one of type `a`; one of type `b`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryPair = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var PairType = $.BinaryType\n        ('sanctuary-pair/Pair')\n        ('')\n        (function(x) { return type (x) === Pair['@@type']; })\n        (function(p) { return [p.fst]; })\n        (function(p) { return [p.snd]; });\n      var env = Z.concat (S.env,\n                          [$.TypeClass, PairType ($.Unknown) ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Pair,\n    '@@show':                 Pair$prototype$show,\n    'fantasy-land/compose':   Pair$prototype$compose,\n    'fantasy-land/map':       Pair$prototype$map,\n    'fantasy-land/bimap':     Pair$prototype$bimap,\n    'fantasy-land/reduce':    Pair$prototype$reduce,\n    'fantasy-land/traverse':  Pair$prototype$traverse,\n    'fantasy-land/extend':    Pair$prototype$extend,\n    'fantasy-land/extract':   Pair$prototype$extract\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  prototype[\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect'\n  ] = Pair$prototype$show;\n\n  /* istanbul ignore else */\n  if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n    prototype[Symbol.iterator] = function() {\n      return [this.fst, this.snd][Symbol.iterator] ();\n    };\n  }\n\n  //. `Pair a b` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Pair (Useless) (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Pair (['foo']) (['bar'])) ? '\\u2705 * ' :\n  //. .              /* otherwise */                        '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ and ‘b’ satisfy Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ and ‘b’ satisfy Ord\n  //. . 'Semigroupoid    ✅   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ and ‘b’ satisfy Semigroup\n  //. . 'Monoid          ❌   ',\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ❌   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ✅   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Applicative     ❌   ',\n  //. . 'Chain           ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'ChainRec        ❌   ',\n  //. . 'Monad           ❌   ',\n  //. . 'Alt             ❌   ',\n  //. . 'Plus            ❌   ',\n  //. . 'Alternative     ❌   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ✅   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Pair :: a -> b -> Pair a b\n  //.\n  //. Pair's sole data constructor. Additionally, it serves as the\n  //. Pair [type representative][].\n  //.\n  //. ```javascript\n  //. > Pair (1) (2)\n  //. Pair (1) (2)\n  //. ```\n  function Pair(fst) {\n    return function(snd) {\n      var pair = Object.create (prototype);\n      if (Z.Setoid.test (fst) && Z.Setoid.test (snd)) {\n        pair['fantasy-land/equals'] = Pair$prototype$equals;\n        if (Z.Ord.test (fst) && Z.Ord.test (snd)) {\n          pair['fantasy-land/lte'] = Pair$prototype$lte;\n        }\n      }\n      if (Z.Semigroup.test (fst)) {\n        if (Z.Semigroup.test (snd)) {\n          pair['fantasy-land/concat'] = Pair$prototype$concat;\n        }\n        pair['fantasy-land/ap'] = Pair$prototype$ap;\n        pair['fantasy-land/chain'] = Pair$prototype$chain;\n      }\n      pair.fst = fst;\n      pair.snd = snd;\n      return pair;\n    };\n  }\n\n  //# Pair.fst :: Pair a b -> a\n  //.\n  //. `fst (Pair (x) (y))` is equivalent to `x`.\n  //.\n  //. ```javascript\n  //. > Pair.fst (Pair ('abc') ([1, 2, 3]))\n  //. 'abc'\n  //. ```\n  Pair.fst = function(p) { return p.fst; };\n\n  //# Pair.snd :: Pair a b -> b\n  //.\n  //. `snd (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > Pair.snd (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  Pair.snd = function(p) { return p.snd; };\n\n  //# Pair.swap :: Pair a b -> Pair b a\n  //.\n  //. `swap (Pair (x) (y))` is equivalent to `Pair (y) (x)`.\n  //.\n  //. ```javascript\n  //. > Pair.swap (Pair ('abc') ([1, 2, 3]))\n  //. Pair ([1, 2, 3]) ('abc')\n  //. ```\n  Pair.swap = function(p) { return Pair (p.snd) (p.fst); };\n\n  //# Pair.@@type :: String\n  //.\n  //. Pair [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Pair ('abc') ([1, 2, 3]))\n  //. 'sanctuary-pair/Pair@1'\n  //.\n  //. > type.parse (type (Pair ('abc') ([1, 2, 3])))\n  //. {namespace: 'sanctuary-pair', name: 'Pair', version: 1}\n  //. ```\n  Pair['@@type'] = 'sanctuary-pair/Pair@1';\n\n  //# Pair#@@show :: (Showable a, Showable b) => Pair a b ~> () -> String\n  //.\n  //. `show (Pair (x) (y))` is equivalent to\n  //. `'Pair (' + show (x) + ') (' + show (y) + ')'`.\n  //.\n  //. ```javascript\n  //. > show (Pair ('abc') ([1, 2, 3]))\n  //. 'Pair (\"abc\") ([1, 2, 3])'\n  //. ```\n  function Pair$prototype$show() {\n    return 'Pair (' + show (this.fst) + ') (' + show (this.snd) + ')';\n  }\n\n  //# Pair#fantasy-land/equals :: (Setoid a, Setoid b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is equal to `Pair (v) (w)` [iff][] `x` is equal to `v`\n  //. and `y` is equal to `w` according to [`Z.equals`][].\n  //.\n  //. ```javascript\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Pair ('abc') ([1, 2, 3])) (Pair ('abc') ([3, 2, 1]))\n  //. false\n  //. ```\n  function Pair$prototype$equals(other) {\n    return Z.equals (this.fst, other.fst) && Z.equals (this.snd, other.snd);\n  }\n\n  //# Pair#fantasy-land/lte :: (Ord a, Ord b) => Pair a b ~> Pair a b -> Boolean\n  //.\n  //. `Pair (x) (y)` is less than or equal to `Pair (v) (w)` [iff][] `x` is\n  //. less than `v` or `x` is equal to `v` and `y` is less than or equal to\n  //. `w` according to [`Z.lte`][].\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Pair ('b') (2)))\n  //. .          ([Pair ('a') (1), Pair ('a') (2), Pair ('a') (3),\n  //. .            Pair ('b') (1), Pair ('b') (2), Pair ('b') (3),\n  //. .            Pair ('c') (1), Pair ('c') (2), Pair ('c') (3)])\n  //. [ Pair ('a') (1),\n  //. . Pair ('a') (2),\n  //. . Pair ('a') (3),\n  //. . Pair ('b') (1),\n  //. . Pair ('b') (2) ]\n  //. ```\n  function Pair$prototype$lte(other) {\n    return Z.equals (this.fst, other.fst) ? Z.lte (this.snd, other.snd)\n                                          : Z.lte (this.fst, other.fst);\n  }\n\n  //# Pair#fantasy-land/compose :: Pair a b ~> Pair b c -> Pair a c\n  //.\n  //. `compose (Pair (x) (y)) (Pair (v) (w))` is equivalent to `Pair (v) (y)`.\n  //.\n  //. ```javascript\n  //. > S.compose (Pair ('a') (0)) (Pair ([1, 2, 3]) ('b'))\n  //. Pair ([1, 2, 3]) (0)\n  //. ```\n  function Pair$prototype$compose(other) {\n    return Pair (this.fst) (other.snd);\n  }\n\n  //# Pair#fantasy-land/concat :: (Semigroup a, Semigroup b) => Pair a b ~> Pair a b -> Pair a b\n  //.\n  //. `concat (Pair (x) (y)) (Pair (v) (w))` is equivalent to\n  //. `Pair (concat (x) (v)) (concat (y) (w))`.\n  //.\n  //. ```javascript\n  //. > S.concat (Pair ('abc') ([1, 2, 3])) (Pair ('xyz') ([4, 5, 6]))\n  //. Pair ('abcxyz') ([1, 2, 3, 4, 5, 6])\n  //. ```\n  function Pair$prototype$concat(other) {\n    return Pair (Z.concat (this.fst, other.fst))\n                (Z.concat (this.snd, other.snd));\n  }\n\n  //# Pair#fantasy-land/map :: Pair a b ~> (b -> c) -> Pair a c\n  //.\n  //. `map (f) (Pair (x) (y))` is equivalent to `Pair (x) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('abc') (16)\n  //. ```\n  function Pair$prototype$map(f) {\n    return Pair (this.fst) (f (this.snd));\n  }\n\n  //# Pair#fantasy-land/bimap :: Pair a c ~> (a -> b, c -> d) -> Pair b d\n  //.\n  //. `bimap (f) (g) (Pair (x) (y))` is equivalent to `Pair (f (x)) (g (y))`.\n  //.\n  //. ```javascript\n  //. > S.bimap (S.toUpper) (Math.sqrt) (Pair ('abc') (256))\n  //. Pair ('ABC') (16)\n  //. ```\n  function Pair$prototype$bimap(f, g) {\n    return Pair (f (this.fst)) (g (this.snd));\n  }\n\n  //# Pair#fantasy-land/ap :: Semigroup a => Pair a b ~> Pair a (b -> c) -> Pair a c\n  //.\n  //. `ap (Pair (v) (f)) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (v) (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.ap (Pair ('abc') (Math.sqrt)) (Pair ('xyz') (256))\n  //. Pair ('abcxyz') (16)\n  //. ```\n  function Pair$prototype$ap(other) {\n    return Pair (Z.concat (other.fst, this.fst)) (other.snd (this.snd));\n  }\n\n  //# Pair#fantasy-land/chain :: Semigroup a => Pair a b ~> (b -> Pair a c) -> Pair a c\n  //.\n  //. `chain (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (concat (x) (fst (f (y)))) (snd (f (y)))`.\n  //.\n  //. ```javascript\n  //. > S.chain (n => Pair (show (n)) (Math.sqrt (n))) (Pair ('abc') (256))\n  //. Pair ('abc256') (16)\n  //. ```\n  function Pair$prototype$chain(f) {\n    var other = f (this.snd);\n    return Pair (Z.concat (this.fst, other.fst)) (other.snd);\n  }\n\n  //# Pair#fantasy-land/reduce :: Pair a b ~> ((c, b) -> c, c) -> c\n  //.\n  //. `reduce (f) (x) (Pair (v) (w))` is equivalent to `f (x) (w)`.\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ([1, 2, 3]) (Pair ('abc') ([4, 5, 6]))\n  //. [1, 2, 3, 4, 5, 6]\n  //. ```\n  function Pair$prototype$reduce(f, x) {\n    return f (x, this.snd);\n  }\n\n  //# Pair#fantasy-land/traverse :: Applicative f => Pair a b ~> (TypeRep f, b -> f c) -> f (Pair a c)\n  //.\n  //. `traverse (_) (f) (Pair (x) (y))` is equivalent to\n  //. `map (Pair (x)) (f (y))`.\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Pair (123) ('foo bar baz'))\n  //. [Pair (123) ('foo'), Pair (123) ('bar'), Pair (123) ('baz')]\n  //. ```\n  function Pair$prototype$traverse(typeRep, f) {\n    return Z.map (Pair (this.fst), f (this.snd));\n  }\n\n  //# Pair#fantasy-land/extend :: Pair a b ~> (Pair a b -> c) -> Pair a c\n  //.\n  //. `extend (f) (Pair (x) (y))` is equivalent to\n  //. `Pair (x) (f (Pair (x) (y)))`.\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Pair ('abc') (99))\n  //. Pair ('abc') (100)\n  //. ```\n  function Pair$prototype$extend(f) {\n    return Pair (this.fst) (f (this));\n  }\n\n  //# Pair#fantasy-land/extract :: Pair a b ~> () -> b\n  //.\n  //. `extract (Pair (x) (y))` is equivalent to `y`.\n  //.\n  //. ```javascript\n  //. > S.extract (Pair ('abc') ([1, 2, 3]))\n  //. [1, 2, 3]\n  //. ```\n  function Pair$prototype$extract() {\n    return this.snd;\n  }\n\n  return Pair;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '9.0.0';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*\n    ,______  ______,  ,________,,_____,,_____,,__________  ,__________,\n    |      \\/      |  |        ||     ||     ||          \\ |          |\n    |_,          ,_|  |_      _||_    ||    _||_,   __    ||_,   _____|\n      |   \\  /   |     /      \\   \\   \\/   /    |        /   |      |\n    ,_|    ||    |_,,_/   /\\   \\_, \\      /   ,_|   __   \\ ,_|   ___|_,\n    |      ||      ||     ||     |  |    |    |           ||          |\n    |______||______||_____||_____|  |____|    |__________/ |__________|\n                                                                         */\n\n//. <a href=\"https://github.com/fantasyland/fantasy-land\"><img alt=\"Fantasy Land\" src=\"https://raw.githubusercontent.com/fantasyland/fantasy-land/master/logo.png\" width=\"75\" height=\"75\" align=\"left\"></a>\n//.\n//. # sanctuary-maybe\n//.\n//. The Maybe type represents optional values: a value of type `Maybe a` is\n//. either Nothing (the empty value) or a Just whose value is of type `a`.\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-show', 'sanctuary-type-classes'], f);\n  } else {\n    self.sanctuaryMaybe = f (self.sanctuaryShow, self.sanctuaryTypeClasses);\n  }\n\n} (function(show, Z) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    var $ = __doctest.require ('sanctuary-def');\n    var type = __doctest.require ('sanctuary-type-identifiers');\n    var S = (function() {\n      var S = __doctest.require ('sanctuary');\n      var MaybeType = $.UnaryType\n        ('sanctuary-maybe/Maybe')\n        ('')\n        (function(x) { return type (x) === Maybe['@@type']; })\n        (function(m) { return m.isJust ? [m.value] : []; });\n      var env = Z.concat (S.env, [$.TypeClass, MaybeType ($.Unknown)]);\n      return S.create ({checkTypes: true, env: env});\n    } ());\n  }\n\n  var Maybe = {};\n\n  var Nothing$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              true,\n    'isJust':                 false,\n    '@@show':                 Nothing$prototype$show,\n    'fantasy-land/equals':    Nothing$prototype$equals,\n    'fantasy-land/lte':       Nothing$prototype$lte,\n    'fantasy-land/concat':    Nothing$prototype$concat,\n    'fantasy-land/filter':    Nothing$prototype$filter,\n    'fantasy-land/map':       Nothing$prototype$map,\n    'fantasy-land/ap':        Nothing$prototype$ap,\n    'fantasy-land/chain':     Nothing$prototype$chain,\n    'fantasy-land/alt':       Nothing$prototype$alt,\n    'fantasy-land/reduce':    Nothing$prototype$reduce,\n    'fantasy-land/traverse':  Nothing$prototype$traverse,\n    'fantasy-land/extend':    Nothing$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var Just$prototype = {\n    /* eslint-disable key-spacing */\n    'constructor':            Maybe,\n    'isNothing':              false,\n    'isJust':                 true,\n    '@@show':                 Just$prototype$show,\n    'fantasy-land/filter':    Just$prototype$filter,\n    'fantasy-land/map':       Just$prototype$map,\n    'fantasy-land/ap':        Just$prototype$ap,\n    'fantasy-land/chain':     Just$prototype$chain,\n    'fantasy-land/alt':       Just$prototype$alt,\n    'fantasy-land/reduce':    Just$prototype$reduce,\n    'fantasy-land/traverse':  Just$prototype$traverse,\n    'fantasy-land/extend':    Just$prototype$extend\n    /* eslint-enable key-spacing */\n  };\n\n  var util =\n    typeof module === 'object' && typeof module.exports === 'object' ?\n    require ('util') :\n    /* istanbul ignore next */ {};\n  var inspect =\n    util.inspect != null && typeof util.inspect.custom === 'symbol' ?\n    /* istanbul ignore next */ util.inspect.custom :\n    /* istanbul ignore next */ 'inspect';\n  Nothing$prototype[inspect] = Nothing$prototype$show;\n  Just$prototype[inspect] = Just$prototype$show;\n\n  //. `Maybe a` satisfies the following [Fantasy Land][] specifications:\n  //.\n  //. ```javascript\n  //. > const Useless = require ('sanctuary-useless')\n  //.\n  //. > S.map (k => k + ' '.repeat (16 - k.length) +\n  //. .             (Z[k].test (Just (Useless)) ? '\\u2705   ' :\n  //. .              Z[k].test (Nothing)        ? '\\u2705 * ' :\n  //. .              /* otherwise */              '\\u274C   '))\n  //. .       (S.keys (Z.filter ($.test ([]) ($.TypeClass), Z)))\n  //. [ 'Setoid          ✅ * ',  // if ‘a’ satisfies Setoid\n  //. . 'Ord             ✅ * ',  // if ‘a’ satisfies Ord\n  //. . 'Semigroupoid    ❌   ',\n  //. . 'Category        ❌   ',\n  //. . 'Semigroup       ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Monoid          ✅ * ',  // if ‘a’ satisfies Semigroup\n  //. . 'Group           ❌   ',\n  //. . 'Filterable      ✅   ',\n  //. . 'Functor         ✅   ',\n  //. . 'Bifunctor       ❌   ',\n  //. . 'Profunctor      ❌   ',\n  //. . 'Apply           ✅   ',\n  //. . 'Applicative     ✅   ',\n  //. . 'Chain           ✅   ',\n  //. . 'ChainRec        ✅   ',\n  //. . 'Monad           ✅   ',\n  //. . 'Alt             ✅   ',\n  //. . 'Plus            ✅   ',\n  //. . 'Alternative     ✅   ',\n  //. . 'Foldable        ✅   ',\n  //. . 'Traversable     ✅   ',\n  //. . 'Extend          ✅   ',\n  //. . 'Comonad         ❌   ',\n  //. . 'Contravariant   ❌   ' ]\n  //. ```\n\n  //# Maybe :: TypeRep Maybe\n  //.\n  //. Maybe [type representative][].\n\n  //# Maybe.Nothing :: Maybe a\n  //.\n  //. The empty value of type `Maybe a`.\n  //.\n  //. ```javascript\n  //. > Nothing\n  //. Nothing\n  //. ```\n  var Nothing = Maybe.Nothing = Object.create (Nothing$prototype);\n\n  //# Maybe.Just :: a -> Maybe a\n  //.\n  //. Constructs a value of type `Maybe a` from a value of type `a`.\n  //.\n  //. ```javascript\n  //. > Just (42)\n  //. Just (42)\n  //. ```\n  var Just = Maybe.Just = function(value) {\n    var just = Object.create (Just$prototype);\n    if (Z.Setoid.test (value)) {\n      just['fantasy-land/equals'] = Just$prototype$equals;\n      if (Z.Ord.test (value)) {\n        just['fantasy-land/lte'] = Just$prototype$lte;\n      }\n    }\n    if (Z.Semigroup.test (value)) {\n      just['fantasy-land/concat'] = Just$prototype$concat;\n    }\n    just.value = value;\n    return just;\n  };\n\n  //# Maybe.@@type :: String\n  //.\n  //. Maybe [type identifier][].\n  //.\n  //. ```javascript\n  //. > type (Just (42))\n  //. 'sanctuary-maybe/Maybe@1'\n  //.\n  //. > type.parse (type (Just (42)))\n  //. {namespace: 'sanctuary-maybe', name: 'Maybe', version: 1}\n  //. ```\n  Maybe['@@type'] = 'sanctuary-maybe/Maybe@1';\n\n  //# Maybe.fantasy-land/empty :: () -> Maybe a\n  //.\n  //.   - `empty (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.empty (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/empty'] = function() { return Nothing; };\n\n  //# Maybe.fantasy-land/of :: a -> Maybe a\n  //.\n  //.   - `of (Maybe) (x)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.of (Maybe) (42)\n  //. Just (42)\n  //. ```\n  Maybe['fantasy-land/of'] = Just;\n\n  function next(x) { return {tag: next, value: x}; }\n  function done(x) { return {tag: done, value: x}; }\n\n  //# Maybe.fantasy-land/chainRec :: ((a -> c, b -> c, a) -> Maybe c, a) -> Maybe b\n  //.\n  //. ```javascript\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   1\n  //. . )\n  //. Nothing\n  //.\n  //. > Z.chainRec (\n  //. .   Maybe,\n  //. .   (next, done, x) =>\n  //. .     x <= 1 ? Nothing : Just (x >= 1000 ? done (x) : next (x * x)),\n  //. .   2\n  //. . )\n  //. Just (65536)\n  //. ```\n  Maybe['fantasy-land/chainRec'] = function(f, x) {\n    var r = next (x);\n    while (r.tag === next) {\n      var maybe = f (next, done, r.value);\n      if (maybe.isNothing) return maybe;\n      r = maybe.value;\n    }\n    return Just (r.value);\n  };\n\n  //# Maybe.fantasy-land/zero :: () -> Maybe a\n  //.\n  //.   - `zero (Maybe)` is equivalent to `Nothing`\n  //.\n  //. ```javascript\n  //. > S.zero (Maybe)\n  //. Nothing\n  //. ```\n  Maybe['fantasy-land/zero'] = function() { return Nothing; };\n\n  //# Maybe#@@show :: Showable a => Maybe a ~> () -> String\n  //.\n  //.   - `show (Nothing)` is equivalent to `'Nothing'`\n  //.   - `show (Just (x))` is equivalent to `'Just (' + show (x) + ')'`\n  //.\n  //. ```javascript\n  //. > show (Nothing)\n  //. 'Nothing'\n  //.\n  //. > show (Just (['foo', 'bar', 'baz']))\n  //. 'Just ([\"foo\", \"bar\", \"baz\"])'\n  //. ```\n  function Nothing$prototype$show() {\n    return 'Nothing';\n  }\n  function Just$prototype$show() {\n    return 'Just (' + show (this.value) + ')';\n  }\n\n  //# Maybe#fantasy-land/equals :: Setoid a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is equal to `Nothing`\n  //.   - `Just (x)` is equal to `Just (y)` [iff][] `x` is equal to `y`\n  //.     according to [`Z.equals`][]\n  //.   - `Nothing` is never equal to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.equals (Nothing) (Nothing)\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([1, 2, 3]))\n  //. true\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Just ([3, 2, 1]))\n  //. false\n  //.\n  //. > S.equals (Just ([1, 2, 3])) (Nothing)\n  //. false\n  //. ```\n  function Nothing$prototype$equals(other) {\n    return other.isNothing;\n  }\n  function Just$prototype$equals(other) {\n    return other.isJust && Z.equals (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/lte :: Ord a => Maybe a ~> Maybe a -> Boolean\n  //.\n  //.   - `Nothing` is (less than or) equal to `Nothing`\n  //.   - `Just (x)` is less than or equal to `Just (y)` [iff][] `x` is less\n  //.     than or equal to `y` according to [`Z.lte`][]\n  //.   - `Nothing` is always less than `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.filter (S.lte (Nothing)) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing]\n  //.\n  //. > S.filter (S.lte (Just (1))) ([Nothing, Just (0), Just (1), Just (2)])\n  //. [Nothing, Just (0), Just (1)]\n  //. ```\n  function Nothing$prototype$lte(other) {\n    return true;\n  }\n  function Just$prototype$lte(other) {\n    return other.isJust && Z.lte (this.value, other.value);\n  }\n\n  //# Maybe#fantasy-land/concat :: Semigroup a => Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `concat (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `concat (Just (x)) (Just (y))` is equivalent to\n  //.     `Just (concat (x) (y))`\n  //.   - `concat (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `concat (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.concat (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Just ([4, 5, 6]))\n  //. Just ([1, 2, 3, 4, 5, 6])\n  //.\n  //. > S.concat (Nothing) (Just ([1, 2, 3]))\n  //. Just ([1, 2, 3])\n  //.\n  //. > S.concat (Just ([1, 2, 3])) (Nothing)\n  //. Just ([1, 2, 3])\n  //. ```\n  function Nothing$prototype$concat(other) {\n    return other;\n  }\n  function Just$prototype$concat(other) {\n    return other.isJust ? Just (Z.concat (this.value, other.value)) : this;\n  }\n\n  //# Maybe#fantasy-land/filter :: Maybe a ~> (a -> Boolean) -> Maybe a\n  //.\n  //.   - `filterM (p) (Nothing)` is equivalent to `Nothing`\n  //.   - `filterM (p) (Just (x))` is equivalent to\n  //.     `p (x) ? Just (x) : Nothing`\n  //.\n  //. ```javascript\n  //. > S.filterM (isFinite) (Nothing)\n  //. Nothing\n  //.\n  //. > S.filterM (isFinite) (Just (Infinity))\n  //. Nothing\n  //.\n  //. > S.filterM (isFinite) (Just (Number.MAX_SAFE_INTEGER))\n  //. Just (9007199254740991)\n  //. ```\n  function Nothing$prototype$filter(pred) {\n    return this;\n  }\n  function Just$prototype$filter(pred) {\n    return pred (this.value) ? this : Nothing;\n  }\n\n  //# Maybe#fantasy-land/map :: Maybe a ~> (a -> b) -> Maybe b\n  //.\n  //.   - `map (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `map (f) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.map (Math.sqrt) (Nothing)\n  //. Nothing\n  //.\n  //. > S.map (Math.sqrt) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$map(f) {\n    return this;\n  }\n  function Just$prototype$map(f) {\n    return Just (f (this.value));\n  }\n\n  //# Maybe#fantasy-land/ap :: Maybe a ~> Maybe (a -> b) -> Maybe b\n  //.\n  //.   - `ap (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Nothing) (Just (x))` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Nothing)` is equivalent to `Nothing`\n  //.   - `ap (Just (f)) (Just (x))` is equivalent to `Just (f (x))`\n  //.\n  //. ```javascript\n  //. > S.ap (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Nothing) (Just (9))\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.ap (Just (Math.sqrt)) (Just (9))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$ap(other) {\n    return this;\n  }\n  function Just$prototype$ap(other) {\n    return other.isJust ? Just (other.value (this.value)) : other;\n  }\n\n  //# Maybe#fantasy-land/chain :: Maybe a ~> (a -> Maybe b) -> Maybe b\n  //.\n  //.   - `chain (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `chain (f) (Just (x))` is equivalent to `f (x)`\n  //.\n  //. ```javascript\n  //. > const head = xs => xs.length === 0 ? Nothing : Just (xs[0])\n  //.\n  //. > S.chain (head) (Nothing)\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just ([]))\n  //. Nothing\n  //.\n  //. > S.chain (head) (Just (['foo', 'bar', 'baz']))\n  //. Just ('foo')\n  //. ```\n  function Nothing$prototype$chain(f) {\n    return this;\n  }\n  function Just$prototype$chain(f) {\n    return f (this.value);\n  }\n\n  //# Maybe#fantasy-land/alt :: Maybe a ~> Maybe a -> Maybe a\n  //.\n  //.   - `alt (Nothing) (Nothing)` is equivalent to `Nothing`\n  //.   - `alt (Nothing) (Just (x))` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Nothing)` is equivalent to `Just (x)`\n  //.   - `alt (Just (x)) (Just (y))` is equivalent to `Just (x)`\n  //.\n  //. ```javascript\n  //. > S.alt (Nothing) (Nothing)\n  //. Nothing\n  //.\n  //. > S.alt (Nothing) (Just (1))\n  //. Just (1)\n  //.\n  //. > S.alt (Just (2)) (Nothing)\n  //. Just (2)\n  //.\n  //. > S.alt (Just (3)) (Just (4))\n  //. Just (3)\n  //. ```\n  function Nothing$prototype$alt(other) {\n    return other;\n  }\n  function Just$prototype$alt(other) {\n    return this;\n  }\n\n  //# Maybe#fantasy-land/reduce :: Maybe a ~> ((b, a) -> b, b) -> b\n  //.\n  //.   - `reduce (f) (x) (Nothing)` is equivalent to `x`\n  //.   - `reduce (f) (x) (Just (y))` is equivalent to `f (x) (y)`\n  //.\n  //. ```javascript\n  //. > S.reduce (S.concat) ('abc') (Nothing)\n  //. 'abc'\n  //.\n  //. > S.reduce (S.concat) ('abc') (Just ('xyz'))\n  //. 'abcxyz'\n  //. ```\n  function Nothing$prototype$reduce(f, x) {\n    return x;\n  }\n  function Just$prototype$reduce(f, x) {\n    return f (x, this.value);\n  }\n\n  //# Maybe#fantasy-land/traverse :: Applicative f => Maybe a ~> (TypeRep f, a -> f b) -> f (Maybe b)\n  //.\n  //.   - `traverse (A) (f) (Nothing)` is equivalent to `of (A) (Nothing)`\n  //.   - `traverse (A) (f) (Just (x))` is equivalent to `map (Just) (f (x))`\n  //.\n  //. ```javascript\n  //. > S.traverse (Array) (S.words) (Nothing)\n  //. [Nothing]\n  //.\n  //. > S.traverse (Array) (S.words) (Just ('foo bar baz'))\n  //. [Just ('foo'), Just ('bar'), Just ('baz')]\n  //. ```\n  function Nothing$prototype$traverse(typeRep, f) {\n    return Z.of (typeRep, this);\n  }\n  function Just$prototype$traverse(typeRep, f) {\n    return Z.map (Just, f (this.value));\n  }\n\n  //# Maybe#fantasy-land/extend :: Maybe a ~> (Maybe a -> b) -> Maybe b\n  //.\n  //.   - `extend (f) (Nothing)` is equivalent to `Nothing`\n  //.   - `extend (f) (Just (x))` is equivalent to `Just (f (Just (x)))`\n  //.\n  //. ```javascript\n  //. > S.extend (S.reduce (S.add) (1)) (Nothing)\n  //. Nothing\n  //.\n  //. > S.extend (S.reduce (S.add) (1)) (Just (99))\n  //. Just (100)\n  //. ```\n  function Nothing$prototype$extend(f) {\n    return this;\n  }\n  function Just$prototype$extend(f) {\n    return Just (f (this));\n  }\n\n  return Maybe;\n\n}));\n\n//. [Fantasy Land]:             v:fantasyland/fantasy-land\n//. [`Z.equals`]:               v:sanctuary-js/sanctuary-type-classes#equals\n//. [`Z.lte`]:                  v:sanctuary-js/sanctuary-type-classes#lte\n//. [iff]:                      https://en.wikipedia.org/wiki/If_and_only_if\n//. [type identifier]:          v:sanctuary-js/sanctuary-type-identifiers\n//. [type representative]:      v:fantasyland/fantasy-land#type-representatives\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n        @@@@@@@            @@@@@@@         @@\n      @@       @@        @@       @@      @@@\n    @@   @@@ @@  @@    @@   @@@ @@  @@   @@@@@@ @@   @@@  @@ @@@      @@@@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@   @@\n   @@  @@   @@@   @@  @@  @@   @@@   @@   @@@   @@   @@@  @@@   @@  @@@@@@@@\n   @@  @@   @@@  @@   @@  @@   @@@  @@    @@@   @@   @@@  @@@   @@  @@@\n    @@   @@@ @@@@@     @@   @@@ @@@@@      @@@    @@@ @@  @@@@@@      @@@@@\n      @@                 @@                           @@  @@\n        @@@@@@@            @@@@@@@               @@@@@    @@\n                                                          */\n//. # sanctuary-type-identifiers\n//.\n//. A type is a set of values. Boolean, for example, is the type comprising\n//. `true` and `false`. A value may be a member of multiple types (`42` is a\n//. member of Number, PositiveNumber, Integer, and many other types).\n//.\n//. In certain situations it is useful to divide JavaScript values into\n//. non-overlapping types. The language provides two constructs for this\n//. purpose: the [`typeof`][1] operator and [`Object.prototype.toString`][2].\n//. Each has pros and cons, but neither supports user-defined types.\n//.\n//. This package specifies an [algorithm][3] for deriving a _type identifier_\n//. from any JavaScript value, and exports an implementation of the algorithm.\n//. Authors of algebraic data types may follow this specification in order to\n//. make their data types compatible with the algorithm.\n//.\n//. ### Algorithm\n//.\n//. 1.  Take any JavaScript value `x`.\n//.\n//. 2.  If `x` is `null` or `undefined`, go to step 6.\n//.\n//. 3.  If `x.constructor` evaluates to `null` or `undefined`, go to step 6.\n//.\n//. 4.  If `x.constructor.prototype === x`, go to step 6. This check prevents a\n//.     prototype object from being considered a member of its associated type.\n//.\n//. 5.  If `typeof x.constructor['@@type']` evaluates to `'string'`, return\n//.     the value of `x.constructor['@@type']`.\n//.\n//. 6.  Return the [`Object.prototype.toString`][2] representation of `x`\n//.     without the leading `'[object '` and trailing `']'`.\n//.\n//. ### Compatibility\n//.\n//. For an algebraic data type to be compatible with the [algorithm][3]:\n//.\n//.   - every member of the type must have a `constructor` property pointing\n//.     to an object known as the _type representative_;\n//.\n//.   - the type representative must have a `@@type` property; and\n//.\n//.   - the type representative's `@@type` property (the _type identifier_)\n//.     must be a string primitive, ideally `'<npm-package-name>/<type-name>'`.\n//.\n//. For example:\n//.\n//. ```javascript\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   if (!(this instanceof Identity)) return new Identity(x);\n//.   this.value = x;\n//. }\n//.\n//. Identity['@@type'] = 'my-package/Identity';\n//. ```\n//.\n//. Note that by using a constructor function the `constructor` property is set\n//. implicitly for each value created. Constructor functions are convenient for\n//. this reason, but are not required. This definition is also valid:\n//.\n//. ```javascript\n//. //  IdentityTypeRep :: TypeRep Identity\n//. var IdentityTypeRep = {\n//.   '@@type': 'my-package/Identity'\n//. };\n//.\n//. //  Identity :: a -> Identity a\n//. function Identity(x) {\n//.   return {constructor: IdentityTypeRep, value: x};\n//. }\n//. ```\n//.\n//. ### Usage\n//.\n//. ```javascript\n//. var Identity = require('my-package').Identity;\n//. var type = require('sanctuary-type-identifiers');\n//.\n//. type(null);         // => 'Null'\n//. type(true);         // => 'Boolean'\n//. type([1, 2, 3]);    // => 'Array'\n//. type(Identity);     // => 'Function'\n//. type(Identity(0));  // => 'my-package/Identity'\n//. ```\n//.\n//.\n//. [1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\n//. [2]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n//. [3]: #algorithm\n\n(function(f) {\n\n  'use strict';\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  } else if (typeof define === 'function' && define.amd != null) {\n    define([], f);\n  } else {\n    self.sanctuaryTypeIdentifiers = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  //  $$type :: String\n  var $$type = '@@type';\n\n  //  type :: Any -> String\n  function type(x) {\n    return x != null &&\n           x.constructor != null &&\n           x.constructor.prototype !== x &&\n           typeof x.constructor[$$type] === 'string' ?\n      x.constructor[$$type] :\n      Object.prototype.toString.call(x).slice('[object '.length, -']'.length);\n  }\n\n  return type;\n\n}));\n","/*\n             ############                  #\n            ############                  ###\n                  #####                  #####\n                #####      ####################\n              #####       ######################\n            #####                     ###########\n          #####         ######################\n        #####          ####################\n      #####                        #####\n     ############                 ###\n    ############                 */\n\n//. # sanctuary-type-classes\n//.\n//. The [Fantasy Land Specification][FL] \"specifies interoperability of common\n//. algebraic structures\" by defining a number of type classes. For each type\n//. class, it states laws which every member of a type must obey in order for\n//. the type to be a member of the type class. In order for the Maybe type to\n//. be considered a [Functor][], for example, every `Maybe a` value must have\n//. a `fantasy-land/map` method which obeys the identity and composition laws.\n//.\n//. This project provides:\n//.\n//.   - [`TypeClass`](#TypeClass), a function for defining type classes;\n//.   - one `TypeClass` value for each Fantasy Land type class;\n//.   - lawful Fantasy Land methods for JavaScript's built-in types;\n//.   - one function for each Fantasy Land method; and\n//.   - several functions derived from these functions.\n//.\n//. ## Type-class hierarchy\n//.\n/* eslint-disable max-len */\n//. <pre>\n//.  Setoid   Semigroupoid  Semigroup   Foldable        Functor      Contravariant  Filterable\n//. (equals)    (compose)    (concat)   (reduce)         (map)        (contramap)    (filter)\n//.     |           |           |           \\         / | | | | \\\n//.     |           |           |            \\       /  | | | |  \\\n//.     |           |           |             \\     /   | | | |   \\\n//.     |           |           |              \\   /    | | | |    \\\n//.     |           |           |               \\ /     | | | |     \\\n//.    Ord      Category     Monoid         Traversable | | | |      \\\n//.   (lte)       (id)       (empty)        (traverse)  / | | \\       \\\n//.                             |                      /  | |  \\       \\\n//.                             |                     /   / \\   \\       \\\n//.                             |             Profunctor /   \\ Bifunctor \\\n//.                             |              (promap) /     \\ (bimap)   \\\n//.                             |                      /       \\           \\\n//.                           Group                   /         \\           \\\n//.                          (invert)               Alt        Apply      Extend\n//.                                                (alt)        (ap)     (extend)\n//.                                                 /           / \\           \\\n//.                                                /           /   \\           \\\n//.                                               /           /     \\           \\\n//.                                              /           /       \\           \\\n//.                                             /           /         \\           \\\n//.                                           Plus    Applicative    Chain      Comonad\n//.                                          (zero)       (of)      (chain)    (extract)\n//.                                             \\         / \\         / \\\n//.                                              \\       /   \\       /   \\\n//.                                               \\     /     \\     /     \\\n//.                                                \\   /       \\   /       \\\n//.                                                 \\ /         \\ /         \\\n//.                                             Alternative    Monad     ChainRec\n//.                                                                     (chainRec)\n//. </pre>\n/* eslint-enable max-len */\n//.\n//. ## API\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f(require('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define(['sanctuary-type-identifiers'], f);\n  } else {\n    self.sanctuaryTypeClasses = f(self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(type) {\n\n  'use strict';\n\n  /* istanbul ignore if */\n  if (typeof __doctest !== 'undefined') {\n    /* global __doctest:false */\n    /* eslint-disable no-unused-vars */\n    var Identity = __doctest.require('./test/Identity');\n    var List = __doctest.require('./test/List');\n    var Maybe = __doctest.require('./test/Maybe');\n    var Sum = __doctest.require('./test/Sum');\n    var Tuple = __doctest.require('./test/Tuple');\n\n    var Nil = List.Nil, Cons = List.Cons;\n    var Nothing = Maybe.Nothing, Just = Maybe.Just;\n    /* eslint-enable no-unused-vars */\n  }\n\n  //  concat_ :: Array a -> Array a -> Array a\n  function concat_(xs) {\n    return function(ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  //  constant :: a -> b -> a\n  function constant(x) {\n    return function(y) {\n      return x;\n    };\n  }\n\n  //  forEachKey :: (StrMap a, StrMap a ~> String -> Undefined) -> Undefined\n  function forEachKey(strMap, f) {\n    Object.keys(strMap).forEach(f, strMap);\n  }\n\n  //  has :: (String, Object) -> Boolean\n  function has(k, o) {\n    return Object.prototype.hasOwnProperty.call(o, k);\n  }\n\n  //  identity :: a -> a\n  function identity(x) { return x; }\n\n  //  pair :: a -> b -> Array2 a b\n  function pair(x) {\n    return function(y) {\n      return [x, y];\n    };\n  }\n\n  //  sameType :: (a, b) -> Boolean\n  function sameType(x, y) {\n    return typeof x === typeof y && type(x) === type(y);\n  }\n\n  //  thrush :: a -> (a -> b) -> b\n  function thrush(x) {\n    return function(f) {\n      return f(x);\n    };\n  }\n\n  //  type Iteration a = { value :: a, done :: Boolean }\n\n  //  iterationNext :: a -> Iteration a\n  function iterationNext(x) { return {value: x, done: false}; }\n\n  //  iterationDone :: a -> Iteration a\n  function iterationDone(x) { return {value: x, done: true}; }\n\n  //# TypeClass :: (String, String, Array TypeClass, a -> Boolean) -> TypeClass\n  //.\n  //. The arguments are:\n  //.\n  //.   - the name of the type class, prefixed by its npm package name;\n  //.   - the documentation URL of the type class;\n  //.   - an array of dependencies; and\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if the value satisfies the requirements of the type class; `false`\n  //.     otherwise.\n  //.\n  //. Example:\n  //.\n  //. ```javascript\n  //. //    hasMethod :: String -> a -> Boolean\n  //. const hasMethod = name => x => x != null && typeof x[name] == 'function';\n  //.\n  //. //    Foo :: TypeClass\n  //. const Foo = Z.TypeClass(\n  //.   'my-package/Foo',\n  //.   'http://example.com/my-package#Foo',\n  //.   [],\n  //.   hasMethod('foo')\n  //. );\n  //.\n  //. //    Bar :: TypeClass\n  //. const Bar = Z.TypeClass(\n  //.   'my-package/Bar',\n  //.   'http://example.com/my-package#Bar',\n  //.   [Foo],\n  //.   hasMethod('bar')\n  //. );\n  //. ```\n  //.\n  //. Types whose values have a `foo` method are members of the Foo type class.\n  //. Members of the Foo type class whose values have a `bar` method are also\n  //. members of the Bar type class.\n  //.\n  //. Each `TypeClass` value has a `test` field: a function which accepts\n  //. any JavaScript value and returns `true` if the value satisfies the\n  //. type class's predicate and the predicates of all the type class's\n  //. dependencies; `false` otherwise.\n  //.\n  //. `TypeClass` values may be used with [sanctuary-def][type-classes]\n  //. to define parametrically polymorphic functions which verify their\n  //. type-class constraints at run time.\n  function TypeClass(name, url, dependencies, test) {\n    if (!(this instanceof TypeClass)) {\n      return new TypeClass(name, url, dependencies, test);\n    }\n    this.name = name;\n    this.url = url;\n    this.test = function(x) {\n      return dependencies.every(function(d) { return d.test(x); }) && test(x);\n    };\n  }\n\n  TypeClass['@@type'] = 'sanctuary-type-classes/TypeClass';\n\n  //  data Location = Constructor | Value\n\n  //  Constructor :: Location\n  var Constructor = 'Constructor';\n\n  //  Value :: Location\n  var Value = 'Value';\n\n  //  _funcPath :: (Boolean, Array String, a) -> Nullable Function\n  function _funcPath(allowInheritedProps, path, _x) {\n    var x = _x;\n    for (var idx = 0; idx < path.length; idx += 1) {\n      var k = path[idx];\n      if (x == null || !(allowInheritedProps || has(k, x))) return null;\n      x = x[k];\n    }\n    return typeof x === 'function' ? x : null;\n  }\n\n  //  funcPath :: (Array String, a) -> Nullable Function\n  function funcPath(path, x) {\n    return _funcPath(true, path, x);\n  }\n\n  //  implPath :: Array String -> Nullable Function\n  function implPath(path) {\n    return _funcPath(false, path, implementations);\n  }\n\n  //  functionName :: Function -> String\n  var functionName = has('name', function f() {}) ?\n    function functionName(f) { return f.name; } :\n    /* istanbul ignore next */\n    function functionName(f) {\n      var match = /function (\\w*)/.exec(f);\n      return match == null ? '' : match[1];\n    };\n\n  //  $ :: (String, Array TypeClass, StrMap (Array Location)) -> TypeClass\n  function $(_name, dependencies, requirements) {\n    function getBoundMethod(_name) {\n      var name = 'fantasy-land/' + _name;\n      return requirements[_name] === Constructor ?\n        function(typeRep) {\n          var f = funcPath([name], typeRep);\n          return f == null && typeof typeRep === 'function' ?\n            implPath([functionName(typeRep), name]) :\n            f;\n        } :\n        function(x) {\n          var isPrototype = x != null &&\n                            x.constructor != null &&\n                            x.constructor.prototype === x;\n          var m = null;\n          if (!isPrototype) m = funcPath([name], x);\n          if (m == null)    m = implPath([type(x), 'prototype', name]);\n          return m && m.bind(x);\n        };\n    }\n\n    var version = '9.0.0';  // updated programmatically\n    var keys = Object.keys(requirements);\n\n    var typeClass = TypeClass(\n      'sanctuary-type-classes/' + _name,\n      'https://github.com/sanctuary-js/sanctuary-type-classes/tree/v' + version\n        + '#' + _name,\n      dependencies,\n      function(x) {\n        return keys.every(function(_name) {\n          var arg = requirements[_name] === Constructor ? x.constructor : x;\n          return getBoundMethod(_name)(arg) != null;\n        });\n      }\n    );\n\n    typeClass.methods = keys.reduce(function(methods, _name) {\n      methods[_name] = getBoundMethod(_name);\n      return methods;\n    }, {});\n\n    return typeClass;\n  }\n\n  //# Setoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Setoid][].\n  //.\n  //. ```javascript\n  //. > Setoid.test(null)\n  //. true\n  //. ```\n  var Setoid = $('Setoid', [], {equals: Value});\n\n  //# Ord :: TypeClass\n  //.\n  //. `TypeClass` value for [Ord][].\n  //.\n  //. ```javascript\n  //. > Ord.test(0)\n  //. true\n  //.\n  //. > Ord.test(Math.sqrt)\n  //. false\n  //. ```\n  var Ord = $('Ord', [Setoid], {lte: Value});\n\n  //# Semigroupoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroupoid][].\n  //.\n  //. ```javascript\n  //. > Semigroupoid.test(Math.sqrt)\n  //. true\n  //.\n  //. > Semigroupoid.test(0)\n  //. false\n  //. ```\n  var Semigroupoid = $('Semigroupoid', [], {compose: Value});\n\n  //# Category :: TypeClass\n  //.\n  //. `TypeClass` value for [Category][].\n  //.\n  //. ```javascript\n  //. > Category.test(Math.sqrt)\n  //. true\n  //.\n  //. > Category.test(0)\n  //. false\n  //. ```\n  var Category = $('Category', [Semigroupoid], {id: Constructor});\n\n  //# Semigroup :: TypeClass\n  //.\n  //. `TypeClass` value for [Semigroup][].\n  //.\n  //. ```javascript\n  //. > Semigroup.test('')\n  //. true\n  //.\n  //. > Semigroup.test(0)\n  //. false\n  //. ```\n  var Semigroup = $('Semigroup', [], {concat: Value});\n\n  //# Monoid :: TypeClass\n  //.\n  //. `TypeClass` value for [Monoid][].\n  //.\n  //. ```javascript\n  //. > Monoid.test('')\n  //. true\n  //.\n  //. > Monoid.test(0)\n  //. false\n  //. ```\n  var Monoid = $('Monoid', [Semigroup], {empty: Constructor});\n\n  //# Group :: TypeClass\n  //.\n  //. `TypeClass` value for [Group][].\n  //.\n  //. ```javascript\n  //. > Group.test(Sum(0))\n  //. true\n  //.\n  //. > Group.test('')\n  //. false\n  //. ```\n  var Group = $('Group', [Monoid], {invert: Value});\n\n  //# Filterable :: TypeClass\n  //.\n  //. `TypeClass` value for [Filterable][].\n  //.\n  //. ```javascript\n  //. > Filterable.test({})\n  //. true\n  //.\n  //. > Filterable.test('')\n  //. false\n  //. ```\n  var Filterable = $('Filterable', [], {filter: Value});\n\n  //# Functor :: TypeClass\n  //.\n  //. `TypeClass` value for [Functor][].\n  //.\n  //. ```javascript\n  //. > Functor.test([])\n  //. true\n  //.\n  //. > Functor.test('')\n  //. false\n  //. ```\n  var Functor = $('Functor', [], {map: Value});\n\n  //# Bifunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Bifunctor][].\n  //.\n  //. ```javascript\n  //. > Bifunctor.test(Tuple('foo', 64))\n  //. true\n  //.\n  //. > Bifunctor.test([])\n  //. false\n  //. ```\n  var Bifunctor = $('Bifunctor', [Functor], {bimap: Value});\n\n  //# Profunctor :: TypeClass\n  //.\n  //. `TypeClass` value for [Profunctor][].\n  //.\n  //. ```javascript\n  //. > Profunctor.test(Math.sqrt)\n  //. true\n  //.\n  //. > Profunctor.test([])\n  //. false\n  //. ```\n  var Profunctor = $('Profunctor', [Functor], {promap: Value});\n\n  //# Apply :: TypeClass\n  //.\n  //. `TypeClass` value for [Apply][].\n  //.\n  //. ```javascript\n  //. > Apply.test([])\n  //. true\n  //.\n  //. > Apply.test('')\n  //. false\n  //. ```\n  var Apply = $('Apply', [Functor], {ap: Value});\n\n  //# Applicative :: TypeClass\n  //.\n  //. `TypeClass` value for [Applicative][].\n  //.\n  //. ```javascript\n  //. > Applicative.test([])\n  //. true\n  //.\n  //. > Applicative.test({})\n  //. false\n  //. ```\n  var Applicative = $('Applicative', [Apply], {of: Constructor});\n\n  //# Chain :: TypeClass\n  //.\n  //. `TypeClass` value for [Chain][].\n  //.\n  //. ```javascript\n  //. > Chain.test([])\n  //. true\n  //.\n  //. > Chain.test({})\n  //. false\n  //. ```\n  var Chain = $('Chain', [Apply], {chain: Value});\n\n  //# ChainRec :: TypeClass\n  //.\n  //. `TypeClass` value for [ChainRec][].\n  //.\n  //. ```javascript\n  //. > ChainRec.test([])\n  //. true\n  //.\n  //. > ChainRec.test({})\n  //. false\n  //. ```\n  var ChainRec = $('ChainRec', [Chain], {chainRec: Constructor});\n\n  //# Monad :: TypeClass\n  //.\n  //. `TypeClass` value for [Monad][].\n  //.\n  //. ```javascript\n  //. > Monad.test([])\n  //. true\n  //.\n  //. > Monad.test({})\n  //. false\n  //. ```\n  var Monad = $('Monad', [Applicative, Chain], {});\n\n  //# Alt :: TypeClass\n  //.\n  //. `TypeClass` value for [Alt][].\n  //.\n  //. ```javascript\n  //. > Alt.test({})\n  //. true\n  //.\n  //. > Alt.test('')\n  //. false\n  //. ```\n  var Alt = $('Alt', [Functor], {alt: Value});\n\n  //# Plus :: TypeClass\n  //.\n  //. `TypeClass` value for [Plus][].\n  //.\n  //. ```javascript\n  //. > Plus.test({})\n  //. true\n  //.\n  //. > Plus.test('')\n  //. false\n  //. ```\n  var Plus = $('Plus', [Alt], {zero: Constructor});\n\n  //# Alternative :: TypeClass\n  //.\n  //. `TypeClass` value for [Alternative][].\n  //.\n  //. ```javascript\n  //. > Alternative.test([])\n  //. true\n  //.\n  //. > Alternative.test({})\n  //. false\n  //. ```\n  var Alternative = $('Alternative', [Applicative, Plus], {});\n\n  //# Foldable :: TypeClass\n  //.\n  //. `TypeClass` value for [Foldable][].\n  //.\n  //. ```javascript\n  //. > Foldable.test({})\n  //. true\n  //.\n  //. > Foldable.test('')\n  //. false\n  //. ```\n  var Foldable = $('Foldable', [], {reduce: Value});\n\n  //# Traversable :: TypeClass\n  //.\n  //. `TypeClass` value for [Traversable][].\n  //.\n  //. ```javascript\n  //. > Traversable.test([])\n  //. true\n  //.\n  //. > Traversable.test('')\n  //. false\n  //. ```\n  var Traversable = $('Traversable', [Functor, Foldable], {traverse: Value});\n\n  //# Extend :: TypeClass\n  //.\n  //. `TypeClass` value for [Extend][].\n  //.\n  //. ```javascript\n  //. > Extend.test([])\n  //. true\n  //.\n  //. > Extend.test({})\n  //. false\n  //. ```\n  var Extend = $('Extend', [Functor], {extend: Value});\n\n  //# Comonad :: TypeClass\n  //.\n  //. `TypeClass` value for [Comonad][].\n  //.\n  //. ```javascript\n  //. > Comonad.test(Identity(0))\n  //. true\n  //.\n  //. > Comonad.test([])\n  //. false\n  //. ```\n  var Comonad = $('Comonad', [Extend], {extract: Value});\n\n  //# Contravariant :: TypeClass\n  //.\n  //. `TypeClass` value for [Contravariant][].\n  //.\n  //. ```javascript\n  //. > Contravariant.test(Math.sqrt)\n  //. true\n  //.\n  //. > Contravariant.test([])\n  //. false\n  //. ```\n  var Contravariant = $('Contravariant', [], {contramap: Value});\n\n  //  Null$prototype$equals :: Null ~> Null -> Boolean\n  function Null$prototype$equals(other) {\n    return true;\n  }\n\n  //  Null$prototype$lte :: Null ~> Null -> Boolean\n  function Null$prototype$lte(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$equals :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$equals(other) {\n    return true;\n  }\n\n  //  Undefined$prototype$lte :: Undefined ~> Undefined -> Boolean\n  function Undefined$prototype$lte(other) {\n    return true;\n  }\n\n  //  Boolean$prototype$equals :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  Boolean$prototype$lte :: Boolean ~> Boolean -> Boolean\n  function Boolean$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this === false || other === true;\n  }\n\n  //  Number$prototype$equals :: Number ~> Number -> Boolean\n  function Number$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      isNaN(this) && isNaN(other) || this === other;\n  }\n\n  //  Number$prototype$lte :: Number ~> Number -> Boolean\n  function Number$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      isNaN(this) || this <= other;\n  }\n\n  //  Date$prototype$equals :: Date ~> Date -> Boolean\n  function Date$prototype$equals(other) {\n    return equals(this.valueOf(), other.valueOf());\n  }\n\n  //  Date$prototype$lte :: Date ~> Date -> Boolean\n  function Date$prototype$lte(other) {\n    return lte(this.valueOf(), other.valueOf());\n  }\n\n  //  RegExp$prototype$equals :: RegExp ~> RegExp -> Boolean\n  function RegExp$prototype$equals(other) {\n    return other.source === this.source &&\n           other.global === this.global &&\n           other.ignoreCase === this.ignoreCase &&\n           other.multiline === this.multiline &&\n           other.sticky === this.sticky &&\n           other.unicode === this.unicode;\n  }\n\n  //  String$empty :: () -> String\n  function String$empty() {\n    return '';\n  }\n\n  //  String$prototype$equals :: String ~> String -> Boolean\n  function String$prototype$equals(other) {\n    return typeof this === 'object' ?\n      equals(this.valueOf(), other.valueOf()) :\n      this === other;\n  }\n\n  //  String$prototype$lte :: String ~> String -> Boolean\n  function String$prototype$lte(other) {\n    return typeof this === 'object' ?\n      lte(this.valueOf(), other.valueOf()) :\n      this <= other;\n  }\n\n  //  String$prototype$concat :: String ~> String -> String\n  function String$prototype$concat(other) {\n    return this + other;\n  }\n\n  //  Array$empty :: () -> Array a\n  function Array$empty() {\n    return [];\n  }\n\n  //  Array$of :: a -> Array a\n  function Array$of(x) {\n    return [x];\n  }\n\n  //  Array$chainRec :: ((a -> c, b -> c, a) -> Array c, a) -> Array b\n  function Array$chainRec(f, x) {\n    var result = [];\n    var nil = {};\n    var todo = {head: x, tail: nil};\n    while (todo !== nil) {\n      var more = nil;\n      var steps = f(iterationNext, iterationDone, todo.head);\n      for (var idx = 0; idx < steps.length; idx += 1) {\n        var step = steps[idx];\n        if (step.done) {\n          result.push(step.value);\n        } else {\n          more = {head: step.value, tail: more};\n        }\n      }\n      todo = todo.tail;\n      while (more !== nil) {\n        todo = {head: more.head, tail: todo};\n        more = more.tail;\n      }\n    }\n    return result;\n  }\n\n  //  Array$zero :: () -> Array a\n  function Array$zero() {\n    return [];\n  }\n\n  //  Array$prototype$equals :: Array a ~> Array a -> Boolean\n  function Array$prototype$equals(other) {\n    if (other.length !== this.length) return false;\n    for (var idx = 0; idx < this.length; idx += 1) {\n      if (!equals(this[idx], other[idx])) return false;\n    }\n    return true;\n  }\n\n  //  Array$prototype$lte :: Array a ~> Array a -> Boolean\n  function Array$prototype$lte(other) {\n    for (var idx = 0; true; idx += 1) {\n      if (idx === this.length) return true;\n      if (idx === other.length) return false;\n      if (!equals(this[idx], other[idx])) return lte(this[idx], other[idx]);\n    }\n  }\n\n  //  Array$prototype$concat :: Array a ~> Array a -> Array a\n  function Array$prototype$concat(other) {\n    return this.concat(other);\n  }\n\n  //  Array$prototype$filter :: Array a ~> (a -> Boolean) -> Array a\n  function Array$prototype$filter(pred) {\n    return this.filter(function(x) { return pred(x); });\n  }\n\n  //  Array$prototype$map :: Array a ~> (a -> b) -> Array b\n  function Array$prototype$map(f) {\n    return this.map(function(x) { return f(x); });\n  }\n\n  //  Array$prototype$ap :: Array a ~> Array (a -> b) -> Array b\n  function Array$prototype$ap(fs) {\n    var result = [];\n    for (var idx = 0; idx < fs.length; idx += 1) {\n      for (var idx2 = 0; idx2 < this.length; idx2 += 1) {\n        result.push(fs[idx](this[idx2]));\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$chain :: Array a ~> (a -> Array b) -> Array b\n  function Array$prototype$chain(f) {\n    var result = [];\n    for (var idx = 0; idx < this.length; idx += 1) {\n      for (var idx2 = 0, xs = f(this[idx]); idx2 < xs.length; idx2 += 1) {\n        result.push(xs[idx2]);\n      }\n    }\n    return result;\n  }\n\n  //  Array$prototype$alt :: Array a ~> Array a -> Array a\n  var Array$prototype$alt = Array$prototype$concat;\n\n  //  Array$prototype$reduce :: Array a ~> ((b, a) -> b, b) -> b\n  function Array$prototype$reduce(f, initial) {\n    var acc = initial;\n    for (var idx = 0; idx < this.length; idx += 1) acc = f(acc, this[idx]);\n    return acc;\n  }\n\n  //  Array$prototype$traverse :: Applicative f => Array a ~> (TypeRep f, a -> f b) -> f (Array b)\n  function Array$prototype$traverse(typeRep, f) {\n    var xs = this;\n    function go(idx, n) {\n      switch (n) {\n        case 0: return of(typeRep, []);\n        case 2: return lift2(pair, f(xs[idx]), f(xs[idx + 1]));\n        default:\n          var m = Math.floor(n / 4) * 2;\n          return lift2(concat_, go(idx, m), go(idx + m, n - m));\n      }\n    }\n    return this.length % 2 === 1 ?\n      lift2(concat_, map(Array$of, f(this[0])), go(1, this.length - 1)) :\n      go(0, this.length);\n  }\n\n  //  Array$prototype$extend :: Array a ~> (Array a -> b) -> Array b\n  function Array$prototype$extend(f) {\n    return this.map(function(_, idx, xs) { return f(xs.slice(idx)); });\n  }\n\n  //  Arguments$prototype$equals :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$equals(other) {\n    return Array$prototype$equals.call(this, other);\n  }\n\n  //  Arguments$prototype$lte :: Arguments ~> Arguments -> Boolean\n  function Arguments$prototype$lte(other) {\n    return Array$prototype$lte.call(this, other);\n  }\n\n  //  Error$prototype$equals :: Error ~> Error -> Boolean\n  function Error$prototype$equals(other) {\n    return equals(this.name, other.name) &&\n           equals(this.message, other.message);\n  }\n\n  //  Object$empty :: () -> StrMap a\n  function Object$empty() {\n    return {};\n  }\n\n  //  Object$zero :: () -> StrMap a\n  function Object$zero() {\n    return {};\n  }\n\n  //  Object$prototype$equals :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$equals(other) {\n    var self = this;\n    var keys = Object.keys(this).sort();\n    return equals(keys, Object.keys(other).sort()) &&\n           keys.every(function(k) { return equals(self[k], other[k]); });\n  }\n\n  //  Object$prototype$lte :: StrMap a ~> StrMap a -> Boolean\n  function Object$prototype$lte(other) {\n    var theseKeys = Object.keys(this).sort();\n    var otherKeys = Object.keys(other).sort();\n    while (true) {\n      if (theseKeys.length === 0) return true;\n      if (otherKeys.length === 0) return false;\n      var k = theseKeys.shift();\n      var z = otherKeys.shift();\n      if (k < z) return true;\n      if (k > z) return false;\n      if (!equals(this[k], other[k])) return lte(this[k], other[k]);\n    }\n  }\n\n  //  Object$prototype$concat :: StrMap a ~> StrMap a -> StrMap a\n  function Object$prototype$concat(other) {\n    var result = {};\n    function assign(k) { result[k] = this[k]; }\n    forEachKey(this, assign);\n    forEachKey(other, assign);\n    return result;\n  }\n\n  //  Object$prototype$filter :: StrMap a ~> (a -> Boolean) -> StrMap a\n  function Object$prototype$filter(pred) {\n    var result = {};\n    forEachKey(this, function(k) { if (pred(this[k])) result[k] = this[k]; });\n    return result;\n  }\n\n  //  Object$prototype$map :: StrMap a ~> (a -> b) -> StrMap b\n  function Object$prototype$map(f) {\n    var result = {};\n    forEachKey(this, function(k) { result[k] = f(this[k]); });\n    return result;\n  }\n\n  //  Object$prototype$ap :: StrMap a ~> StrMap (a -> b) -> StrMap b\n  function Object$prototype$ap(other) {\n    var result = {};\n    forEachKey(this, function(k) {\n      if (has(k, other)) result[k] = other[k](this[k]);\n    });\n    return result;\n  }\n\n  //  Object$prototype$alt :: StrMap a ~> StrMap a -> StrMap a\n  var Object$prototype$alt = Object$prototype$concat;\n\n  //  Object$prototype$reduce :: StrMap a ~> ((b, a) -> b, b) -> b\n  function Object$prototype$reduce(f, initial) {\n    var self = this;\n    function reducer(acc, k) { return f(acc, self[k]); }\n    return Object.keys(this).sort().reduce(reducer, initial);\n  }\n\n  //  Object$prototype$traverse :: Applicative f => StrMap a ~> (TypeRep f, a -> f b) -> f (StrMap b)\n  function Object$prototype$traverse(typeRep, f) {\n    var self = this;\n    return Object.keys(this).reduce(function(applicative, k) {\n      function set(o) {\n        return function(v) {\n          var singleton = {}; singleton[k] = v;\n          return Object$prototype$concat.call(o, singleton);\n        };\n      }\n      return lift2(set, applicative, f(self[k]));\n    }, of(typeRep, {}));\n  }\n\n  //  Function$id :: () -> a -> a\n  function Function$id() {\n    return identity;\n  }\n\n  //  Function$of :: b -> (a -> b)\n  function Function$of(x) {\n    return function(_) { return x; };\n  }\n\n  //  Function$chainRec :: ((a -> c, b -> c, a) -> (z -> c), a) -> (z -> b)\n  function Function$chainRec(f, x) {\n    return function(a) {\n      var step = iterationNext(x);\n      while (!step.done) {\n        step = f(iterationNext, iterationDone, step.value)(a);\n      }\n      return step.value;\n    };\n  }\n\n  //  Function$prototype$equals :: Function ~> Function -> Boolean\n  function Function$prototype$equals(other) {\n    return other === this;\n  }\n\n  //  Function$prototype$compose :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$compose(other) {\n    var semigroupoid = this;\n    return function(x) { return other(semigroupoid(x)); };\n  }\n\n  //  Function$prototype$map :: (a -> b) ~> (b -> c) -> (a -> c)\n  function Function$prototype$map(f) {\n    var functor = this;\n    return function(x) { return f(functor(x)); };\n  }\n\n  //  Function$prototype$promap :: (b -> c) ~> (a -> b, c -> d) -> (a -> d)\n  function Function$prototype$promap(f, g) {\n    var profunctor = this;\n    return function(x) { return g(profunctor(f(x))); };\n  }\n\n  //  Function$prototype$ap :: (a -> b) ~> (a -> b -> c) -> (a -> c)\n  function Function$prototype$ap(f) {\n    var apply = this;\n    return function(x) { return f(x)(apply(x)); };\n  }\n\n  //  Function$prototype$chain :: (a -> b) ~> (b -> a -> c) -> (a -> c)\n  function Function$prototype$chain(f) {\n    var chain = this;\n    return function(x) { return f(chain(x))(x); };\n  }\n\n  //  Function$prototype$extend :: Semigroup a => (a -> b) ~> ((a -> b) -> c) -> (a -> c)\n  function Function$prototype$extend(f) {\n    var extend = this;\n    return function(x) {\n      return f(function(y) { return extend(concat(x, y)); });\n    };\n  }\n\n  //  Function$prototype$contramap :: (b -> c) ~> (a -> b) -> (a -> c)\n  function Function$prototype$contramap(f) {\n    var contravariant = this;\n    return function(x) { return contravariant(f(x)); };\n  }\n\n  /* eslint-disable key-spacing */\n  var implementations = {\n    Null: {\n      'prototype': {\n        'fantasy-land/equals':      Null$prototype$equals,\n        'fantasy-land/lte':         Null$prototype$lte\n      }\n    },\n    Undefined: {\n      'prototype': {\n        'fantasy-land/equals':      Undefined$prototype$equals,\n        'fantasy-land/lte':         Undefined$prototype$lte\n      }\n    },\n    Boolean: {\n      'prototype': {\n        'fantasy-land/equals':      Boolean$prototype$equals,\n        'fantasy-land/lte':         Boolean$prototype$lte\n      }\n    },\n    Number: {\n      'prototype': {\n        'fantasy-land/equals':      Number$prototype$equals,\n        'fantasy-land/lte':         Number$prototype$lte\n      }\n    },\n    Date: {\n      'prototype': {\n        'fantasy-land/equals':      Date$prototype$equals,\n        'fantasy-land/lte':         Date$prototype$lte\n      }\n    },\n    RegExp: {\n      'prototype': {\n        'fantasy-land/equals':      RegExp$prototype$equals\n      }\n    },\n    String: {\n      'fantasy-land/empty':         String$empty,\n      'prototype': {\n        'fantasy-land/equals':      String$prototype$equals,\n        'fantasy-land/lte':         String$prototype$lte,\n        'fantasy-land/concat':      String$prototype$concat\n      }\n    },\n    Array: {\n      'fantasy-land/empty':         Array$empty,\n      'fantasy-land/of':            Array$of,\n      'fantasy-land/chainRec':      Array$chainRec,\n      'fantasy-land/zero':          Array$zero,\n      'prototype': {\n        'fantasy-land/equals':      Array$prototype$equals,\n        'fantasy-land/lte':         Array$prototype$lte,\n        'fantasy-land/concat':      Array$prototype$concat,\n        'fantasy-land/filter':      Array$prototype$filter,\n        'fantasy-land/map':         Array$prototype$map,\n        'fantasy-land/ap':          Array$prototype$ap,\n        'fantasy-land/chain':       Array$prototype$chain,\n        'fantasy-land/alt':         Array$prototype$alt,\n        'fantasy-land/reduce':      Array$prototype$reduce,\n        'fantasy-land/traverse':    Array$prototype$traverse,\n        'fantasy-land/extend':      Array$prototype$extend\n      }\n    },\n    Arguments: {\n      'prototype': {\n        'fantasy-land/equals':      Arguments$prototype$equals,\n        'fantasy-land/lte':         Arguments$prototype$lte\n      }\n    },\n    Error: {\n      'prototype': {\n        'fantasy-land/equals':      Error$prototype$equals\n      }\n    },\n    Object: {\n      'fantasy-land/empty':         Object$empty,\n      'fantasy-land/zero':          Object$zero,\n      'prototype': {\n        'fantasy-land/equals':      Object$prototype$equals,\n        'fantasy-land/lte':         Object$prototype$lte,\n        'fantasy-land/concat':      Object$prototype$concat,\n        'fantasy-land/filter':      Object$prototype$filter,\n        'fantasy-land/map':         Object$prototype$map,\n        'fantasy-land/ap':          Object$prototype$ap,\n        'fantasy-land/alt':         Object$prototype$alt,\n        'fantasy-land/reduce':      Object$prototype$reduce,\n        'fantasy-land/traverse':    Object$prototype$traverse\n      }\n    },\n    Function: {\n      'fantasy-land/id':            Function$id,\n      'fantasy-land/of':            Function$of,\n      'fantasy-land/chainRec':      Function$chainRec,\n      'prototype': {\n        'fantasy-land/equals':      Function$prototype$equals,\n        'fantasy-land/compose':     Function$prototype$compose,\n        'fantasy-land/map':         Function$prototype$map,\n        'fantasy-land/promap':      Function$prototype$promap,\n        'fantasy-land/ap':          Function$prototype$ap,\n        'fantasy-land/chain':       Function$prototype$chain,\n        'fantasy-land/extend':      Function$prototype$extend,\n        'fantasy-land/contramap':   Function$prototype$contramap\n      }\n    }\n  };\n  /* eslint-enable key-spacing */\n\n  //# equals :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and equal according\n  //. to the type's [`fantasy-land/equals`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/equals` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, RegExp, String,\n  //. Array, Arguments, Error, Object, and Function.\n  //.\n  //. The algorithm supports circular data structures. Two arrays are equal\n  //. if they have the same index paths and for each path have equal values.\n  //. Two arrays which represent `[1, [1, [1, [1, [1, ...]]]]]`, for example,\n  //. are equal even if their internal structures differ. Two objects are equal\n  //. if they have the same property paths and for each path have equal values.\n  //.\n  //. ```javascript\n  //. > equals(0, -0)\n  //. true\n  //.\n  //. > equals(NaN, NaN)\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('foo', Cons('bar', Nil)))\n  //. true\n  //.\n  //. > equals(Cons('foo', Cons('bar', Nil)), Cons('bar', Cons('foo', Nil)))\n  //. false\n  //. ```\n  var equals = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function equals(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return true;\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Setoid.test(x) && Setoid.test(y) && Setoid.methods.equals(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# lt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. less than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`gt`](#gt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lt(0, 0)\n  //. false\n  //.\n  //. > lt(0, 1)\n  //. true\n  //.\n  //. > lt(1, 0)\n  //. false\n  //. ```\n  function lt(x, y) {\n    return sameType(x, y) && !lte(y, x);\n  }\n\n  //# lte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is less than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. `fantasy-land/lte` implementations are provided for the following\n  //. built-in types: Null, Undefined, Boolean, Number, Date, String, Array,\n  //. Arguments, and Object.\n  //.\n  //. The algorithm supports circular data structures in the same manner as\n  //. [`equals`](#equals).\n  //.\n  //. See also [`lt`](#lt), [`gt`](#gt), and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > lte(0, 0)\n  //. true\n  //.\n  //. > lte(0, 1)\n  //. true\n  //.\n  //. > lte(1, 0)\n  //. false\n  //. ```\n  var lte = (function() {\n    //  $pairs :: Array (Array2 Any Any)\n    var $pairs = [];\n\n    return function lte(x, y) {\n      if (!sameType(x, y)) return false;\n\n      //  This algorithm for comparing circular data structures was\n      //  suggested in <http://stackoverflow.com/a/40622794/312785>.\n      if ($pairs.some(function(p) { return p[0] === x && p[1] === y; })) {\n        return equals(x, y);\n      }\n\n      $pairs.push([x, y]);\n      try {\n        return Ord.test(x) && Ord.test(y) && Ord.methods.lte(x)(y);\n      } finally {\n        $pairs.pop();\n      }\n    };\n  }());\n\n  //# gt :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first is\n  //. greater than the second according to the type's [`fantasy-land/lte`][]\n  //. method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gte`](#gte).\n  //.\n  //. ```javascript\n  //. > gt(0, 0)\n  //. false\n  //.\n  //. > gt(0, 1)\n  //. false\n  //.\n  //. > gt(1, 0)\n  //. true\n  //. ```\n  function gt(x, y) {\n    return lt(y, x);\n  }\n\n  //# gte :: (a, b) -> Boolean\n  //.\n  //. Returns `true` if its arguments are of the same type and the first\n  //. is greater than or equal to the second according to the type's\n  //. [`fantasy-land/lte`][] method; `false` otherwise.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`lt`](#lt) and [`gt`](#gt).\n  //.\n  //. ```javascript\n  //. > gte(0, 0)\n  //. true\n  //.\n  //. > gte(0, 1)\n  //. false\n  //.\n  //. > gte(1, 0)\n  //. true\n  //. ```\n  function gte(x, y) {\n    return lte(y, x);\n  }\n\n  //# min :: Ord a => (a, a) -> a\n  //.\n  //. Returns the smaller of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`max`](#max).\n  //.\n  //. ```javascript\n  //. > min(10, 2)\n  //. 2\n  //.\n  //. > min(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('1999-12-31')\n  //.\n  //. > min('10', '2')\n  //. '10'\n  //. ```\n  function min(x, y) {\n    return lte(x, y) ? x : y;\n  }\n\n  //# max :: Ord a => (a, a) -> a\n  //.\n  //. Returns the larger of its two arguments.\n  //.\n  //. This function is derived from [`lte`](#lte).\n  //.\n  //. See also [`min`](#min).\n  //.\n  //. ```javascript\n  //. > max(10, 2)\n  //. 10\n  //.\n  //. > max(new Date('1999-12-31'), new Date('2000-01-01'))\n  //. new Date('2000-01-01')\n  //.\n  //. > max('10', '2')\n  //. '2'\n  //. ```\n  function max(x, y) {\n    return lte(x, y) ? y : x;\n  }\n\n  //# compose :: Semigroupoid c => (c j k, c i j) -> c i k\n  //.\n  //. Function wrapper for [`fantasy-land/compose`][].\n  //.\n  //. `fantasy-land/compose` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > compose(Math.sqrt, x => x + 1)(99)\n  //. 10\n  //. ```\n  function compose(x, y) {\n    return Semigroupoid.methods.compose(y)(x);\n  }\n\n  //# id :: Category c => TypeRep c -> c\n  //.\n  //. Function wrapper for [`fantasy-land/id`][].\n  //.\n  //. `fantasy-land/id` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > id(Function)('foo')\n  //. 'foo'\n  //. ```\n  function id(typeRep) {\n    return Category.methods.id(typeRep)();\n  }\n\n  //# concat :: Semigroup a => (a, a) -> a\n  //.\n  //. Function wrapper for [`fantasy-land/concat`][].\n  //.\n  //. `fantasy-land/concat` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > concat('abc', 'def')\n  //. 'abcdef'\n  //.\n  //. > concat([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > concat({x: 1, y: 2}, {y: 3, z: 4})\n  //. {x: 1, y: 3, z: 4}\n  //.\n  //. > concat(Cons('foo', Cons('bar', Cons('baz', Nil))), Cons('quux', Nil))\n  //. Cons('foo', Cons('bar', Cons('baz', Cons('quux', Nil))))\n  //. ```\n  function concat(x, y) {\n    return Semigroup.methods.concat(x)(y);\n  }\n\n  //# empty :: Monoid m => TypeRep m -> m\n  //.\n  //. Function wrapper for [`fantasy-land/empty`][].\n  //.\n  //. `fantasy-land/empty` implementations are provided for the following\n  //. built-in types: String, Array, and Object.\n  //.\n  //. ```javascript\n  //. > empty(String)\n  //. ''\n  //.\n  //. > empty(Array)\n  //. []\n  //.\n  //. > empty(Object)\n  //. {}\n  //.\n  //. > empty(List)\n  //. Nil\n  //. ```\n  function empty(typeRep) {\n    return Monoid.methods.empty(typeRep)();\n  }\n\n  //# invert :: Group g => g -> g\n  //.\n  //. Function wrapper for [`fantasy-land/invert`][].\n  //.\n  //. ```javascript\n  //. > invert(Sum(5))\n  //. Sum(-5)\n  //. ```\n  function invert(group) {\n    return Group.methods.invert(group)();\n  }\n\n  //# filter :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/filter`][]. Discards every element\n  //. which does not satisfy the predicate.\n  //.\n  //. `fantasy-land/filter` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`reject`](#reject).\n  //.\n  //. ```javascript\n  //. > filter(x => x % 2 == 1, [1, 2, 3])\n  //. [1, 3]\n  //.\n  //. > filter(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {x: 1, z: 3}\n  //.\n  //. > filter(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > filter(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(0))\n  //. Nothing\n  //.\n  //. > filter(x => x % 2 == 1, Just(1))\n  //. Just(1)\n  //. ```\n  function filter(pred, filterable) {\n    return Filterable.methods.filter(filterable)(pred);\n  }\n\n  //# reject :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards every element which satisfies the predicate.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. ```javascript\n  //. > reject(x => x % 2 == 1, [1, 2, 3])\n  //. [2]\n  //.\n  //. > reject(x => x % 2 == 1, {x: 1, y: 2, z: 3})\n  //. {y: 2}\n  //.\n  //. > reject(x => x % 2 == 1, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(2, Nil)\n  //.\n  //. > reject(x => x % 2 == 1, Nothing)\n  //. Nothing\n  //.\n  //. > reject(x => x % 2 == 1, Just(0))\n  //. Just(0)\n  //.\n  //. > reject(x => x % 2 == 1, Just(1))\n  //. Nothing\n  //. ```\n  function reject(pred, filterable) {\n    return filter(function(x) { return !pred(x); }, filterable);\n  }\n\n  //# takeWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Discards the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`dropWhile`](#dropWhile).\n  //.\n  //. ```javascript\n  //. > takeWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx']\n  //.\n  //. > takeWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy']\n  //.\n  //. > takeWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. []\n  //. ```\n  function takeWhile(pred, filterable) {\n    var take = true;\n    return filter(function(x) { return take = take && pred(x); }, filterable);\n  }\n\n  //# dropWhile :: Filterable f => (a -> Boolean, f a) -> f a\n  //.\n  //. Retains the first element which does not satisfy the predicate, and all\n  //. subsequent elements.\n  //.\n  //. This function is derived from [`filter`](#filter).\n  //.\n  //. See also [`takeWhile`](#takeWhile).\n  //.\n  //. ```javascript\n  //. > dropWhile(s => /x/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /y/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xz', 'yx', 'yz', 'zx', 'zy']\n  //.\n  //. > dropWhile(s => /z/.test(s), ['xy', 'xz', 'yx', 'yz', 'zx', 'zy'])\n  //. ['xy', 'xz', 'yx', 'yz', 'zx', 'zy']\n  //. ```\n  function dropWhile(pred, filterable) {\n    var take = false;\n    return filter(function(x) { return take = take || !pred(x); }, filterable);\n  }\n\n  //# map :: Functor f => (a -> b, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/map`][].\n  //.\n  //. `fantasy-land/map` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > map(Math.sqrt, [1, 4, 9])\n  //. [1, 2, 3]\n  //.\n  //. > map(Math.sqrt, {x: 1, y: 4, z: 9})\n  //. {x: 1, y: 2, z: 3}\n  //.\n  //. > map(Math.sqrt, s => s.length)('Sanctuary')\n  //. 3\n  //.\n  //. > map(Math.sqrt, Tuple('foo', 64))\n  //. Tuple('foo', 8)\n  //.\n  //. > map(Math.sqrt, Nil)\n  //. Nil\n  //.\n  //. > map(Math.sqrt, Cons(1, Cons(4, Cons(9, Nil))))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function map(f, functor) {\n    return Functor.methods.map(functor)(f);\n  }\n\n  //# flip :: Functor f => (f (a -> b), a) -> f b\n  //.\n  //. Maps over the given functions, applying each to the given value.\n  //.\n  //. This function is derived from [`map`](#map).\n  //.\n  //. ```javascript\n  //. > flip(x => y => x + y, '!')('foo')\n  //. 'foo!'\n  //.\n  //. > flip([Math.floor, Math.ceil], 1.5)\n  //. [1, 2]\n  //.\n  //. > flip({floor: Math.floor, ceil: Math.ceil}, 1.5)\n  //. {floor: 1, ceil: 2}\n  //.\n  //. > flip(Cons(Math.floor, Cons(Math.ceil, Nil)), 1.5)\n  //. Cons(1, Cons(2, Nil))\n  //. ```\n  function flip(functor, x) {\n    return Functor.methods.map(functor)(thrush(x));\n  }\n\n  //# bimap :: Bifunctor f => (a -> b, c -> d, f a c) -> f b d\n  //.\n  //. Function wrapper for [`fantasy-land/bimap`][].\n  //.\n  //. ```javascript\n  //. > bimap(s => s.toUpperCase(), Math.sqrt, Tuple('foo', 64))\n  //. Tuple('FOO', 8)\n  //. ```\n  function bimap(f, g, bifunctor) {\n    return Bifunctor.methods.bimap(bifunctor)(f, g);\n  }\n\n  //# mapLeft :: Bifunctor f => (a -> b, f a c) -> f b c\n  //.\n  //. Maps the given function over the left side of a Bifunctor.\n  //.\n  //. ```javascript\n  //. > mapLeft(Math.sqrt, Tuple(64, 9))\n  //. Tuple(8, 9)\n  //. ```\n  function mapLeft(f, bifunctor) {\n    return bimap(f, identity, bifunctor);\n  }\n\n  //# promap :: Profunctor p => (a -> b, c -> d, p b c) -> p a d\n  //.\n  //. Function wrapper for [`fantasy-land/promap`][].\n  //.\n  //. `fantasy-land/promap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > promap(Math.abs, x => x + 1, Math.sqrt)(-100)\n  //. 11\n  //. ```\n  function promap(f, g, profunctor) {\n    return Profunctor.methods.promap(profunctor)(f, g);\n  }\n\n  //# ap :: Apply f => (f (a -> b), f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/ap`][].\n  //.\n  //. `fantasy-land/ap` implementations are provided for the following\n  //. built-in types: Array, Object, and Function.\n  //.\n  //. ```javascript\n  //. > ap([Math.sqrt, x => x * x], [1, 4, 9, 16, 25])\n  //. [1, 2, 3, 4, 5, 1, 16, 81, 256, 625]\n  //.\n  //. > ap({a: Math.sqrt, b: x => x * x}, {a: 16, b: 10, c: 1})\n  //. {a: 4, b: 100}\n  //.\n  //. > ap(s => n => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //.\n  //. > ap(Identity(Math.sqrt), Identity(64))\n  //. Identity(8)\n  //.\n  //. > ap(Cons(Math.sqrt, Cons(x => x * x, Nil)), Cons(16, Cons(100, Nil)))\n  //. Cons(4, Cons(10, Cons(256, Cons(10000, Nil))))\n  //. ```\n  function ap(applyF, applyX) {\n    return Apply.methods.ap(applyX)(applyF);\n  }\n\n  //# lift2 :: Apply f => (a -> b -> c, f a, f b) -> f c\n  //.\n  //. Lifts `a -> b -> c` to `Apply f => f a -> f b -> f c` and returns the\n  //. result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift3`](#lift3).\n  //.\n  //. ```javascript\n  //. > lift2(x => y => Math.pow(x, y), [10], [1, 2, 3])\n  //. [10, 100, 1000]\n  //.\n  //. > lift2(x => y => Math.pow(x, y), Identity(10), Identity(3))\n  //. Identity(1000)\n  //. ```\n  function lift2(f, x, y) {\n    return ap(map(f, x), y);\n  }\n\n  //# lift3 :: Apply f => (a -> b -> c -> d, f a, f b, f c) -> f d\n  //.\n  //. Lifts `a -> b -> c -> d` to `Apply f => f a -> f b -> f c -> f d` and\n  //. returns the result of applying this to the given arguments.\n  //.\n  //. This function is derived from [`map`](#map) and [`ap`](#ap).\n  //.\n  //. See also [`lift2`](#lift2).\n  //.\n  //. ```javascript\n  //. > lift3(x => y => z => x + z + y, ['<'], ['>'], ['foo', 'bar', 'baz'])\n  //. ['<foo>', '<bar>', '<baz>']\n  //.\n  //. > lift3(x => y => z => x + z + y, Identity('<'), Identity('>'), Identity('baz'))\n  //. Identity('<baz>')\n  //. ```\n  function lift3(f, x, y, z) {\n    return ap(ap(map(f, x), y), z);\n  }\n\n  //# apFirst :: Apply f => (f a, f b) -> f a\n  //.\n  //. Combines two effectful actions, keeping only the result of the first.\n  //. Equivalent to Haskell's `(<*)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apSecond`](#apSecond).\n  //.\n  //. ```javascript\n  //. > apFirst([1, 2], [3, 4])\n  //. [1, 1, 2, 2]\n  //.\n  //. > apFirst(Identity(1), Identity(2))\n  //. Identity(1)\n  //. ```\n  function apFirst(x, y) {\n    return lift2(constant, x, y);\n  }\n\n  //# apSecond :: Apply f => (f a, f b) -> f b\n  //.\n  //. Combines two effectful actions, keeping only the result of the second.\n  //. Equivalent to Haskell's `(*>)` function.\n  //.\n  //. This function is derived from [`lift2`](#lift2).\n  //.\n  //. See also [`apFirst`](#apFirst).\n  //.\n  //. ```javascript\n  //. > apSecond([1, 2], [3, 4])\n  //. [3, 4, 3, 4]\n  //.\n  //. > apSecond(Identity(1), Identity(2))\n  //. Identity(2)\n  //. ```\n  function apSecond(x, y) {\n    return lift2(constant(identity), x, y);\n  }\n\n  //# of :: Applicative f => (TypeRep f, a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/of`][].\n  //.\n  //. `fantasy-land/of` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > of(Array, 42)\n  //. [42]\n  //.\n  //. > of(Function, 42)(null)\n  //. 42\n  //.\n  //. > of(List, 42)\n  //. Cons(42, Nil)\n  //. ```\n  function of(typeRep, x) {\n    return Applicative.methods.of(typeRep)(x);\n  }\n\n  //# append :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of appending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`prepend`](#prepend).\n  //.\n  //. ```javascript\n  //. > append(3, [1, 2])\n  //. [1, 2, 3]\n  //.\n  //. > append(3, Cons(1, Cons(2, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function append(x, xs) {\n    return concat(xs, of(xs.constructor, x));\n  }\n\n  //# prepend :: (Applicative f, Semigroup (f a)) => (a, f a) -> f a\n  //.\n  //. Returns the result of prepending the first argument to the second.\n  //.\n  //. This function is derived from [`concat`](#concat) and [`of`](#of).\n  //.\n  //. See also [`append`](#append).\n  //.\n  //. ```javascript\n  //. > prepend(1, [2, 3])\n  //. [1, 2, 3]\n  //.\n  //. > prepend(1, Cons(2, Cons(3, Nil)))\n  //. Cons(1, Cons(2, Cons(3, Nil)))\n  //. ```\n  function prepend(x, xs) {\n    return concat(of(xs.constructor, x), xs);\n  }\n\n  //# chain :: Chain m => (a -> m b, m a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chain`][].\n  //.\n  //. `fantasy-land/chain` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > chain(x => [x, x], [1, 2, 3])\n  //. [1, 1, 2, 2, 3, 3]\n  //.\n  //. > chain(x => x % 2 == 1 ? of(List, x) : Nil, Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(1, Cons(3, Nil))\n  //.\n  //. > chain(n => s => s.slice(0, n), s => Math.ceil(s.length / 2))('Haskell')\n  //. 'Hask'\n  //. ```\n  function chain(f, chain_) {\n    return Chain.methods.chain(chain_)(f);\n  }\n\n  //# join :: Chain m => m (m a) -> m a\n  //.\n  //. Removes one level of nesting from a nested monadic structure.\n  //.\n  //. This function is derived from [`chain`](#chain).\n  //.\n  //. ```javascript\n  //. > join([[1], [2], [3]])\n  //. [1, 2, 3]\n  //.\n  //. > join([[[1, 2, 3]]])\n  //. [[1, 2, 3]]\n  //.\n  //. > join(Identity(Identity(1)))\n  //. Identity(1)\n  //. ```\n  function join(chain_) {\n    return chain(identity, chain_);\n  }\n\n  //# chainRec :: ChainRec m => (TypeRep m, (a -> c, b -> c, a) -> m c, a) -> m b\n  //.\n  //. Function wrapper for [`fantasy-land/chainRec`][].\n  //.\n  //. `fantasy-land/chainRec` implementations are provided for the following\n  //. built-in types: Array.\n  //.\n  //. ```javascript\n  //. > chainRec(\n  //. .   Array,\n  //. .   (next, done, s) => s.length == 2 ? [s + '!', s + '?'].map(done)\n  //. .                                    : [s + 'o', s + 'n'].map(next),\n  //. .   ''\n  //. . )\n  //. ['oo!', 'oo?', 'on!', 'on?', 'no!', 'no?', 'nn!', 'nn?']\n  //. ```\n  function chainRec(typeRep, f, x) {\n    return ChainRec.methods.chainRec(typeRep)(f, x);\n  }\n\n  //# alt :: Alt f => (f a, f a) -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/alt`][].\n  //.\n  //. `fantasy-land/alt` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > alt([1, 2, 3], [4, 5, 6])\n  //. [1, 2, 3, 4, 5, 6]\n  //.\n  //. > alt(Nothing, Nothing)\n  //. Nothing\n  //.\n  //. > alt(Nothing, Just(1))\n  //. Just(1)\n  //.\n  //. > alt(Just(2), Just(3))\n  //. Just(2)\n  //. ```\n  function alt(x, y) {\n    return Alt.methods.alt(x)(y);\n  }\n\n  //# zero :: Plus f => TypeRep f -> f a\n  //.\n  //. Function wrapper for [`fantasy-land/zero`][].\n  //.\n  //. `fantasy-land/zero` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > zero(Array)\n  //. []\n  //.\n  //. > zero(Object)\n  //. {}\n  //.\n  //. > zero(Maybe)\n  //. Nothing\n  //. ```\n  function zero(typeRep) {\n    return Plus.methods.zero(typeRep)();\n  }\n\n  //# reduce :: Foldable f => ((b, a) -> b, b, f a) -> b\n  //.\n  //. Function wrapper for [`fantasy-land/reduce`][].\n  //.\n  //. `fantasy-land/reduce` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. ```javascript\n  //. > reduce((xs, x) => [x].concat(xs), [], [1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reduce(concat, '', Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 'foobarbaz'\n  //. ```\n  function reduce(f, x, foldable) {\n    return Foldable.methods.reduce(foldable)(f, x);\n  }\n\n  //# size :: Foldable f => f a -> Integer\n  //.\n  //. Returns the number of elements of the given structure.\n  //.\n  //. This function is derived from [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > size([])\n  //. 0\n  //.\n  //. > size(['foo', 'bar', 'baz'])\n  //. 3\n  //.\n  //. > size(Nil)\n  //. 0\n  //.\n  //. > size(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. 3\n  //. ```\n  function size(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.length;\n    return reduce(function(n, _) { return n + 1; }, 0, foldable);\n  }\n\n  //# elem :: (Setoid a, Foldable f) => (a, f a) -> Boolean\n  //.\n  //. Takes a value and a structure and returns `true` if the\n  //. value is an element of the structure; `false` otherwise.\n  //.\n  //. This function is derived from [`equals`](#equals) and\n  //. [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > elem('c', ['a', 'b', 'c'])\n  //. true\n  //.\n  //. > elem('x', ['a', 'b', 'c'])\n  //. false\n  //.\n  //. > elem(3, {x: 1, y: 2, z: 3})\n  //. true\n  //.\n  //. > elem(8, {x: 1, y: 2, z: 3})\n  //. false\n  //.\n  //. > elem(0, Just(0))\n  //. true\n  //.\n  //. > elem(0, Just(1))\n  //. false\n  //.\n  //. > elem(0, Nothing)\n  //. false\n  //. ```\n  function elem(x, foldable) {\n    return reduce(function(b, y) { return b || equals(x, y); },\n                  false,\n                  foldable);\n  }\n\n  //# foldMap :: (Monoid m, Foldable f) => (TypeRep m, a -> m, f a) -> m\n  //.\n  //. Deconstructs a foldable by mapping every element to a monoid and\n  //. concatenating the results.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > foldMap(String, f => f.name, [Math.sin, Math.cos, Math.tan])\n  //. 'sincostan'\n  //. ```\n  function foldMap(typeRep, f, foldable) {\n    return reduce(function(monoid, x) { return concat(monoid, f(x)); },\n                  empty(typeRep),\n                  foldable);\n  }\n\n  //# reverse :: (Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Reverses the elements of the given structure.\n  //.\n  //. This function is derived from [`concat`](#concat), [`empty`](#empty),\n  //. [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. ```javascript\n  //. > reverse([1, 2, 3])\n  //. [3, 2, 1]\n  //.\n  //. > reverse(Cons(1, Cons(2, Cons(3, Nil))))\n  //. Cons(3, Cons(2, Cons(1, Nil)))\n  //. ```\n  function reverse(foldable) {\n    //  Fast path for arrays.\n    if (Array.isArray(foldable)) return foldable.slice().reverse();\n    var F = foldable.constructor;\n    return reduce(function(xs, x) { return concat(of(F, x), xs); },\n                  empty(F),\n                  foldable);\n  }\n\n  //# sort :: (Ord a, Applicative f, Foldable f, Monoid (f a)) => f a -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) for comparisons.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sortBy`](#sortBy).\n  //.\n  //. ```javascript\n  //. > sort(['foo', 'bar', 'baz'])\n  //. ['bar', 'baz', 'foo']\n  //.\n  //. > sort([Just(2), Nothing, Just(1)])\n  //. [Nothing, Just(1), Just(2)]\n  //.\n  //. > sort(Cons('foo', Cons('bar', Cons('baz', Nil))))\n  //. Cons('bar', Cons('baz', Cons('foo', Nil)))\n  //. ```\n  function sort(foldable) {\n    return sortBy(identity, foldable);\n  }\n\n  //# sortBy :: (Ord b, Applicative f, Foldable f, Monoid (f a)) => (a -> b, f a) -> f a\n  //.\n  //. Performs a [stable sort][] of the elements of the given structure,\n  //. using [`lte`](#lte) to compare the values produced by applying the\n  //. given function to each element of the structure.\n  //.\n  //. This function is derived from [`lte`](#lte), [`concat`](#concat),\n  //. [`empty`](#empty), [`of`](#of), and [`reduce`](#reduce).\n  //.\n  //. See also [`sort`](#sort).\n  //.\n  //. ```javascript\n  //. > sortBy(s => s.length, ['red', 'green', 'blue'])\n  //. ['red', 'blue', 'green']\n  //.\n  //. > sortBy(s => s.length, ['black', 'white'])\n  //. ['black', 'white']\n  //.\n  //. > sortBy(s => s.length, ['white', 'black'])\n  //. ['white', 'black']\n  //.\n  //. > sortBy(s => s.length, Cons('red', Cons('green', Cons('blue', Nil))))\n  //. Cons('red', Cons('blue', Cons('green', Nil)))\n  //. ```\n  function sortBy(f, foldable) {\n    var rs = reduce(function(rs, x) {\n      rs.push({idx: rs.length, x: x, fx: f(x)});\n      return rs;\n    }, [], foldable);\n\n    var lte_ = (function(r) {\n      switch (typeof (r && r.fx)) {\n        case 'number':  return function(x, y) { return x <= y || x !== x; };\n        case 'string':  return function(x, y) { return x <= y; };\n        default:        return lte;\n      }\n    }(rs[0]));\n\n    rs.sort(function(a, b) {\n      return lte_(a.fx, b.fx) ? lte_(b.fx, a.fx) ? a.idx - b.idx : -1 : 1;\n    });\n\n    if (Array.isArray(foldable)) {\n      for (var idx = 0; idx < rs.length; idx += 1) rs[idx] = rs[idx].x;\n      return rs;\n    }\n\n    var F = foldable.constructor;\n    var result = empty(F);\n    for (idx = 0; idx < rs.length; idx += 1) {\n      result = concat(result, of(F, rs[idx].x));\n    }\n    return result;\n  }\n\n  //# traverse :: (Applicative f, Traversable t) => (TypeRep f, a -> f b, t a) -> f (t b)\n  //.\n  //. Function wrapper for [`fantasy-land/traverse`][].\n  //.\n  //. `fantasy-land/traverse` implementations are provided for the following\n  //. built-in types: Array and Object.\n  //.\n  //. See also [`sequence`](#sequence).\n  //.\n  //. ```javascript\n  //. > traverse(Array, x => x, [[1, 2, 3], [4, 5]])\n  //. [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]\n  //.\n  //. > traverse(Identity, x => Identity(x + 1), [1, 2, 3])\n  //. Identity([2, 3, 4])\n  //. ```\n  function traverse(typeRep, f, traversable) {\n    return Traversable.methods.traverse(traversable)(typeRep, f);\n  }\n\n  //# sequence :: (Applicative f, Traversable t) => (TypeRep f, t (f a)) -> f (t a)\n  //.\n  //. Inverts the given `t (f a)` to produce an `f (t a)`.\n  //.\n  //. This function is derived from [`traverse`](#traverse).\n  //.\n  //. ```javascript\n  //. > sequence(Array, Identity([1, 2, 3]))\n  //. [Identity(1), Identity(2), Identity(3)]\n  //.\n  //. > sequence(Identity, [Identity(1), Identity(2), Identity(3)])\n  //. Identity([1, 2, 3])\n  //. ```\n  function sequence(typeRep, traversable) {\n    return traverse(typeRep, identity, traversable);\n  }\n\n  //# extend :: Extend w => (w a -> b, w a) -> w b\n  //.\n  //. Function wrapper for [`fantasy-land/extend`][].\n  //.\n  //. `fantasy-land/extend` implementations are provided for the following\n  //. built-in types: Array and Function.\n  //.\n  //. ```javascript\n  //. > extend(ss => ss.join(''), ['x', 'y', 'z'])\n  //. ['xyz', 'yz', 'z']\n  //.\n  //. > extend(f => f([3, 4]), reverse)([1, 2])\n  //. [4, 3, 2, 1]\n  //. ```\n  function extend(f, extend_) {\n    return Extend.methods.extend(extend_)(f);\n  }\n\n  //# duplicate :: Extend w => w a -> w (w a)\n  //.\n  //. Adds one level of nesting to a comonadic structure.\n  //.\n  //. This function is derived from [`extend`](#extend).\n  //.\n  //. ```javascript\n  //. > duplicate(Identity(1))\n  //. Identity(Identity(1))\n  //.\n  //. > duplicate([1])\n  //. [[1]]\n  //.\n  //. > duplicate([1, 2, 3])\n  //. [[1, 2, 3], [2, 3], [3]]\n  //.\n  //. > duplicate(reverse)([1, 2])([3, 4])\n  //. [4, 3, 2, 1]\n  //. ```\n  function duplicate(extend_) {\n    return extend(identity, extend_);\n  }\n\n  //# extract :: Comonad w => w a -> a\n  //.\n  //. Function wrapper for [`fantasy-land/extract`][].\n  //.\n  //. ```javascript\n  //. > extract(Identity(42))\n  //. 42\n  //. ```\n  function extract(comonad) {\n    return Comonad.methods.extract(comonad)();\n  }\n\n  //# contramap :: Contravariant f => (b -> a, f a) -> f b\n  //.\n  //. Function wrapper for [`fantasy-land/contramap`][].\n  //.\n  //. `fantasy-land/contramap` implementations are provided for the following\n  //. built-in types: Function.\n  //.\n  //. ```javascript\n  //. > contramap(s => s.length, Math.sqrt)('Sanctuary')\n  //. 3\n  //. ```\n  function contramap(f, contravariant) {\n    return Contravariant.methods.contramap(contravariant)(f);\n  }\n\n  return {\n    TypeClass: TypeClass,\n    Setoid: Setoid,\n    Ord: Ord,\n    Semigroupoid: Semigroupoid,\n    Category: Category,\n    Semigroup: Semigroup,\n    Monoid: Monoid,\n    Group: Group,\n    Filterable: Filterable,\n    Functor: Functor,\n    Bifunctor: Bifunctor,\n    Profunctor: Profunctor,\n    Apply: Apply,\n    Applicative: Applicative,\n    Chain: Chain,\n    ChainRec: ChainRec,\n    Monad: Monad,\n    Alt: Alt,\n    Plus: Plus,\n    Alternative: Alternative,\n    Foldable: Foldable,\n    Traversable: Traversable,\n    Extend: Extend,\n    Comonad: Comonad,\n    Contravariant: Contravariant,\n    equals: equals,\n    lt: lt,\n    lte: lte,\n    gt: gt,\n    gte: gte,\n    min: min,\n    max: max,\n    compose: compose,\n    id: id,\n    concat: concat,\n    empty: empty,\n    invert: invert,\n    filter: filter,\n    reject: reject,\n    map: map,\n    flip: flip,\n    bimap: bimap,\n    mapLeft: mapLeft,\n    promap: promap,\n    ap: ap,\n    lift2: lift2,\n    lift3: lift3,\n    apFirst: apFirst,\n    apSecond: apSecond,\n    of: of,\n    append: append,\n    prepend: prepend,\n    chain: chain,\n    join: join,\n    chainRec: chainRec,\n    alt: alt,\n    zero: zero,\n    reduce: reduce,\n    size: size,\n    elem: elem,\n    foldMap: foldMap,\n    reverse: reverse,\n    sort: sort,\n    sortBy: sortBy,\n    takeWhile: takeWhile,\n    dropWhile: dropWhile,\n    traverse: traverse,\n    sequence: sequence,\n    extend: extend,\n    duplicate: duplicate,\n    extract: extract,\n    contramap: contramap\n  };\n\n}));\n\n//. [Alt]:                      v:fantasyland/fantasy-land#alt\n//. [Alternative]:              v:fantasyland/fantasy-land#alternative\n//. [Applicative]:              v:fantasyland/fantasy-land#applicative\n//. [Apply]:                    v:fantasyland/fantasy-land#apply\n//. [Bifunctor]:                v:fantasyland/fantasy-land#bifunctor\n//. [Category]:                 v:fantasyland/fantasy-land#category\n//. [Chain]:                    v:fantasyland/fantasy-land#chain\n//. [ChainRec]:                 v:fantasyland/fantasy-land#chainrec\n//. [Comonad]:                  v:fantasyland/fantasy-land#comonad\n//. [Contravariant]:            v:fantasyland/fantasy-land#contravariant\n//. [Extend]:                   v:fantasyland/fantasy-land#extend\n//. [FL]:                       v:fantasyland/fantasy-land\n//. [Filterable]:               v:fantasyland/fantasy-land#filterable\n//. [Foldable]:                 v:fantasyland/fantasy-land#foldable\n//. [Functor]:                  v:fantasyland/fantasy-land#functor\n//. [Group]:                    v:fantasyland/fantasy-land#group\n//. [Monad]:                    v:fantasyland/fantasy-land#monad\n//. [Monoid]:                   v:fantasyland/fantasy-land#monoid\n//. [Ord]:                      v:fantasyland/fantasy-land#ord\n//. [Plus]:                     v:fantasyland/fantasy-land#plus\n//. [Profunctor]:               v:fantasyland/fantasy-land#profunctor\n//. [Semigroup]:                v:fantasyland/fantasy-land#semigroup\n//. [Semigroupoid]:             v:fantasyland/fantasy-land#semigroupoid\n//. [Setoid]:                   v:fantasyland/fantasy-land#setoid\n//. [Traversable]:              v:fantasyland/fantasy-land#traversable\n//. [`fantasy-land/alt`]:       v:fantasyland/fantasy-land#alt-method\n//. [`fantasy-land/ap`]:        v:fantasyland/fantasy-land#ap-method\n//. [`fantasy-land/bimap`]:     v:fantasyland/fantasy-land#bimap-method\n//. [`fantasy-land/chain`]:     v:fantasyland/fantasy-land#chain-method\n//. [`fantasy-land/chainRec`]:  v:fantasyland/fantasy-land#chainrec-method\n//. [`fantasy-land/compose`]:   v:fantasyland/fantasy-land#compose-method\n//. [`fantasy-land/concat`]:    v:fantasyland/fantasy-land#concat-method\n//. [`fantasy-land/contramap`]: v:fantasyland/fantasy-land#contramap-method\n//. [`fantasy-land/empty`]:     v:fantasyland/fantasy-land#empty-method\n//. [`fantasy-land/equals`]:    v:fantasyland/fantasy-land#equals-method\n//. [`fantasy-land/extend`]:    v:fantasyland/fantasy-land#extend-method\n//. [`fantasy-land/extract`]:   v:fantasyland/fantasy-land#extract-method\n//. [`fantasy-land/filter`]:    v:fantasyland/fantasy-land#filter-method\n//. [`fantasy-land/id`]:        v:fantasyland/fantasy-land#id-method\n//. [`fantasy-land/invert`]:    v:fantasyland/fantasy-land#invert-method\n//. [`fantasy-land/lte`]:       v:fantasyland/fantasy-land#lte-method\n//. [`fantasy-land/map`]:       v:fantasyland/fantasy-land#map-method\n//. [`fantasy-land/of`]:        v:fantasyland/fantasy-land#of-method\n//. [`fantasy-land/promap`]:    v:fantasyland/fantasy-land#promap-method\n//. [`fantasy-land/reduce`]:    v:fantasyland/fantasy-land#reduce-method\n//. [`fantasy-land/traverse`]:  v:fantasyland/fantasy-land#traverse-method\n//. [`fantasy-land/zero`]:      v:fantasyland/fantasy-land#zero-method\n//. [stable sort]:              https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n//. [type-classes]:             https://github.com/sanctuary-js/sanctuary-def#type-classes\n","/*              ___                 ______\n               /  /\\               /  ___/\\\n        ______/  / / _______    __/  /___\\/\n       /  ___   / / /  ___  \\  /_   __/\\\n      /  /\\_/  / / /  /__/  /\\ \\/  /\\_\\/\n     /  / //  / / /  ______/ / /  / /\n    /  /_//  / / /  /______\\/ /  / /\n    \\_______/ /  \\_______/\\  /__/ /\n     \\______\\/    \\______\\/  \\__*/\n\n//. # sanctuary-def\n//.\n//. sanctuary-def is a run-time type system for JavaScript. It facilitates\n//. the definition of curried JavaScript functions which are explicit about\n//. the number of arguments to which they may be applied and the types of\n//. those arguments.\n//.\n//. It is conventional to import the package as `$`:\n//.\n//. ```javascript\n//. const $ = require ('sanctuary-def');\n//. ```\n//.\n//. The next step is to define an environment. An environment is an array\n//. of [types][]. [`env`][] is an environment containing all the built-in\n//. JavaScript types. It may be used as the basis for environments which\n//. include custom types in addition to the built-in types:\n//.\n//. ```javascript\n//. //    Integer :: Type\n//. const Integer = '...';\n//.\n//. //    NonZeroInteger :: Type\n//. const NonZeroInteger = '...';\n//.\n//. //    env :: Array Type\n//. const env = $.env.concat ([Integer, NonZeroInteger]);\n//. ```\n//.\n//. Type constructors such as `List :: Type -> Type` cannot be included in\n//. an environment as they're not of the correct type. One could, though,\n//. use a type constructor to define a fixed number of concrete types:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([\n//.   List ($.Number),                // :: Type\n//.   List ($.String),                // :: Type\n//.   List (List ($.Number)),         // :: Type\n//.   List (List ($.String)),         // :: Type\n//.   List (List (List ($.Number))),  // :: Type\n//.   List (List (List ($.String))),  // :: Type\n//. ]);\n//. ```\n//.\n//. Not only would this be tedious, but one could never enumerate all possible\n//. types as there are infinitely many. Instead, one should use [`Unknown`][]:\n//.\n//. ```javascript\n//. //    env :: Array Type\n//. const env = $.env.concat ([List ($.Unknown)]);\n//. ```\n//.\n//. The next step is to define a `def` function for the environment:\n//.\n//. ```javascript\n//. const def = $.create ({checkTypes: true, env});\n//. ```\n//.\n//. The `checkTypes` option determines whether type checking is enabled.\n//. This allows one to only pay the performance cost of run-time type checking\n//. during development. For example:\n//.\n//. ```javascript\n//. const def = $.create ({\n//.   checkTypes: process.env.NODE_ENV === 'development',\n//.   env,\n//. });\n//. ```\n//.\n//. `def` is a function for defining functions. For example:\n//.\n//. ```javascript\n//. //    add :: Number -> Number -> Number\n//. const add =\n//. def ('add')\n//.     ({})\n//.     ([$.Number, $.Number, $.Number])\n//.     (x => y => x + y);\n//. ```\n//.\n//. `[$.Number, $.Number, $.Number]` specifies that `add` takes two arguments\n//. of type `Number`, one at a time, and returns a value of type `Number`.\n//.\n//. Applying `add` to two arguments, one at a time, gives the expected result:\n//.\n//. ```javascript\n//. add (2) (2);\n//. // => 4\n//. ```\n//.\n//. Applying `add` to multiple arguments at once results in an exception being\n//. thrown:\n//.\n//. ```javascript\n//. add (2, 2, 2);\n//. // ! TypeError: ‘add’ applied to the wrong number of arguments\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   Expected one argument but received three arguments:\n//. //\n//. //     - 2\n//. //     - 2\n//. //     - 2\n//. ```\n//.\n//. Applying `add` to one argument produces a function awaiting the remaining\n//. argument. This is known as partial application. Partial application allows\n//. more specific functions to be defined in terms of more general ones:\n//.\n//. ```javascript\n//. //    inc :: Number -> Number\n//. const inc = add (1);\n//.\n//. inc (7);\n//. // => 8\n//. ```\n//.\n//. JavaScript's implicit type coercion often obfuscates the source of type\n//. errors. Consider the following function:\n//.\n//. ```javascript\n//. //    _add :: Number -> Number -> Number\n//. const _add = x => y => x + y;\n//. ```\n//.\n//. The type signature indicates that `_add` takes arguments of type `Number`,\n//. but this is not enforced. This allows type errors to be silently ignored:\n//.\n//. ```javascript\n//. _add ('2') ('2');\n//. // => '22'\n//. ```\n//.\n//. `add`, on the other hand, throws if applied to arguments of the wrong\n//. types:\n//.\n//. ```javascript\n//. add ('2') ('2');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"2\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n//.\n//. Type checking is performed as arguments are provided (rather than once all\n//. arguments have been provided), so type errors are reported early:\n//.\n//. ```javascript\n//. add ('X');\n//. // ! TypeError: Invalid value\n//. //\n//. //   add :: Number -> Number -> Number\n//. //          ^^^^^^\n//. //            1\n//. //\n//. //   1)  \"X\" :: String\n//. //\n//. //   The value at position 1 is not a member of ‘Number’.\n//. ```\n\n(function(f) {\n\n  'use strict';\n\n  /* istanbul ignore else */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f (require ('sanctuary-either'),\n                        require ('sanctuary-show'),\n                        require ('sanctuary-type-classes'),\n                        require ('sanctuary-type-identifiers'));\n  } else if (typeof define === 'function' && define.amd != null) {\n    define (['sanctuary-either',\n             'sanctuary-show',\n             'sanctuary-type-classes',\n             'sanctuary-type-identifiers'],\n            f);\n  } else {\n    self.sanctuaryDef = f (self.sanctuaryEither,\n                           self.sanctuaryShow,\n                           self.sanctuaryTypeClasses,\n                           self.sanctuaryTypeIdentifiers);\n  }\n\n} (function(Either, show, Z, type) {\n\n  'use strict';\n\n  var MAX_SAFE_INTEGER = Math.pow (2, 53) - 1;\n  var MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n\n  var slice             = Array.prototype.slice;\n  var hasOwnProperty    = Object.prototype.hasOwnProperty;\n  var toString          = Object.prototype.toString;\n\n  var inspect = (function() {\n    /* istanbul ignore else */\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n      var util = require ('util');\n      /* istanbul ignore else */\n      if (typeof util.inspect.custom === 'symbol') return util.inspect.custom;\n    }\n    return 'inspect';\n  } ());\n\n  //  Left :: a -> Either a b\n  var Left = Either.Left;\n\n  //  Right :: b -> Either a b\n  var Right = Either.Right;\n\n  //  K :: a -> b -> a\n  function K(x) { return function(y) { return x; }; }\n\n  //  W :: (a -> a -> b) -> a -> b\n  function W(f) { return function(x) { return f (x) (x); }; }\n\n  //  always0 :: a -> () -> a\n  function always0(x) { return function() { return x; }; }\n\n  //  always2 :: a -> (b, c) -> a\n  function always2(x) { return function(y, z) { return x; }; }\n\n  //  compose :: (b -> c, a -> b) -> (a -> c)\n  function compose(f, g) {\n    return function(x) {\n      return f (g (x));\n    };\n  }\n\n  //  id :: a -> a\n  function id(x) { return x; }\n\n  //  init :: Array a -> Array a\n  function init(xs) { return xs.slice (0, -1); }\n\n  //  isEmpty :: Array a -> Boolean\n  function isEmpty(xs) { return xs.length === 0; }\n\n  //  isPrefix :: Array a -> Array a -> Boolean\n  function isPrefix(candidate) {\n    return function(xs) {\n      if (candidate.length > xs.length) return false;\n      for (var idx = 0; idx < candidate.length; idx += 1) {\n        if (candidate[idx] !== xs[idx]) return false;\n      }\n      return true;\n    };\n  }\n\n  //  joinWith :: (String, Array String) -> String\n  function joinWith(separator, ss) {\n    return ss.join (separator);\n  }\n\n  //  last :: Array a -> a\n  function last(xs) { return xs[xs.length - 1]; }\n\n  //  memberOf :: Array a -> a -> Boolean\n  function memberOf(xs) {\n    return function(y) {\n      return xs.some (function(x) { return Z.equals (x, y); });\n    };\n  }\n\n  //  or :: (Array a, Array a) -> Array a\n  function or(xs, ys) { return isEmpty (xs) ? ys : xs; }\n\n  //  strRepeat :: (String, Integer) -> String\n  function strRepeat(s, times) {\n    return joinWith (s, Array (times + 1));\n  }\n\n  //  r :: Char -> String -> String\n  function r(c) {\n    return function(s) {\n      return strRepeat (c, s.length);\n    };\n  }\n\n  //  _ :: String -> String\n  var _ = r (' ');\n\n  //  sortedKeys :: Object -> Array String\n  function sortedKeys(o) {\n    return (Object.keys (o)).sort ();\n  }\n\n  //  stripOutermostParens :: String -> String\n  function stripOutermostParens(s) {\n    return s.slice ('('.length, -')'.length);\n  }\n\n  //  toMarkdownList :: (String, String, a -> String, Array a) -> String\n  function toMarkdownList(empty, s, f, xs) {\n    return isEmpty (xs) ?\n      empty :\n      Z.reduce (function(s, x) { return s + '  - ' + f (x) + '\\n'; }, s, xs);\n  }\n\n  //  trimTrailingSpaces :: String -> String\n  function trimTrailingSpaces(s) {\n    return s.replace (/[ ]+$/gm, '');\n  }\n\n  //  unless :: (Boolean, (a -> a), a) -> a\n  function unless(bool, f, x) {\n    return bool ? x : f (x);\n  }\n\n  //  when :: (Boolean, (a -> a), a) -> a\n  function when(bool, f, x) {\n    return bool ? f (x) : x;\n  }\n\n  //  wrap :: String -> String -> String -> String\n  function wrap(prefix) {\n    return function(suffix) {\n      return function(s) {\n        return prefix + s + suffix;\n      };\n    };\n  }\n\n  //  parenthesize :: String -> String\n  var parenthesize = wrap ('(') (')');\n\n  //  q :: String -> String\n  var q = wrap ('\\u2018') ('\\u2019');\n\n  //  stripNamespace :: String -> String\n  function stripNamespace(s) { return s.slice (s.indexOf ('/') + 1); }\n\n  //  _Type :: ... -> Type\n  function _Type(\n    type,       // :: String\n    name,       // :: String\n    url,        // :: String\n    format,     // :: (String -> String, String -> String -> String) -> String\n    test,       // :: Any -> Boolean\n    keys,       // :: Array String\n    types       // :: StrMap { extractor :: a -> Array b, type :: Type }\n  ) {\n    this._test = test;\n    this.format = format;\n    this.keys = keys;\n    this.name = name;\n    this.type = type;\n    this.types = types;\n    this.url = url;\n  }\n\n  _Type['@@type'] = 'sanctuary-def/Type';\n\n  //  Type#fantasy-land/equals :: Type ~> Type -> Boolean\n  _Type.prototype['fantasy-land/equals'] = function(other) {\n    return (\n      Z.equals (this.type, other.type) &&\n      Z.equals (this.name, other.name) &&\n      Z.equals (this.url, other.url) &&\n      Z.equals (this.keys, other.keys) &&\n      this.keys.every (function(k) {\n        return Z.equals (this.types[k].type, other.types[k].type);\n      }, this)\n    );\n  };\n\n  _Type.prototype.validate = function(x) {\n    if (!(this._test (x))) return Left ({value: x, propPath: []});\n    for (var idx = 0; idx < this.keys.length; idx += 1) {\n      var k = this.keys[idx];\n      var t = this.types[k];\n      for (var idx2 = 0, ys = t.extractor (x); idx2 < ys.length; idx2 += 1) {\n        var result = t.type.validate (ys[idx2]);\n        if (result.isLeft) {\n          var value = result.value.value;\n          var propPath = Z.concat ([k], result.value.propPath);\n          return Left ({value: value, propPath: propPath});\n        }\n      }\n    }\n    return Right (x);\n  };\n\n  _Type.prototype['@@show'] = function() {\n    return this.format (id, K (id));\n  };\n\n  var BINARY        = 'BINARY';\n  var FUNCTION      = 'FUNCTION';\n  var INCONSISTENT  = 'INCONSISTENT';\n  var NO_ARGUMENTS  = 'NO_ARGUMENTS';\n  var NULLARY       = 'NULLARY';\n  var RECORD        = 'RECORD';\n  var UNARY         = 'UNARY';\n  var UNKNOWN       = 'UNKNOWN';\n  var VARIABLE      = 'VARIABLE';\n\n  //  Inconsistent :: Type\n  var Inconsistent =\n  new _Type (INCONSISTENT, '', '', always2 ('???'), K (false), [], {});\n\n  //  NoArguments :: Type\n  var NoArguments =\n  new _Type (NO_ARGUMENTS, '', '', always2 ('()'), K (true), [], {});\n\n  //  typeEq :: String -> a -> Boolean\n  function typeEq(name) {\n    return function(x) {\n      return type (x) === name;\n    };\n  }\n\n  //  typeofEq :: String -> a -> Boolean\n  function typeofEq(typeof_) {\n    return function(x) {\n      // eslint-disable-next-line valid-typeof\n      return typeof x === typeof_;\n    };\n  }\n\n  //  functionUrl :: String -> String\n  function functionUrl(name) {\n    var version = '0.18.1';  // updated programmatically\n    return 'https://github.com/sanctuary-js/sanctuary-def/tree/v' + version +\n           '#' + stripNamespace (name);\n  }\n\n  //  NullaryTypeWithUrl :: (String, Any -> Boolean) -> Type\n  function NullaryTypeWithUrl(name, test) {\n    return NullaryType (name) (functionUrl (name)) (test);\n  }\n\n  //  EnumTypeWithUrl :: (String, Array Any) -> Type\n  function EnumTypeWithUrl(name, members) {\n    return EnumType (name) (functionUrl (name)) (members);\n  }\n\n  //  UnaryTypeWithUrl ::\n  //    (String, Any -> Boolean, t a -> Array a) -> (Type -> Type)\n  function UnaryTypeWithUrl(name, test, _1) {\n    return UnaryType (name) (functionUrl (name)) (test) (_1);\n  }\n\n  //  BinaryTypeWithUrl ::\n  //    (String, Any -> Boolean, t a b -> Array a, t a b -> Array b) ->\n  //      ((Type, Type) -> Type)\n  function BinaryTypeWithUrl(name, test, _1, _2) {\n    return BinaryType (name) (functionUrl (name)) (test) (_1) (_2);\n  }\n\n  //. ### Types\n  //.\n  //. Conceptually, a type is a set of values. One can think of a value of\n  //. type `Type` as a function of type `Any -> Boolean` which tests values\n  //. for membership in the set (though this is an oversimplification).\n\n  //# Any :: Type\n  //.\n  //. Type comprising every JavaScript value.\n  var Any = NullaryTypeWithUrl ('sanctuary-def/Any', K (true));\n\n  //# AnyFunction :: Type\n  //.\n  //. Type comprising every Function value.\n  var AnyFunction = NullaryTypeWithUrl ('Function', typeofEq ('function'));\n\n  //# Arguments :: Type\n  //.\n  //. Type comprising every [`arguments`][arguments] object.\n  var Arguments = NullaryTypeWithUrl ('Arguments', typeEq ('Arguments'));\n\n  //# Array :: Type -> Type\n  //.\n  //. Constructor for homogeneous Array types.\n  var Array_ = UnaryTypeWithUrl ('Array', typeEq ('Array'), id);\n\n  //# Array0 :: Type\n  //.\n  //. Type whose sole member is `[]`.\n  var Array0 = NullaryTypeWithUrl (\n    'sanctuary-def/Array0',\n    function(x) { return typeEq ('Array') (x) && x.length === 0; }\n  );\n\n  //# Array1 :: Type -> Type\n  //.\n  //. Constructor for singleton Array types.\n  var Array1 = UnaryTypeWithUrl (\n    'sanctuary-def/Array1',\n    function(x) { return typeEq ('Array') (x) && x.length === 1; },\n    id\n  );\n\n  //# Array2 :: Type -> Type -> Type\n  //.\n  //. Constructor for heterogeneous Array types of length 2. `['foo', true]` is\n  //. a member of `Array2 String Boolean`.\n  var Array2 = BinaryTypeWithUrl (\n    'sanctuary-def/Array2',\n    function(x) { return typeEq ('Array') (x) && x.length === 2; },\n    function(array2) { return [array2[0]]; },\n    function(array2) { return [array2[1]]; }\n  );\n\n  //# Boolean :: Type\n  //.\n  //. Type comprising `true` and `false`.\n  var Boolean_ = NullaryTypeWithUrl ('Boolean', typeofEq ('boolean'));\n\n  //# Date :: Type\n  //.\n  //. Type comprising every Date value.\n  var Date_ = NullaryTypeWithUrl ('Date', typeEq ('Date'));\n\n  //# Error :: Type\n  //.\n  //. Type comprising every Error value, including values of more specific\n  //. constructors such as [`SyntaxError`][] and [`TypeError`][].\n  var Error_ = NullaryTypeWithUrl ('Error', typeEq ('Error'));\n\n  //# FiniteNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `Infinity` and\n  //. `-Infinity`.\n  var FiniteNumber = NullaryTypeWithUrl (\n    'sanctuary-def/FiniteNumber',\n    function(x) { return ValidNumber._test (x) && isFinite (x); }\n  );\n\n  //  augmentThunk :: NonEmpty (Array Type) -> NonEmpty (Array Type)\n  function augmentThunk(types) {\n    return types.length === 1 ? Z.concat ([NoArguments], types) : types;\n  }\n\n  //# Function :: NonEmpty (Array Type) -> Type\n  //.\n  //. Constructor for Function types.\n  //.\n  //. Examples:\n  //.\n  //.   - `$.Function ([$.Date, $.String])` represents the `Date -> String`\n  //.     type; and\n  //.   - `$.Function ([a, b, a])` represents the `(a, b) -> a` type.\n  function Function_(_types) {\n    var types = augmentThunk (_types);\n\n    function format(outer, inner) {\n      var xs = types.map (function(t, idx) {\n        return unless (t.type === RECORD || isEmpty (t.keys),\n                       stripOutermostParens,\n                       inner ('$' + show (idx + 1)) (show (t)));\n      });\n      var parenthesize = wrap (outer ('(')) (outer (')'));\n      return parenthesize (unless (types.length === 2,\n                                   parenthesize,\n                                   joinWith (outer (', '), init (xs))) +\n                           outer (' -> ') +\n                           last (xs));\n    }\n\n    var test = AnyFunction._test;\n\n    var $keys = [];\n    var $types = {};\n    types.forEach (function(t, idx) {\n      var k = '$' + show (idx + 1);\n      $keys.push (k);\n      $types[k] = {extractor: K ([]), type: t};\n    });\n\n    return new _Type (FUNCTION, '', '', format, test, $keys, $types);\n  }\n\n  //# GlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `true`.\n  //.\n  //. See also [`NonGlobalRegExp`][].\n  var GlobalRegExp = NullaryTypeWithUrl (\n    'sanctuary-def/GlobalRegExp',\n    function(x) { return RegExp_._test (x) && x.global; }\n  );\n\n  //# HtmlElement :: Type\n  //.\n  //. Type comprising every [HTML element][].\n  var HtmlElement = NullaryTypeWithUrl (\n    'sanctuary-def/HtmlElement',\n    function(x) {\n      return /^\\[object HTML.+Element\\]$/.test (toString.call (x));\n    }\n  );\n\n  //# Integer :: Type\n  //.\n  //. Type comprising every integer in the range\n  //. [[`Number.MIN_SAFE_INTEGER`][min] .. [`Number.MAX_SAFE_INTEGER`][max]].\n  var Integer = NullaryTypeWithUrl (\n    'sanctuary-def/Integer',\n    function(x) {\n      return ValidNumber._test (x) &&\n             Math.floor (x) === x &&\n             x >= MIN_SAFE_INTEGER &&\n             x <= MAX_SAFE_INTEGER;\n    }\n  );\n\n  //# NegativeFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value less than zero.\n  var NegativeFiniteNumber = NullaryTypeWithUrl (\n    'sanctuary-def/NegativeFiniteNumber',\n    function(x) { return FiniteNumber._test (x) && x < 0; }\n  );\n\n  //# NegativeInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value less than zero.\n  var NegativeInteger = NullaryTypeWithUrl (\n    'sanctuary-def/NegativeInteger',\n    function(x) { return Integer._test (x) && x < 0; }\n  );\n\n  //# NegativeNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value less than zero.\n  var NegativeNumber = NullaryTypeWithUrl (\n    'sanctuary-def/NegativeNumber',\n    function(x) { return Number_._test (x) && x < 0; }\n  );\n\n  //# NonEmpty :: Type -> Type\n  //.\n  //. Constructor for non-empty types. `$.NonEmpty ($.String)`, for example, is\n  //. the type comprising every [`String`][] value except `''`.\n  //.\n  //. The given type must satisfy the [Monoid][] and [Setoid][] specifications.\n  var NonEmpty = UnaryTypeWithUrl (\n    'sanctuary-def/NonEmpty',\n    function(x) {\n      return Z.Monoid.test (x) &&\n             Z.Setoid.test (x) &&\n             !(Z.equals (x, Z.empty (x.constructor)));\n    },\n    function(monoid) { return [monoid]; }\n  );\n\n  //# NonGlobalRegExp :: Type\n  //.\n  //. Type comprising every [`RegExp`][] value whose `global` flag is `false`.\n  //.\n  //. See also [`GlobalRegExp`][].\n  var NonGlobalRegExp = NullaryTypeWithUrl (\n    'sanctuary-def/NonGlobalRegExp',\n    function(x) { return RegExp_._test (x) && !x.global; }\n  );\n\n  //# NonNegativeInteger :: Type\n  //.\n  //. Type comprising every non-negative [`Integer`][] value (including `-0`).\n  //. Also known as the set of natural numbers under ISO 80000-2:2009.\n  var NonNegativeInteger = NullaryTypeWithUrl (\n    'sanctuary-def/NonNegativeInteger',\n    function(x) { return Integer._test (x) && x >= 0; }\n  );\n\n  //# NonZeroFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value except `0` and `-0`.\n  var NonZeroFiniteNumber = NullaryTypeWithUrl (\n    'sanctuary-def/NonZeroFiniteNumber',\n    function(x) { return FiniteNumber._test (x) && x !== 0; }\n  );\n\n  //# NonZeroInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value except `0` and `-0`.\n  var NonZeroInteger = NullaryTypeWithUrl (\n    'sanctuary-def/NonZeroInteger',\n    function(x) { return Integer._test (x) && x !== 0; }\n  );\n\n  //# NonZeroValidNumber :: Type\n  //.\n  //. Type comprising every [`ValidNumber`][] value except `0` and `-0`.\n  var NonZeroValidNumber = NullaryTypeWithUrl (\n    'sanctuary-def/NonZeroValidNumber',\n    function(x) { return ValidNumber._test (x) && x !== 0; }\n  );\n\n  //# Null :: Type\n  //.\n  //. Type whose sole member is `null`.\n  var Null = NullaryTypeWithUrl ('Null', typeEq ('Null'));\n\n  //# Nullable :: Type -> Type\n  //.\n  //. Constructor for types which include `null` as a member.\n  var Nullable = UnaryTypeWithUrl (\n    'sanctuary-def/Nullable',\n    K (true),\n    function(nullable) {\n      // eslint-disable-next-line eqeqeq\n      return nullable === null ? [] : [nullable];\n    }\n  );\n\n  //# Number :: Type\n  //.\n  //. Type comprising every primitive Number value (including `NaN`).\n  var Number_ = NullaryTypeWithUrl ('Number', typeofEq ('number'));\n\n  //# Object :: Type\n  //.\n  //. Type comprising every \"plain\" Object value. Specifically, values\n  //. created via:\n  //.\n  //.   - object literal syntax;\n  //.   - [`Object.create`][]; or\n  //.   - the `new` operator in conjunction with `Object` or a custom\n  //.     constructor function.\n  var Object_ = NullaryTypeWithUrl ('Object', typeEq ('Object'));\n\n  //# PositiveFiniteNumber :: Type\n  //.\n  //. Type comprising every [`FiniteNumber`][] value greater than zero.\n  var PositiveFiniteNumber = NullaryTypeWithUrl (\n    'sanctuary-def/PositiveFiniteNumber',\n    function(x) { return FiniteNumber._test (x) && x > 0; }\n  );\n\n  //# PositiveInteger :: Type\n  //.\n  //. Type comprising every [`Integer`][] value greater than zero.\n  var PositiveInteger = NullaryTypeWithUrl (\n    'sanctuary-def/PositiveInteger',\n    function(x) { return Integer._test (x) && x > 0; }\n  );\n\n  //# PositiveNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value greater than zero.\n  var PositiveNumber = NullaryTypeWithUrl (\n    'sanctuary-def/PositiveNumber',\n    function(x) { return Number_._test (x) && x > 0; }\n  );\n\n  //# RegExp :: Type\n  //.\n  //. Type comprising every RegExp value.\n  var RegExp_ = NullaryTypeWithUrl ('RegExp', typeEq ('RegExp'));\n\n  //# RegexFlags :: Type\n  //.\n  //. Type comprising the canonical RegExp flags:\n  //.\n  //.   - `''`\n  //.   - `'g'`\n  //.   - `'i'`\n  //.   - `'m'`\n  //.   - `'gi'`\n  //.   - `'gm'`\n  //.   - `'im'`\n  //.   - `'gim'`\n  var RegexFlags = EnumTypeWithUrl (\n    'sanctuary-def/RegexFlags',\n    ['', 'g', 'i', 'm', 'gi', 'gm', 'im', 'gim']\n  );\n\n  //# StrMap :: Type -> Type\n  //.\n  //. Constructor for homogeneous Object types.\n  //.\n  //. `{foo: 1, bar: 2, baz: 3}`, for example, is a member of `StrMap Number`;\n  //. `{foo: 1, bar: 2, baz: 'XXX'}` is not.\n  var StrMap = UnaryTypeWithUrl (\n    'sanctuary-def/StrMap',\n    Object_._test,\n    function(strMap) {\n      return Z.reduce (function(xs, x) { xs.push (x); return xs; },\n                       [],\n                       strMap);\n    }\n  );\n\n  //# String :: Type\n  //.\n  //. Type comprising every primitive String value.\n  var String_ = NullaryTypeWithUrl ('String', typeofEq ('string'));\n\n  //# Symbol :: Type\n  //.\n  //. Type comprising every Symbol value.\n  var Symbol_ = NullaryTypeWithUrl ('Symbol', typeofEq ('symbol'));\n\n  //# Type :: Type\n  //.\n  //. Type comprising every `Type` value.\n  var Type = NullaryTypeWithUrl ('Type', typeEq ('sanctuary-def/Type'));\n\n  //# TypeClass :: Type\n  //.\n  //. Type comprising every [`TypeClass`][] value.\n  var TypeClass = NullaryTypeWithUrl (\n    'TypeClass',\n    typeEq ('sanctuary-type-classes/TypeClass')\n  );\n\n  //# Undefined :: Type\n  //.\n  //. Type whose sole member is `undefined`.\n  var Undefined = NullaryTypeWithUrl ('Undefined', typeEq ('Undefined'));\n\n  //# Unknown :: Type\n  //.\n  //. Type used to represent missing type information. The type of `[]`,\n  //. for example, is `Array ???`.\n  //.\n  //. May be used with type constructors when defining environments. Given a\n  //. type constructor `List :: Type -> Type`, one could use `List ($.Unknown)`\n  //. to include an infinite number of types in an environment:\n  //.\n  //.   - `List Number`\n  //.   - `List String`\n  //.   - `List (List Number)`\n  //.   - `List (List String)`\n  //.   - `List (List (List Number))`\n  //.   - `List (List (List String))`\n  //.   - `...`\n  var Unknown =\n  new _Type (UNKNOWN, '', '', always2 ('Unknown'), K (true), [], {});\n\n  //# ValidDate :: Type\n  //.\n  //. Type comprising every [`Date`][] value except `new Date (NaN)`.\n  var ValidDate = NullaryTypeWithUrl (\n    'sanctuary-def/ValidDate',\n    function(x) { return Date_._test (x) && !isNaN (x.valueOf ()); }\n  );\n\n  //# ValidNumber :: Type\n  //.\n  //. Type comprising every [`Number`][] value except `NaN`.\n  var ValidNumber = NullaryTypeWithUrl (\n    'sanctuary-def/ValidNumber',\n    function(x) { return Number_._test (x) && !isNaN (x); }\n  );\n\n  //# env :: Array Type\n  //.\n  //. An array of [types][]:\n  //.\n  //.   - <code>[AnyFunction](#AnyFunction)</code>\n  //.   - <code>[Arguments](#Arguments)</code>\n  //.   - <code>[Array](#Array) ([Unknown](#Unknown))</code>\n  //.   - <code>[Boolean](#Boolean)</code>\n  //.   - <code>[Date](#Date)</code>\n  //.   - <code>[Error](#Error)</code>\n  //.   - <code>[HtmlElement](#HtmlElement)</code>\n  //.   - <code>[Null](#Null)</code>\n  //.   - <code>[Number](#Number)</code>\n  //.   - <code>[Object](#Object)</code>\n  //.   - <code>[RegExp](#RegExp)</code>\n  //.   - <code>[StrMap](#StrMap) ([Unknown](#Unknown))</code>\n  //.   - <code>[String](#String)</code>\n  //.   - <code>[Symbol](#Symbol)</code>\n  //.   - <code>[Undefined](#Undefined)</code>\n  var env = [\n    AnyFunction,\n    Arguments,\n    Array_ (Unknown),\n    Boolean_,\n    Date_,\n    Error_,\n    HtmlElement,\n    Null,\n    Number_,\n    Object_,\n    RegExp_,\n    StrMap (Unknown),\n    String_,\n    Symbol_,\n    Undefined\n  ];\n\n  //  Unchecked :: String -> Type\n  function Unchecked(s) { return NullaryType (s) ('') (K (true)); }\n\n  //  production :: Boolean\n  var production =\n    typeof process !== 'undefined' &&\n    /* global process:false */\n    process != null &&\n    process.env != null &&\n    process.env.NODE_ENV === 'production';\n\n  var def = _create ({checkTypes: !production, env: env});\n\n  //  numbers :: Array String\n  var numbers = [\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine'\n  ];\n\n  //  numArgs :: Integer -> String\n  function numArgs(n) {\n    return (n < numbers.length ? numbers[n] : show (n)) + ' ' +\n           (n === 1 ? 'argument' : 'arguments');\n  }\n\n  //  expandUnknown :: ... -> Array Type\n  function expandUnknown(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    value,          // :: Any\n    r               // :: { extractor :: a -> Array b, type :: Type }\n  ) {\n    return r.type.type === UNKNOWN ?\n      _determineActualTypes (env, seen, r.extractor (value)) :\n      [r.type];\n  }\n\n  //  _determineActualTypes :: ... -> Array Type\n  function _determineActualTypes(\n    env,            // :: Array Type\n    seen,           // :: Array Object\n    values          // :: Array Any\n  ) {\n    function refine(types, value) {\n      var seen$;\n      if (typeof value === 'object' && value != null ||\n          typeof value === 'function') {\n        //  Abort if a circular reference is encountered; add the current\n        //  object to the array of seen objects otherwise.\n        if (seen.indexOf (value) >= 0) return [];\n        seen$ = Z.concat (seen, [value]);\n      } else {\n        seen$ = seen;\n      }\n      return Z.chain (function(t) {\n        return (\n          t.name === 'sanctuary-def/Nullable' || (t.validate (value)).isLeft ?\n            [] :\n          t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknown (env, seen$, value, t.types.$1)) :\n          t.type === BINARY ?\n            xprod (t,\n                   expandUnknown (env, seen$, value, t.types.$1),\n                   expandUnknown (env, seen$, value, t.types.$2)) :\n          // else\n            [t]\n        );\n      }, types);\n    }\n\n    return isEmpty (values) ?\n      [Unknown] :\n      or (Z.reduce (refine, env, values), [Inconsistent]);\n  }\n\n  //  isConsistent :: Type -> Boolean\n  function isConsistent(t) {\n    return t.type === UNARY   ? isConsistent (t.types.$1.type) :\n           t.type === BINARY  ? isConsistent (t.types.$1.type) &&\n                                isConsistent (t.types.$2.type) :\n           /* else */           t.type !== INCONSISTENT;\n  }\n\n  //  determineActualTypesStrict :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesStrict(env, values) {\n    return Z.filter (isConsistent,\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  determineActualTypesLoose :: (Array Type, Array Any) -> Array Type\n  function determineActualTypesLoose(env, values) {\n    return Z.reject (function(t) { return t.type === INCONSISTENT; },\n                     _determineActualTypes (env, [], values));\n  }\n\n  //  TypeInfo = { name :: String\n  //             , constraints :: StrMap (Array TypeClass)\n  //             , types :: NonEmpty (Array Type) }\n  //\n  //  TypeVarMap = StrMap { types :: Array Type\n  //                      , valuesByPath :: StrMap (Array Any) }\n  //\n  //  PropPath = Array (Number | String)\n\n  //  updateTypeVarMap :: ... -> TypeVarMap\n  function updateTypeVarMap(\n    env,            // :: Array Type\n    typeVarMap,     // :: TypeVarMap\n    typeVar,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var $typeVarMap = {};\n    for (var typeVarName in typeVarMap) {\n      var entry = typeVarMap[typeVarName];\n      var $entry = {types: entry.types.slice (), valuesByPath: {}};\n      for (var k in entry.valuesByPath) {\n        $entry.valuesByPath[k] = entry.valuesByPath[k].slice ();\n      }\n      $typeVarMap[typeVarName] = $entry;\n    }\n    if (!(hasOwnProperty.call ($typeVarMap, typeVar.name))) {\n      $typeVarMap[typeVar.name] = {types: env.slice (), valuesByPath: {}};\n    }\n\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    if (!(hasOwnProperty.call ($typeVarMap[typeVar.name].valuesByPath, key))) {\n      $typeVarMap[typeVar.name].valuesByPath[key] = [];\n    }\n\n    var isNullaryTypeVar = isEmpty (typeVar.keys);\n    var isValid = test (env);\n\n    function expandUnknownStrict(value, r) {\n      return Z.filter (isConsistent, expandUnknown (env, [], value, r));\n    }\n\n    values.forEach (function(value) {\n      $typeVarMap[typeVar.name].valuesByPath[key].push (value);\n      $typeVarMap[typeVar.name].types = Z.chain (function(t) {\n        return (\n          t.keys.length < typeVar.keys.length || !isValid (t) (value) ?\n            [] :\n          isNullaryTypeVar && t.type === UNARY ?\n            Z.map (fromUnaryType (t),\n                   expandUnknownStrict (value, t.types.$1)) :\n          isNullaryTypeVar && t.type === BINARY ?\n            xprod (t,\n                   expandUnknownStrict (value, t.types.$1),\n                   expandUnknownStrict (value, t.types.$2)) :\n          // else\n            [t]\n        );\n      }, $typeVarMap[typeVar.name].types);\n    });\n\n    return $typeVarMap;\n  }\n\n  //  underlineTypeVars :: (TypeInfo, StrMap (Array Any)) -> String\n  function underlineTypeVars(typeInfo, valuesByPath) {\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var paths = Z.map (JSON.parse, sortedKeys (valuesByPath));\n    return underline (\n      typeInfo,\n      K (K (_)),\n      function(index) {\n        return function(f) {\n          return function(t) {\n            return function(propPath) {\n              var indexedPropPath = Z.concat ([index], propPath);\n              return function(s) {\n                if (paths.some (isPrefix (indexedPropPath))) {\n                  var key = JSON.stringify (indexedPropPath);\n                  if (!(hasOwnProperty.call (valuesByPath, key))) return s;\n                  if (!(isEmpty (valuesByPath[key]))) return f (s);\n                }\n                return _ (s);\n              };\n            };\n          };\n        };\n      }\n    );\n  }\n\n  //  satisfactoryTypes :: ... -> Either (() -> Error)\n  //                                     { typeVarMap :: TypeVarMap\n  //                                     , types :: Array Type }\n  function satisfactoryTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeVarMap,     // :: TypeVarMap\n    expType,        // :: Type\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    values          // :: Array Any\n  ) {\n    var recur = satisfactoryTypes;\n\n    for (var idx = 0; idx < values.length; idx += 1) {\n      var result = expType.validate (values[idx]);\n      if (result.isLeft) {\n        return Left (function() {\n          return invalidValue (env,\n                               typeInfo,\n                               index,\n                               Z.concat (propPath, result.value.propPath),\n                               result.value.value);\n        });\n      }\n    }\n\n    switch (expType.type) {\n\n      case VARIABLE:\n        var typeVarName = expType.name;\n        var constraints = typeInfo.constraints;\n        if (hasOwnProperty.call (constraints, typeVarName)) {\n          var typeClasses = constraints[typeVarName];\n          for (idx = 0; idx < values.length; idx += 1) {\n            for (var idx2 = 0; idx2 < typeClasses.length; idx2 += 1) {\n              if (!typeClasses[idx2].test (values[idx])) {\n                return Left (function() {\n                  return typeClassConstraintViolation (\n                    env,\n                    typeInfo,\n                    typeClasses[idx2],\n                    index,\n                    propPath,\n                    values[idx],\n                    typeVarMap\n                  );\n                });\n              }\n            }\n          }\n        }\n\n        var typeVarMap$ = updateTypeVarMap (env,\n                                            typeVarMap,\n                                            expType,\n                                            index,\n                                            propPath,\n                                            values);\n\n        var okTypes = typeVarMap$[typeVarName].types;\n        return isEmpty (okTypes) ?\n          Left (function() {\n            return typeVarConstraintViolation (\n              env,\n              typeInfo,\n              index,\n              propPath,\n              typeVarMap$[typeVarName].valuesByPath\n            );\n          }) :\n          Z.reduce (function(e, t) {\n            return Z.chain (function(r) {\n              //  The `a` in `Functor f => f a` corresponds to the `a`\n              //  in `Maybe a` but to the `b` in `Either a b`. A type\n              //  variable's $1 will correspond to either $1 or $2 of\n              //  the actual type depending on the actual type's arity.\n              var offset = t.keys.length - expType.keys.length;\n              return expType.keys.reduce (function(e, k, idx) {\n                var extractor = t.types[t.keys[offset + idx]].extractor;\n                return Z.reduce (function(e, x) {\n                  return Z.chain (function(r) {\n                    return recur (env,\n                                  typeInfo,\n                                  r.typeVarMap,\n                                  expType.types[k].type,\n                                  index,\n                                  Z.concat (propPath, [k]),\n                                  [x]);\n                  }, e);\n                }, e, Z.chain (extractor, values));\n              }, Right (r));\n            }, e);\n          }, Right ({typeVarMap: typeVarMap$, types: okTypes}), okTypes);\n\n      case UNARY:\n        return Z.map (\n          function(result) {\n            return {\n              typeVarMap: result.typeVarMap,\n              types: Z.map (fromUnaryType (expType),\n                            or (result.types, [expType.types.$1.type]))\n            };\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1.type,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.types.$1.extractor, values))\n        );\n\n      case BINARY:\n        return Z.chain (\n          function(result) {\n            var $1s = result.types;\n            return Z.map (\n              function(result) {\n                var $2s = result.types;\n                return {\n                  typeVarMap: result.typeVarMap,\n                  types: xprod (expType,\n                                or ($1s, [expType.types.$1.type]),\n                                or ($2s, [expType.types.$2.type]))\n                };\n              },\n              recur (env,\n                     typeInfo,\n                     result.typeVarMap,\n                     expType.types.$2.type,\n                     index,\n                     Z.concat (propPath, ['$2']),\n                     Z.chain (expType.types.$2.extractor, values))\n            );\n          },\n          recur (env,\n                 typeInfo,\n                 typeVarMap,\n                 expType.types.$1.type,\n                 index,\n                 Z.concat (propPath, ['$1']),\n                 Z.chain (expType.types.$1.extractor, values))\n        );\n\n      case RECORD:\n        return Z.reduce (function(e, k) {\n          return Z.chain (function(r) {\n            return recur (env,\n                          typeInfo,\n                          r.typeVarMap,\n                          expType.types[k].type,\n                          index,\n                          Z.concat (propPath, [k]),\n                          Z.chain (expType.types[k].extractor, values));\n          }, e);\n        }, Right ({typeVarMap: typeVarMap, types: [expType]}), expType.keys);\n\n      default:\n        return Right ({typeVarMap: typeVarMap, types: [expType]});\n    }\n  }\n\n  //# test :: Array Type -> Type -> a -> Boolean\n  //.\n  //. Takes an environment, a type, and any value. Returns `true` if the value\n  //. is a member of the type; `false` otherwise.\n  //.\n  //. The environment is only significant if the type contains\n  //. [type variables][].\n  //.\n  //. One may define a more restrictive type in terms of a more general one:\n  //.\n  //. ```javascript\n  //. //    NonNegativeInteger :: Type\n  //. const NonNegativeInteger = $.NullaryType\n  //.   ('my-package/NonNegativeInteger')\n  //.   ('http://example.com/my-package#NonNegativeInteger')\n  //.   (x => $.test ([]) ($.Integer) (x) && x >= 0);\n  //. ```\n  //.\n  //. Using types as predicates is useful in other contexts too. One could,\n  //. for example, define a [record type][] for each endpoint of a REST API\n  //. and validate the bodies of incoming POST requests against these types.\n  function test(env) {\n    return function(t) {\n      return function(x) {\n        var typeInfo = {name: 'name', constraints: {}, types: [t]};\n        return (satisfactoryTypes (env, typeInfo, {}, t, 0, [], [x])).isRight;\n      };\n    };\n  }\n\n  //. ### Type constructors\n  //.\n  //. sanctuary-def provides several functions for defining types.\n\n  //# NullaryType :: String -> String -> (Any -> Boolean) -> Type\n  //.\n  //. Type constructor for types with no type variables (such as [`Number`][]).\n  //.\n  //. To define a nullary type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true` if\n  //.     (and only if) the value is a member of `t`.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Integer :: Type\n  //. const Integer = $.NullaryType\n  //.   ('my-package/Integer')\n  //.   ('http://example.com/my-package#Integer')\n  //.   (x => typeof x === 'number' &&\n  //.         Math.floor (x) === x &&\n  //.         x >= Number.MIN_SAFE_INTEGER &&\n  //.         x <= Number.MAX_SAFE_INTEGER);\n  //.\n  //. //    NonZeroInteger :: Type\n  //. const NonZeroInteger = $.NullaryType\n  //.   ('my-package/NonZeroInteger')\n  //.   ('http://example.com/my-package#NonZeroInteger')\n  //.   (x => $.test ([]) (Integer) (x) && x !== 0);\n  //.\n  //. //    rem :: Integer -> NonZeroInteger -> Integer\n  //. const rem =\n  //. def ('rem')\n  //.     ({})\n  //.     ([Integer, NonZeroInteger, Integer])\n  //.     (x => y => x % y);\n  //.\n  //. rem (42) (5);\n  //. // => 2\n  //.\n  //. rem (0.5);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //          ^^^^^^^\n  //. //             1\n  //. //\n  //. //   1)  0.5 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘Integer’.\n  //.\n  //. rem (42) (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   rem :: Integer -> NonZeroInteger -> Integer\n  //. //                     ^^^^^^^^^^^^^^\n  //. //                           1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘NonZeroInteger’.\n  //. ```\n  function NullaryType(name) {\n    function format(outer, inner) {\n      return outer (stripNamespace (name));\n    }\n    return function(url) {\n      return function(test) {\n        return new _Type (NULLARY, name, url, format, test, [], {});\n      };\n    };\n  }\n\n  var CheckedNullaryType =\n  def ('NullaryType')\n      ({})\n      ([String_, String_, Function_ ([Any, Boolean_]), Type])\n      (NullaryType);\n\n  //# UnaryType :: String -> String -> (Any -> Boolean) -> (t a -> Array a) -> Type -> Type\n  //.\n  //. Type constructor for types with one type variable (such as [`Array`][]).\n  //.\n  //. To define a unary type `t a` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if (and only if) the value is a member of `t x` for some type `x`;\n  //.\n  //.   - a function which takes any value of type `t a` and returns an array\n  //.     of the values of type `a` contained in the `t` (exposed as\n  //.     `t.types.$1.extractor`); and\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`).\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const show = require ('sanctuary-show');\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    maybeTypeIdent :: String\n  //. const maybeTypeIdent = 'my-package/Maybe';\n  //.\n  //. //    Maybe :: Type -> Type\n  //. const Maybe = $.UnaryType\n  //.   (maybeTypeIdent)\n  //.   ('http://example.com/my-package#Maybe')\n  //.   (x => type (x) === maybeTypeIdent)\n  //.   (maybe => maybe.isJust ? [maybe.value] : []);\n  //.\n  //. //    MaybeTypeRep :: TypeRep Maybe\n  //. const MaybeTypeRep = {'@@type': maybeTypeIdent};\n  //.\n  //. //    Nothing :: Maybe a\n  //. const Nothing = {\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': false,\n  //.   'isNothing': true,\n  //.   '@@show': () => 'Nothing',\n  //. };\n  //.\n  //. //    Just :: a -> Maybe a\n  //. const Just = x => ({\n  //.   'constructor': MaybeTypeRep,\n  //.   'isJust': true,\n  //.   'isNothing': false,\n  //.   '@@show': () => `Just (${show (x)})`,\n  //.   'value': x,\n  //. });\n  //.\n  //. //    fromMaybe :: a -> Maybe a -> a\n  //. const fromMaybe =\n  //. def ('fromMaybe')\n  //.     ({})\n  //.     ([a, Maybe (a), a])\n  //.     (x => m => m.isJust ? m.value : x);\n  //.\n  //. fromMaybe (0) (Just (42));\n  //. // => 42\n  //.\n  //. fromMaybe (0) (Nothing);\n  //. // => 0\n  //.\n  //. fromMaybe (0) (Just ('XXX'));\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   fromMaybe :: a -> Maybe a -> a\n  //. //                ^          ^\n  //. //                1          2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"XXX\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function UnaryType(name) {\n    return function(url) {\n      return function(test) {\n        return function(_1) {\n          return function($1) {\n            function format(outer, inner) {\n              return outer ('(' + stripNamespace (name) + ' ') +\n                     inner ('$1') (show ($1)) +\n                     outer (')');\n            }\n            var types = {$1: {extractor: _1, type: $1}};\n            return new _Type (UNARY, name, url, format, test, ['$1'], types);\n          };\n        };\n      };\n    };\n  }\n\n  var CheckedUnaryType =\n  def ('UnaryType')\n      ({})\n      ([String_,\n        String_,\n        Function_ ([Any, Boolean_]),\n        Function_ ([Unchecked ('t a'), Array_ (Unchecked ('a'))]),\n        AnyFunction])\n      (function(name) {\n         return function(url) {\n           return function(test) {\n             return compose (def (stripNamespace (name)) ({}) ([Type, Type]),\n                             UnaryType (name) (url) (test));\n           };\n         };\n       });\n\n  //  fromUnaryType :: Type -> (Type -> Type)\n  function fromUnaryType(t) {\n    return UnaryType (t.name) (t.url) (t._test) (t.types.$1.extractor);\n  }\n\n  //# BinaryType :: String -> String -> (Any -> Boolean) -> (t a b -> Array a) -> (t a b -> Array b) -> Type -> Type -> Type\n  //.\n  //. Type constructor for types with two type variables (such as\n  //. [`Array2`][]).\n  //.\n  //. To define a binary type `t a b` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`);\n  //.\n  //.   - a predicate which accepts any JavaScript value and returns `true`\n  //.     if (and only if) the value is a member of `t x y` for some types\n  //.     `x` and `y`;\n  //.\n  //.   - a function which takes any value of type `t a b` and returns an array\n  //.     of the values of type `a` contained in the `t` (exposed as\n  //.     `t.types.$1.extractor`);\n  //.\n  //.   - a function which takes any value of type `t a b` and returns an array\n  //.     of the values of type `b` contained in the `t` (exposed as\n  //.     `t.types.$2.extractor`);\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`); and\n  //.\n  //.   - the type of `b` (exposed as `t.types.$2.type`).\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. const type = require ('sanctuary-type-identifiers');\n  //.\n  //. //    pairTypeIdent :: String\n  //. const pairTypeIdent = 'my-package/Pair';\n  //.\n  //. //    $Pair :: Type -> Type -> Type\n  //. const $Pair = $.BinaryType\n  //.   (pairTypeIdent)\n  //.   ('http://example.com/my-package#Pair')\n  //.   (x => type (x) === pairTypeIdent)\n  //.   (({fst}) => [fst])\n  //.   (({snd}) => [snd]);\n  //.\n  //. //    PairTypeRep :: TypeRep Pair\n  //. const PairTypeRep = {'@@type': pairTypeIdent};\n  //.\n  //. //    Pair :: a -> b -> Pair a b\n  //. const Pair =\n  //. def ('Pair')\n  //.     ({})\n  //.     ([a, b, $Pair (a) (b)])\n  //.     (fst => snd => ({\n  //.        'constructor': PairTypeRep,\n  //.        'fst': fst,\n  //.        'snd': snd,\n  //.        '@@show': () => `Pair (${show (fst)}) (${show (snd)})`,\n  //.      }));\n  //.\n  //. //    Rank :: Type\n  //. const Rank = $.NullaryType\n  //.   ('my-package/Rank')\n  //.   ('http://example.com/my-package#Rank')\n  //.   (x => typeof x === 'string' &&\n  //.         /^(A|2|3|4|5|6|7|8|9|10|J|Q|K)$/.test (x));\n  //.\n  //. //    Suit :: Type\n  //. const Suit = $.NullaryType\n  //.   ('my-package/Suit')\n  //.   ('http://example.com/my-package#Suit')\n  //.   (x => typeof x === 'string' &&\n  //.         /^[\\u2660\\u2663\\u2665\\u2666]$/.test (x));\n  //.\n  //. //    Card :: Type\n  //. const Card = $Pair (Rank) (Suit);\n  //.\n  //. //    showCard :: Card -> String\n  //. const showCard =\n  //. def ('showCard')\n  //.     ({})\n  //.     ([Card, $.String])\n  //.     (card => card.fst + card.snd);\n  //.\n  //. showCard (Pair ('A') ('♠'));\n  //. // => 'A♠'\n  //.\n  //. showCard (Pair ('X') ('♠'));\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   showCard :: Pair Rank Suit -> String\n  //. //                    ^^^^\n  //. //                     1\n  //. //\n  //. //   1)  \"X\" :: String\n  //. //\n  //. //   The value at position 1 is not a member of ‘Rank’.\n  //. ```\n  function BinaryType(name) {\n    return function(url) {\n      return function(test) {\n        return function(_1) {\n          return function(_2) {\n            return function($1) {\n              return function($2) {\n                function format(outer, inner) {\n                  return outer ('(' + stripNamespace (name) + ' ') +\n                         inner ('$1') (show ($1)) +\n                         outer (' ') +\n                         inner ('$2') (show ($2)) +\n                         outer (')');\n                }\n                return new _Type (BINARY,\n                                  name,\n                                  url,\n                                  format,\n                                  test,\n                                  ['$1', '$2'],\n                                  {$1: {extractor: _1, type: $1},\n                                   $2: {extractor: _2, type: $2}});\n              };\n            };\n          };\n        };\n      };\n    };\n  }\n\n  var CheckedBinaryType =\n  def ('BinaryType')\n      ({})\n      ([String_,\n        String_,\n        Function_ ([Any, Boolean_]),\n        Function_ ([Unchecked ('t a b'), Array_ (Unchecked ('a'))]),\n        Function_ ([Unchecked ('t a b'), Array_ (Unchecked ('b'))]),\n        AnyFunction])\n      (function(name) {\n         return function(url) {\n           return function(test) {\n             return function(_1) {\n               return function(_2) {\n                 return def (stripNamespace (name))\n                            ({})\n                            ([Type, Type, Type])\n                            (BinaryType (name) (url) (test) (_1) (_2));\n               };\n             };\n           };\n         };\n       });\n\n  //  xprod :: (Type, Array Type, Array Type) -> Array Type\n  function xprod(t, $1s, $2s) {\n    return Z.chain (\n      function(specialize) { return Z.map (specialize, $2s); },\n      Z.map (BinaryType (t.name)\n                        (t.url)\n                        (t._test)\n                        (t.types.$1.extractor)\n                        (t.types.$2.extractor),\n             $1s)\n    );\n  }\n\n  //# EnumType :: String -> String -> Array Any -> Type\n  //.\n  //. Type constructor for [enumerated types][] (such as [`RegexFlags`][]).\n  //.\n  //. To define an enumerated type `t` one must provide:\n  //.\n  //.   - the name of `t` (exposed as `t.name`);\n  //.\n  //.   - the documentation URL of `t` (exposed as `t.url`); and\n  //.\n  //.   - an array of distinct values.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Denomination :: Type\n  //. const Denomination = $.EnumType\n  //.   ('my-package/Denomination')\n  //.   ('http://example.com/my-package#Denomination')\n  //.   ([10, 20, 50, 100, 200]);\n  //. ```\n  function EnumType(name) {\n    return function(url) {\n      return compose (NullaryType (name) (url), memberOf);\n    };\n  }\n\n  var CheckedEnumType =\n  def ('EnumType')\n      ({})\n      ([String_, String_, Array_ (Any), Type])\n      (EnumType);\n\n  //# RecordType :: StrMap Type -> Type\n  //.\n  //. `RecordType` is used to construct record types. The type definition\n  //. specifies the name and type of each required field. A field is an\n  //. enumerable property (either an own property or an inherited property).\n  //.\n  //. To define a record type one must provide:\n  //.\n  //.   - an object mapping field name to type.\n  //.\n  //. For example:\n  //.\n  //. ```javascript\n  //. //    Point :: Type\n  //. const Point = $.RecordType ({x: $.FiniteNumber, y: $.FiniteNumber});\n  //.\n  //. //    dist :: Point -> Point -> FiniteNumber\n  //. const dist =\n  //. def ('dist')\n  //.     ({})\n  //.     ([Point, Point, $.FiniteNumber])\n  //.     (p => q => Math.sqrt (Math.pow (p.x - q.x, 2) +\n  //.                           Math.pow (p.y - q.y, 2)));\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: 3, y: 4, color: 'red'});\n  //. // => 5\n  //.\n  //. dist ({x: 0, y: 0}) ({x: NaN, y: NaN});\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //                                                              ^^^^^^^^^^^^\n  //. //                                                                   1\n  //. //\n  //. //   1)  NaN :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘FiniteNumber’.\n  //.\n  //. dist (0);\n  //. // ! TypeError: Invalid value\n  //. //\n  //. //   dist :: { x :: FiniteNumber, y :: FiniteNumber } -> { x :: FiniteNumber, y :: FiniteNumber } -> FiniteNumber\n  //. //           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  //. //                              1\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   The value at position 1 is not a member of ‘{ x :: FiniteNumber, y :: FiniteNumber }’.\n  //. ```\n  function RecordType(fields) {\n    var keys = sortedKeys (fields);\n\n    function format(outer, inner) {\n      if (isEmpty (keys)) return outer ('{}');\n      var reprs = Z.map (function(k) {\n        var t = fields[k];\n        return outer (' ') +\n               outer (/^(?!\\d)[$\\w]+$/.test (k) ? k : show (k)) +\n               outer (' :: ') +\n               unless (t.type === RECORD || isEmpty (t.keys),\n                       stripOutermostParens,\n                       inner (k) (show (t)));\n      }, keys);\n      return wrap (outer ('{')) (outer (' }')) (joinWith (outer (','), reprs));\n    }\n\n    function test(x) {\n      var missing = {};\n      keys.forEach (function(k) { missing[k] = k; });\n      for (var k in x) delete missing[k];\n      return isEmpty (Object.keys (missing));\n    }\n\n    var $types = {};\n    keys.forEach (function(k) {\n      $types[k] = {extractor: function(x) { return [x[k]]; }, type: fields[k]};\n    });\n\n    return new _Type (RECORD, '', '', format, test, keys, $types);\n  }\n\n  var CheckedRecordType =\n  def ('RecordType') ({}) ([StrMap (Type), Type]) (RecordType);\n\n  //# TypeVariable :: String -> Type\n  //.\n  //. Polymorphism is powerful. Not being able to define a function for\n  //. all types would be very limiting indeed: one couldn't even define the\n  //. identity function!\n  //.\n  //. Before defining a polymorphic function one must define one or more type\n  //. variables:\n  //.\n  //. ```javascript\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //.\n  //. //    id :: a -> a\n  //. const id = def ('id') ({}) ([a, a]) (x => x);\n  //.\n  //. id (42);\n  //. // => 42\n  //.\n  //. id (null);\n  //. // => null\n  //. ```\n  //.\n  //. The same type variable may be used in multiple positions, creating a\n  //. constraint:\n  //.\n  //. ```javascript\n  //. //    cmp :: a -> a -> Number\n  //. const cmp =\n  //. def ('cmp')\n  //.     ({})\n  //.     ([a, a, $.Number])\n  //.     (x => y => x < y ? -1 : x > y ? 1 : 0);\n  //.\n  //. cmp (42) (42);\n  //. // => 0\n  //.\n  //. cmp ('a') ('z');\n  //. // => -1\n  //.\n  //. cmp ('z') ('a');\n  //. // => 1\n  //.\n  //. cmp (0) ('1');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   cmp :: a -> a -> Number\n  //. //          ^    ^\n  //. //          1    2\n  //. //\n  //. //   1)  0 :: Number\n  //. //\n  //. //   2)  \"1\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  function TypeVariable(name) {\n    return new _Type (VARIABLE, name, '', always2 (name), K (true), [], {});\n  }\n\n  var CheckedTypeVariable =\n  def ('TypeVariable') ({}) ([String_, Type]) (TypeVariable);\n\n  //# UnaryTypeVariable :: String -> Type -> Type\n  //.\n  //. Combines [`UnaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a unary type variable `t a` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`); and\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`).\n  //.\n  //. Consider the type of a generalized `map`:\n  //.\n  //. ```haskell\n  //. map :: Functor f => (a -> b) -> f a -> f b\n  //. ```\n  //.\n  //. `f` is a unary type variable. With two (nullary) type variables, one\n  //. unary type variable, and one [type class][] it's possible to define a\n  //. fully polymorphic `map` function:\n  //.\n  //. ```javascript\n  //. const $ = require ('sanctuary-def');\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. const a = $.TypeVariable ('a');\n  //. const b = $.TypeVariable ('b');\n  //. const f = $.UnaryTypeVariable ('f');\n  //.\n  //. //    map :: Functor f => (a -> b) -> f a -> f b\n  //. const map =\n  //. def ('map')\n  //.     ({f: [Z.Functor]})\n  //.     ([$.Function ([a, b]), f (a), f (b)])\n  //.     (f => functor => Z.map (f, functor));\n  //. ```\n  //.\n  //. Whereas a regular type variable is fully resolved (`a` might become\n  //. `Array (Array String)`, for example), a unary type variable defers to\n  //. its type argument, which may itself be a type variable. The type argument\n  //. corresponds to the type argument of a unary type or the *second* type\n  //. argument of a binary type. The second type argument of `Map k v`, for\n  //. example, is `v`. One could replace `Functor => f` with `Map k` or with\n  //. `Map Integer`, but not with `Map`.\n  //.\n  //. This shallow inspection makes it possible to constrain a value's \"outer\"\n  //. and \"inner\" types independently.\n  function UnaryTypeVariable(name) {\n    return function($1) {\n      function format(outer, inner) {\n        return outer ('(' + name + ' ') +\n               inner ('$1') (show ($1)) +\n               outer (')');\n      }\n      var types = {$1: {extractor: K ([]), type: $1}};\n      return new _Type (VARIABLE, name, '', format, K (true), ['$1'], types);\n    };\n  }\n\n  var CheckedUnaryTypeVariable =\n  def ('UnaryTypeVariable')\n      ({})\n      ([String_, AnyFunction])\n      (function(name) {\n         return def (name) ({}) ([Type, Type]) (UnaryTypeVariable (name));\n       });\n\n  //# BinaryTypeVariable :: String -> Type -> Type -> Type\n  //.\n  //. Combines [`BinaryType`][] and [`TypeVariable`][].\n  //.\n  //. To define a binary type variable `t a b` one must provide:\n  //.\n  //.   - a name (conventionally matching `^[a-z]$`);\n  //.\n  //.   - the type of `a` (exposed as `t.types.$1.type`); and\n  //.\n  //.   - the type of `b` (exposed as `t.types.$2.type`).\n  //.\n  //. The more detailed explanation of [`UnaryTypeVariable`][] also applies to\n  //. `BinaryTypeVariable`.\n  function BinaryTypeVariable(name) {\n    return function($1) {\n      return function($2) {\n        function format(outer, inner) {\n          return outer ('(' + name + ' ') +\n                 inner ('$1') (show ($1)) +\n                 outer (' ') +\n                 inner ('$2') (show ($2)) +\n                 outer (')');\n        }\n        var keys = ['$1', '$2'];\n        var types = {$1: {extractor: K ([]), type: $1},\n                     $2: {extractor: K ([]), type: $2}};\n        return new _Type (VARIABLE, name, '', format, K (true), keys, types);\n      };\n    };\n  }\n\n  var CheckedBinaryTypeVariable =\n  def ('BinaryTypeVariable')\n      ({})\n      ([String_, AnyFunction])\n      (function(name) {\n         return def (name)\n                    ({})\n                    ([Type, Type, Type])\n                    (BinaryTypeVariable (name));\n       });\n\n  //# Thunk :: Type -> Type\n  //.\n  //. `$.Thunk (T)` is shorthand for `$.Function ([T])`, the type comprising\n  //. every nullary function (thunk) which returns a value of type `T`.\n  var Thunk =\n  def ('Thunk')\n      ({})\n      ([Type, Type])\n      (function(t) { return Function_ ([t]); });\n\n  //# Predicate :: Type -> Type\n  //.\n  //. `$.Predicate (T)` is shorthand for `$.Function ([T, $.Boolean])`, the\n  //. type comprising every predicate function which takes a value of type `T`.\n  var Predicate =\n  def ('Predicate')\n      ({})\n      ([Type, Type])\n      (function(t) { return Function_ ([t, Boolean_]); });\n\n  //. ### Type classes\n  //.\n  //. `concatS`, defined earlier, is a function which concatenates two strings.\n  //. This is overly restrictive, since other types support concatenation\n  //. (Array, for example).\n  //.\n  //. One could use a type variable to define a polymorphic \"concat\" function:\n  //.\n  //. ```javascript\n  //. //    _concat :: a -> a -> a\n  //. const _concat =\n  //. def ('_concat')\n  //.     ({})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. _concat ('fizz') ('buzz');\n  //. // => 'fizzbuzz'\n  //.\n  //. _concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. _concat ([1, 2]) ('buzz');\n  //. // ! TypeError: Type-variable constraint violation\n  //. //\n  //. //   _concat :: a -> a -> a\n  //. //              ^    ^\n  //. //              1    2\n  //. //\n  //. //   1)  [1, 2] :: Array Number\n  //. //\n  //. //   2)  \"buzz\" :: String\n  //. //\n  //. //   Since there is no type of which all the above values are members, the type-variable constraint has been violated.\n  //. ```\n  //.\n  //. The type of `_concat` is misleading: it suggests that it can operate on\n  //. any two values of *any* one type. In fact there's an implicit constraint,\n  //. since the type must support concatenation (in [mathematical][semigroup]\n  //. terms, the type must have a [semigroup][FL:Semigroup]). Violating this\n  //. implicit constraint results in a run-time error in the implementation:\n  //.\n  //. ```javascript\n  //. _concat (null) (null);\n  //. // ! TypeError: Cannot read property 'concat' of null\n  //. ```\n  //.\n  //. The solution is to constrain `a` by first defining a [`TypeClass`][]\n  //. value, then specifying the constraint in the definition of the \"concat\"\n  //. function:\n  //.\n  //. ```javascript\n  //. const Z = require ('sanctuary-type-classes');\n  //.\n  //. //    Semigroup :: TypeClass\n  //. const Semigroup = Z.TypeClass (\n  //.   'my-package/Semigroup',\n  //.   'http://example.com/my-package#Semigroup',\n  //.   [],\n  //.   x => x != null && typeof x.concat === 'function'\n  //. );\n  //.\n  //. //    concat :: Semigroup a => a -> a -> a\n  //. const concat =\n  //. def ('concat')\n  //.     ({a: [Semigroup]})\n  //.     ([a, a, a])\n  //.     (x => y => x.concat (y));\n  //.\n  //. concat ([1, 2]) ([3, 4]);\n  //. // => [1, 2, 3, 4]\n  //.\n  //. concat (null) (null);\n  //. // ! TypeError: Type-class constraint violation\n  //. //\n  //. //   concat :: Semigroup a => a -> a -> a\n  //. //             ^^^^^^^^^^^    ^\n  //. //                            1\n  //. //\n  //. //   1)  null :: Null\n  //. //\n  //. //   ‘concat’ requires ‘a’ to satisfy the Semigroup type-class constraint; the value at position 1 does not.\n  //. //\n  //. //   See http://example.com/my-package#Semigroup for information about the my-package/Semigroup type class.\n  //. ```\n  //.\n  //. Multiple constraints may be placed on a type variable by including\n  //. multiple `TypeClass` values in the array (e.g. `{a: [Foo, Bar, Baz]}`).\n\n  //  invalidArgumentsCount :: (TypeInfo, Integer, Integer, Array Any) -> Error\n  //\n  //  This function is used in `curry` when a function defined via `def`\n  //  is applied to too many arguments.\n  function invalidArgumentsCount(typeInfo, index, numArgsExpected, args) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) + ' applied to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return K (K (index_ === index ? f : _));\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  constraintsRepr :: ... -> String\n  function constraintsRepr(\n    constraints,    // :: StrMap (Array TypeClass)\n    outer,          // :: String -> String\n    inner           // :: String -> TypeClass -> String -> String\n  ) {\n    var $reprs = [];\n    (sortedKeys (constraints)).forEach (function(k) {\n      var f = inner (k);\n      constraints[k].forEach (function(typeClass) {\n        $reprs.push (\n          f (typeClass) (stripNamespace (typeClass.name) + ' ' + k)\n        );\n      });\n    });\n    return when ($reprs.length > 0,\n                 function(s) { return s + outer (' => '); },\n                 when ($reprs.length > 1,\n                       wrap (outer ('(')) (outer (')')),\n                       joinWith (outer (', '), $reprs)));\n  }\n\n  //  label :: String -> String -> String\n  function label(label) {\n    return function(s) {\n      var delta = s.length - label.length;\n      return strRepeat (' ', Math.floor (delta / 2)) + label +\n             strRepeat (' ', Math.ceil (delta / 2));\n    };\n  }\n\n  //  typeVarNames :: Type -> Array String\n  function typeVarNames(t) {\n    return Z.concat (\n      t.type === VARIABLE ? [t.name] : [],\n      Z.chain (function(k) { return typeVarNames (t.types[k].type); }, t.keys)\n    );\n  }\n\n  //  showTypeWith :: TypeInfo -> Type -> String\n  function showTypeWith(typeInfo) {\n    var names = Z.chain (typeVarNames, typeInfo.types);\n    return function(t) {\n      var code = 'a'.charCodeAt (0);\n      return unless (\n        t.type === FUNCTION || t.type === RECORD || isEmpty (t.keys),\n        stripOutermostParens,\n        (show (t)).replace (/\\bUnknown\\b/g, function() {\n          // eslint-disable-next-line no-plusplus\n          do var name = String.fromCharCode (code++);\n          while (names.indexOf (name) >= 0);\n          return name;\n        })\n      );\n    };\n  }\n\n  //  showTypeQuoted :: Type -> String\n  function showTypeQuoted(t) {\n    return q (unless (t.type === RECORD || isEmpty (t.keys),\n                      stripOutermostParens,\n                      show (t)));\n  }\n\n  //  showValuesAndTypes :: ... -> String\n  function showValuesAndTypes(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    values,         // :: Array Any\n    pos             // :: Integer\n  ) {\n    var showType = showTypeWith (typeInfo);\n    return show (pos) + ')  ' + joinWith ('\\n    ', Z.map (function(x) {\n      var types = determineActualTypesLoose (env, [x]);\n      return show (x) + ' :: ' + joinWith (', ', Z.map (showType, types));\n    }, values));\n  }\n\n  //  typeSignature :: TypeInfo -> String\n  function typeSignature(typeInfo) {\n    var reprs = Z.map (showTypeWith (typeInfo), typeInfo.types);\n    var arity = reprs.length - 1;\n    return typeInfo.name + ' :: ' +\n             constraintsRepr (typeInfo.constraints, id, K (K (id))) +\n             when (arity === 0,\n                   parenthesize,\n                   joinWith (' -> ', init (reprs))) +\n             ' -> ' + last (reprs);\n  }\n\n  //  _underline :: ... -> String\n  function _underline(\n    t,              // :: Type\n    propPath,       // :: PropPath\n    formatType3     // :: Type -> Array String -> String -> String\n  ) {\n    return unless (t.type === RECORD ||\n                     isEmpty (t.keys) ||\n                     t.type === FUNCTION && isEmpty (propPath) ||\n                     !isEmpty (propPath),\n                   stripOutermostParens,\n                   formatType3 (t) (propPath) (t.format (_, function(k) {\n                     return K (_underline (t.types[k].type,\n                                           Z.concat (propPath, [k]),\n                                           formatType3));\n                   })));\n  }\n\n  //  underline :: ... -> String\n  function underline(\n    typeInfo,               // :: TypeInfo\n    underlineConstraint,    // :: String -> TypeClass -> String -> String\n    formatType5\n    // :: Integer -> (String -> String) -> Type -> PropPath -> String -> String\n  ) {\n    var st = typeInfo.types.reduce (function(st, t, index) {\n      var formatType4 = formatType5 (index);\n      st.numbers.push (_underline (t, [], formatType4 (function(s) {\n        return label (show (st.counter += 1)) (s);\n      })));\n      st.carets.push (_underline (t, [], W (function(type) {\n        var repr = show (type);\n        var parenthesized = repr.slice (0, 1) + repr.slice (-1) === '()';\n        return formatType4 (function(s) {\n          return parenthesized && repr !== '()' && s.length === repr.length ?\n            _ ('(') + r ('^') (s.slice (1, -1)) + _ (')') :\n            r ('^') (s);\n        });\n      })));\n      return st;\n    }, {carets: [], numbers: [], counter: 0});\n\n    return typeSignature (typeInfo) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, underlineConstraint) +\n              joinWith (_ (' -> '), st.carets) + '\\n' +\n           _ (typeInfo.name + ' :: ') +\n              constraintsRepr (typeInfo.constraints, _, K (K (_))) +\n              joinWith (_ (' -> '), st.numbers) + '\\n';\n  }\n\n  //  resolvePropPath :: (Type, Array String) -> Type\n  function resolvePropPath(t, propPath) {\n    return Z.reduce (function(t, prop) { return t.types[prop].type; },\n                     t,\n                     propPath);\n  }\n\n  //  formatType6 ::\n  //    PropPath -> Integer -> (String -> String) ->\n  //      Type -> PropPath -> String -> String\n  function formatType6(indexedPropPath) {\n    return function(index_) {\n      return function(f) {\n        return function(t) {\n          return function(propPath_) {\n            var indexedPropPath_ = Z.concat ([index_], propPath_);\n            var p = isPrefix (indexedPropPath_) (indexedPropPath);\n            var q = isPrefix (indexedPropPath) (indexedPropPath_);\n            return p && q ? f : p ? id : _;\n          };\n        };\n      };\n    };\n  }\n\n  //  see :: (String, { name :: String, url :: String? }) -> String\n  function see(label, record) {\n    return record.url == null || record.url === '' ?\n           '' :\n           '\\nSee ' + record.url +\n           ' for information about the ' + record.name + ' ' + label + '.\\n';\n  }\n\n  //  typeClassConstraintViolation :: ... -> Error\n  function typeClassConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    typeClass,      // :: TypeClass\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value,          // :: Any\n    typeVarMap      // :: TypeVarMap\n  ) {\n    var expType = resolvePropPath (typeInfo.types[index], propPath);\n    return new TypeError (trimTrailingSpaces (\n      'Type-class constraint violation\\n\\n' +\n      underline (typeInfo,\n                 function(tvn) {\n                   return function(tc) {\n                     return (\n                       tvn === expType.name && tc.name === typeClass.name ?\n                         r ('^') :\n                         _\n                     );\n                   };\n                 },\n                 formatType6 (Z.concat ([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n      q (typeInfo.name) + ' requires ' +\n      q (expType.name) + ' to satisfy the ' +\n      stripNamespace (typeClass.name) + ' type-class constraint; ' +\n      'the value at position 1 does not.\\n' +\n      see ('type class', typeClass)\n    ));\n  }\n\n  //  typeVarConstraintViolation :: ... -> Error\n  function typeVarConstraintViolation(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    valuesByPath    // :: StrMap (Array Any)\n  ) {\n    //  If we apply an ‘a -> a -> a -> a’ function to Left ('x'), Right (1),\n    //  and Right (null) we'd like to avoid underlining the first argument\n    //  position, since Left ('x') is compatible with the other ‘a’ values.\n    var key = JSON.stringify (Z.concat ([index], propPath));\n    var values = valuesByPath[key];\n\n    //  Note: Sorting these keys lexicographically is not \"correct\", but it\n    //  does the right thing for indexes less than 10.\n    var keys = Z.filter (function(k) {\n      var values_ = valuesByPath[k];\n      return (\n        //  Keep X, the position at which the violation was observed.\n        k === key ||\n        //  Keep positions whose values are incompatible with the values at X.\n        isEmpty (determineActualTypesStrict (env, Z.concat (values, values_)))\n      );\n    }, sortedKeys (valuesByPath));\n\n    var underlinedTypeVars =\n    underlineTypeVars (typeInfo,\n                       Z.reduce (function($valuesByPath, k) {\n                         $valuesByPath[k] = valuesByPath[k];\n                         return $valuesByPath;\n                       }, {}, keys));\n\n    return new TypeError (trimTrailingSpaces (\n      values.length === 1 &&\n      isEmpty (determineActualTypesLoose (env, values)) ?\n        'Unrecognized value\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        '1)  ' + show (values[0]) + ' :: (no types)\\n\\n' +\n        toMarkdownList (\n          'The environment is empty! ' +\n          'Polymorphic functions require a non-empty environment.\\n',\n          'The value at position 1 is not a member of any type in ' +\n          'the environment.\\n\\n' +\n          'The environment contains the following types:\\n\\n',\n          showTypeWith (typeInfo),\n          env\n        ) :\n      // else\n        'Type-variable constraint violation\\n\\n' +\n        underlinedTypeVars + '\\n' +\n        (Z.reduce (function(st, k) {\n          var values = valuesByPath[k];\n          return isEmpty (values) ? st : {\n            idx: st.idx + 1,\n            s: st.s +\n               showValuesAndTypes (env, typeInfo, values, st.idx + 1) +\n               '\\n\\n'\n          };\n        }, {idx: 0, s: ''}, keys)).s +\n        'Since there is no type of which all the above values are ' +\n        'members, the type-variable constraint has been violated.\\n'\n    ));\n  }\n\n  //  invalidValue :: ... -> Error\n  function invalidValue(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    index,          // :: Integer\n    propPath,       // :: PropPath\n    value           // :: Any\n  ) {\n    var t = resolvePropPath (typeInfo.types[index], propPath);\n    return new TypeError (trimTrailingSpaces (\n      'Invalid value\\n\\n' +\n      underline (typeInfo,\n                 K (K (_)),\n                 formatType6 (Z.concat ([index], propPath))) +\n      '\\n' +\n      showValuesAndTypes (env, typeInfo, [value], 1) + '\\n\\n' +\n      'The value at position 1 is not a member of ' +\n      showTypeQuoted (t) + '.\\n' +\n      see ('type', t)\n    ));\n  }\n\n  //  invalidArgumentsLength :: ... -> Error\n  //\n  //  This function is used in `wrapFunctionCond` to ensure that higher-order\n  //  functions defined via `def` only ever apply a function argument to the\n  //  correct number of arguments.\n  function invalidArgumentsLength(\n    typeInfo,           // :: TypeInfo\n    index,              // :: Integer\n    numArgsExpected,    // :: Integer\n    args                // :: Array Any\n  ) {\n    return new TypeError (trimTrailingSpaces (\n      q (typeInfo.name) +\n      ' applied ' + showTypeQuoted (typeInfo.types[index]) +\n      ' to the wrong number of arguments\\n\\n' +\n      underline (\n        typeInfo,\n        K (K (_)),\n        function(index_) {\n          return function(f) {\n            return function(t) {\n              return function(propPath) {\n                return function(s) {\n                  return index_ === index ?\n                    t.format (_, function(k) { return k === '$1' ? f : _; }) :\n                    _ (s);\n                };\n              };\n            };\n          };\n        }\n      ) + '\\n' +\n      'Expected ' + numArgs (numArgsExpected) +\n      ' but received ' + numArgs (args.length) +\n      toMarkdownList ('.\\n', ':\\n\\n', show, args)\n    ));\n  }\n\n  //  assertRight :: Either (() -> Error) a -> a !\n  function assertRight(either) {\n    if (either.isLeft) throw either.value ();\n    return either.value;\n  }\n\n  //  withTypeChecking :: ... -> Function\n  function withTypeChecking(\n    env,            // :: Array Type\n    typeInfo,       // :: TypeInfo\n    impl            // :: Function\n  ) {\n    var n = typeInfo.types.length - 1;\n\n    //  wrapFunctionCond :: (TypeVarMap, Integer, a) -> a\n    function wrapFunctionCond(_typeVarMap, index, value) {\n      if (typeInfo.types[index].type !== FUNCTION) return value;\n\n      var expType = typeInfo.types[index];\n\n      //  checkValue :: (TypeVarMap, Integer, String, a) -> Either (() -> Error) TypeVarMap\n      function checkValue(typeVarMap, index, k, x) {\n        var propPath = [k];\n        var t = expType.types[k].type;\n        return (\n          t.type === VARIABLE ?\n            Z.chain (\n              function(typeVarMap) {\n                return isEmpty (typeVarMap[t.name].types) ?\n                  Left (function() {\n                    return typeVarConstraintViolation (\n                      env,\n                      typeInfo,\n                      index,\n                      propPath,\n                      typeVarMap[t.name].valuesByPath\n                    );\n                  }) :\n                  Right (typeVarMap);\n              },\n              Right (updateTypeVarMap (env,\n                                       typeVarMap,\n                                       t,\n                                       index,\n                                       propPath,\n                                       [x]))\n            ) :\n          // else\n            Z.map (\n              function(r) { return r.typeVarMap; },\n              satisfactoryTypes (env,\n                                 typeInfo,\n                                 typeVarMap,\n                                 t,\n                                 index,\n                                 propPath,\n                                 [x])\n            )\n        );\n      }\n\n      var isThunk = expType.types.$1.type.type === NO_ARGUMENTS;\n      var numArgsExpected = isThunk ? 0 : expType.keys.length - 1;\n      var typeVarMap = _typeVarMap;\n      return function(x) {\n        if (arguments.length !== numArgsExpected) {\n          throw invalidArgumentsLength (typeInfo,\n                                        index,\n                                        numArgsExpected,\n                                        slice.call (arguments));\n        }\n\n        var args = arguments;\n        typeVarMap = assertRight (\n          (init (expType.keys)).reduce (function(either, k, idx) {\n            var arg = args[idx];\n            return Z.chain (function(typeVarMap) {\n              return checkValue (typeVarMap, index, k, arg);\n            }, either);\n          }, Right (typeVarMap))\n        );\n\n        var output = value.apply (this, arguments);\n        var k = last (expType.keys);\n        typeVarMap = assertRight (checkValue (typeVarMap, index, k, output));\n        return output;\n      };\n    }\n\n    //  wrapNext :: (TypeVarMap, Array Any, Integer) -> (a -> b)\n    function wrapNext(_typeVarMap, _values, index) {\n      return function(x) {\n        var args = slice.call (arguments);\n        if (args.length !== 1) {\n          throw invalidArgumentsCount (typeInfo, index, 1, args);\n        }\n        var typeVarMap = (assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             _typeVarMap,\n                             typeInfo.types[index],\n                             index,\n                             [],\n                             args)\n        )).typeVarMap;\n\n        var values = Z.concat (_values, args);\n        if (index + 1 === n) {\n          var value = values.reduce (function(f, x, idx) {\n            return f (wrapFunctionCond (typeVarMap, idx, x));\n          }, impl);\n          typeVarMap = (assertRight (\n            satisfactoryTypes (env,\n                               typeInfo,\n                               typeVarMap,\n                               typeInfo.types[n],\n                               n,\n                               [],\n                               [value])\n          )).typeVarMap;\n          return wrapFunctionCond (typeVarMap, n, value);\n        } else {\n          return wrapNext (typeVarMap, values, index + 1);\n        }\n      };\n    }\n\n    var wrapped = typeInfo.types[0].type === NO_ARGUMENTS ?\n      function() {\n        if (arguments.length !== 0) {\n          throw invalidArgumentsCount (typeInfo, 0, 0, slice.call (arguments));\n        }\n        var value = impl ();\n        var typeVarMap = assertRight (\n          satisfactoryTypes (env,\n                             typeInfo,\n                             {},\n                             typeInfo.types[n],\n                             n,\n                             [],\n                             [value])\n        ).typeVarMap;\n        return wrapFunctionCond (typeVarMap, n, value);\n      } :\n      wrapNext ({}, [], 0);\n\n    wrapped[inspect] = wrapped.toString = always0 (typeSignature (typeInfo));\n\n    return wrapped;\n  }\n\n  function _create(opts) {\n    function def(name) {\n      return function(constraints) {\n        return function(expTypes) {\n          return function(impl) {\n            return opts.checkTypes ?\n              withTypeChecking (opts.env,\n                                {name: name,\n                                 constraints: constraints,\n                                 types: augmentThunk (expTypes)},\n                                impl) :\n              impl;\n          };\n        };\n      };\n    }\n    return def (def.name)\n               ({})\n               ([String_,\n                 StrMap (Array_ (TypeClass)),\n                 NonEmpty (Array_ (Type)),\n                 AnyFunction,\n                 AnyFunction])\n               (def);\n  }\n\n  var create =\n  def ('create')\n      ({})\n      ([RecordType ({checkTypes: Boolean_, env: Array_ (Any)}), AnyFunction])\n      (_create);\n\n  //  fromUncheckedUnaryType :: (Type -> Type) -> Type -> Type\n  function fromUncheckedUnaryType(typeConstructor) {\n    var t = typeConstructor (Unknown);\n    var _1 = t.types.$1.extractor;\n    return CheckedUnaryType (t.name) (t.url) (t._test) (_1);\n  }\n\n  //  fromUncheckedBinaryType :: (Type -> Type -> Type) -> Type -> Type -> Type\n  function fromUncheckedBinaryType(typeConstructor) {\n    var t = typeConstructor (Unknown) (Unknown);\n    var _1 = t.types.$1.extractor;\n    var _2 = t.types.$2.extractor;\n    return CheckedBinaryType (t.name) (t.url) (t._test) (_1) (_2);\n  }\n\n  return {\n    Any: Any,\n    AnyFunction: AnyFunction,\n    Arguments: Arguments,\n    Array: fromUncheckedUnaryType (Array_),\n    Array0: Array0,\n    Array1: fromUncheckedUnaryType (Array1),\n    Array2: fromUncheckedBinaryType (Array2),\n    Boolean: Boolean_,\n    Date: Date_,\n    Error: Error_,\n    FiniteNumber: FiniteNumber,\n    Function: def ('Function') ({}) ([Array_ (Type), Type]) (Function_),\n    GlobalRegExp: GlobalRegExp,\n    HtmlElement: HtmlElement,\n    Integer: Integer,\n    NegativeFiniteNumber: NegativeFiniteNumber,\n    NegativeInteger: NegativeInteger,\n    NegativeNumber: NegativeNumber,\n    NonEmpty: NonEmpty,\n    NonGlobalRegExp: NonGlobalRegExp,\n    NonNegativeInteger: NonNegativeInteger,\n    NonZeroFiniteNumber: NonZeroFiniteNumber,\n    NonZeroInteger: NonZeroInteger,\n    NonZeroValidNumber: NonZeroValidNumber,\n    Null: Null,\n    Nullable: fromUncheckedUnaryType (Nullable),\n    Number: Number_,\n    Object: Object_,\n    PositiveFiniteNumber: PositiveFiniteNumber,\n    PositiveInteger: PositiveInteger,\n    PositiveNumber: PositiveNumber,\n    RegExp: RegExp_,\n    RegexFlags: RegexFlags,\n    StrMap: fromUncheckedUnaryType (StrMap),\n    String: String_,\n    Symbol: Symbol_,\n    Type: Type,\n    TypeClass: TypeClass,\n    Undefined: Undefined,\n    Unknown: Unknown,\n    ValidDate: ValidDate,\n    ValidNumber: ValidNumber,\n    env: env,\n    create: create,\n    test: def ('test') ({}) ([Array_ (Type), Type, Any, Boolean_]) (test),\n    NullaryType: CheckedNullaryType,\n    UnaryType: CheckedUnaryType,\n    BinaryType: CheckedBinaryType,\n    EnumType: CheckedEnumType,\n    RecordType: CheckedRecordType,\n    TypeVariable: CheckedTypeVariable,\n    UnaryTypeVariable: CheckedUnaryTypeVariable,\n    BinaryTypeVariable: CheckedBinaryTypeVariable,\n    Thunk: Thunk,\n    Predicate: Predicate\n  };\n\n}));\n\n//. [FL:Semigroup]:         https://github.com/fantasyland/fantasy-land#semigroup\n//. [HTML element]:         https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n//. [Monoid]:               https://github.com/fantasyland/fantasy-land#monoid\n//. [Setoid]:               https://github.com/fantasyland/fantasy-land#setoid\n//. [`Array`]:              #Array\n//. [`Array2`]:             #Array2\n//. [`BinaryType`]:         #BinaryType\n//. [`Date`]:               #Date\n//. [`FiniteNumber`]:       #FiniteNumber\n//. [`GlobalRegExp`]:       #GlobalRegExp\n//. [`Integer`]:            #Integer\n//. [`NonGlobalRegExp`]:    #NonGlobalRegExp\n//. [`Number`]:             #Number\n//. [`Object.create`]:      https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n//. [`RegExp`]:             #RegExp\n//. [`RegexFlags`]:         #RegexFlags\n//. [`String`]:             #String\n//. [`SyntaxError`]:        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError\n//. [`TypeClass`]:          https://github.com/sanctuary-js/sanctuary-type-classes#TypeClass\n//. [`TypeError`]:          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\n//. [`TypeVariable`]:       #TypeVariable\n//. [`UnaryType`]:          #UnaryType\n//. [`UnaryTypeVariable`]:  #UnaryTypeVariable\n//. [`Unknown`]:            #Unknown\n//. [`ValidNumber`]:        #ValidNumber\n//. [`env`]:                #env\n//. [arguments]:            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments\n//. [enumerated types]:     https://en.wikipedia.org/wiki/Enumerated_type\n//. [max]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n//. [min]:                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\n//. [record type]:          #RecordType\n//. [semigroup]:            https://en.wikipedia.org/wiki/Semigroup\n//. [type class]:           #type-classes\n//. [type variables]:       #TypeVariable\n//. [types]:                #types\n","export * from \"./sanctuary/Sanctuary\";\nexport * from \"./flags/Flags\";\nexport * from \"./worker/Worker-Loader\";\nexport * from \"./math/Kinematic\";\nexport * from \"./math/Quadratic\";\n","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","module.exports = copy;\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    out[2] = a[2]\n    return out\n}","module.exports = transformQuat;\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx\n    return out\n}","module.exports = subtract;\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    out[2] = a[2] - b[2]\n    return out\n}","module.exports = add;\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    out[2] = a[2] + b[2]\n    return out\n}","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = invert\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert (out, a) {\n  var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n    dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3,\n    invDot = dot ? 1.0 / dot : 0\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot\n  out[1] = -a1 * invDot\n  out[2] = -a2 * invDot\n  out[3] = a3 * invDot\n  return out\n}\n","module.exports = normalize\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize (out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  var len = x * x + y * y + z * z + w * w\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n    out[0] = x * len\n    out[1] = y * len\n    out[2] = z * len\n    out[3] = w * len\n  }\n  return out\n}\n","/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/normalize')\n","module.exports = set;\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","// Original implementation:\n// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\nvar dot = require('gl-vec3/dot')\nvar set = require('gl-vec3/set')\nvar normalize = require('gl-quat/normalize')\nvar cross = require('gl-vec3/cross')\n\nvar tmp = [0, 0, 0]\nvar EPS = 1e-6\n\nmodule.exports = quatFromUnitVec3\nfunction quatFromUnitVec3 (out, a, b) {\n  // assumes a and b are normalized\n  var r = dot(a, b) + 1\n  if (r < EPS) {\n    /* If u and v are exactly opposite, rotate 180 degrees\n     * around an arbitrary orthogonal axis. Axis normalisation\n     * can happen later, when we normalise the quaternion. */\n    r = 0\n    if (Math.abs(a[0]) > Math.abs(a[2])) {\n      set(tmp, -a[1], a[0], 0)\n    } else {\n      set(tmp, 0, -a[2], a[1])\n    }\n  } else {\n    /* Otherwise, build quaternion the standard way. */\n    cross(tmp, a, b)\n  }\n\n  out[0] = tmp[0]\n  out[1] = tmp[1]\n  out[2] = tmp[2]\n  out[3] = r\n  normalize(out, out)\n  return out\n}\n","module.exports = defaultProperty\n\nfunction defaultProperty (get, set) {\n  return {\n    configurable: true,\n    enumerable: true,\n    get: get,\n    set: set\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","var getDistance = require('gl-vec2/distance')\nvar EventEmitter = require('events').EventEmitter\nvar dprop = require('dprop')\nvar eventOffset = require('mouse-event-offset')\n\nmodule.exports = touchPinch\nfunction touchPinch (target) {\n  target = target || window\n\n  var emitter = new EventEmitter()\n  var fingers = [ null, null ]\n  var activeCount = 0\n\n  var lastDistance = 0\n  var ended = false\n  var enabled = false\n\n  // some read-only values\n  Object.defineProperties(emitter, {\n    pinching: dprop(function () {\n      return activeCount === 2\n    }),\n\n    fingers: dprop(function () {\n      return fingers\n    })\n  })\n\n  enable()\n  emitter.enable = enable\n  emitter.disable = disable\n  emitter.indexOfTouch = indexOfTouch\n  return emitter\n\n  function indexOfTouch (touch) {\n    var id = touch.identifier\n    for (var i = 0; i < fingers.length; i++) {\n      if (fingers[i] &&\n        fingers[i].touch &&\n        fingers[i].touch.identifier === id) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  function enable () {\n    if (enabled) return\n    enabled = true\n    target.addEventListener('touchstart', onTouchStart, false)\n    target.addEventListener('touchmove', onTouchMove, false)\n    target.addEventListener('touchend', onTouchRemoved, false)\n    target.addEventListener('touchcancel', onTouchRemoved, false)\n  }\n\n  function disable () {\n    if (!enabled) return\n    enabled = false\n    activeCount = 0\n    fingers[0] = null\n    fingers[1] = null\n    lastDistance = 0\n    ended = false\n    target.removeEventListener('touchstart', onTouchStart, false)\n    target.removeEventListener('touchmove', onTouchMove, false)\n    target.removeEventListener('touchend', onTouchRemoved, false)\n    target.removeEventListener('touchcancel', onTouchRemoved, false)\n  }\n\n  function onTouchStart (ev) {\n    for (var i = 0; i < ev.changedTouches.length; i++) {\n      var newTouch = ev.changedTouches[i]\n      var id = newTouch.identifier\n      var idx = indexOfTouch(id)\n\n      if (idx === -1 && activeCount < 2) {\n        var first = activeCount === 0\n\n        // newest and previous finger (previous may be undefined)\n        var newIndex = fingers[0] ? 1 : 0\n        var oldIndex = fingers[0] ? 0 : 1\n        var newFinger = new Finger()\n\n        // add to stack\n        fingers[newIndex] = newFinger\n        activeCount++\n\n        // update touch event & position\n        newFinger.touch = newTouch\n        eventOffset(newTouch, target, newFinger.position)\n\n        var oldTouch = fingers[oldIndex] ? fingers[oldIndex].touch : undefined\n        emitter.emit('place', newTouch, oldTouch)\n\n        if (!first) {\n          var initialDistance = computeDistance()\n          ended = false\n          emitter.emit('start', initialDistance)\n          lastDistance = initialDistance\n        }\n      }\n    }\n  }\n\n  function onTouchMove (ev) {\n    var changed = false\n    for (var i = 0; i < ev.changedTouches.length; i++) {\n      var movedTouch = ev.changedTouches[i]\n      var idx = indexOfTouch(movedTouch)\n      if (idx !== -1) {\n        changed = true\n        fingers[idx].touch = movedTouch // avoid caching touches\n        eventOffset(movedTouch, target, fingers[idx].position)\n      }\n    }\n\n    if (activeCount === 2 && changed) {\n      var currentDistance = computeDistance()\n      emitter.emit('change', currentDistance, lastDistance)\n      lastDistance = currentDistance\n    }\n  }\n\n  function onTouchRemoved (ev) {\n    for (var i = 0; i < ev.changedTouches.length; i++) {\n      var removed = ev.changedTouches[i]\n      var idx = indexOfTouch(removed)\n\n      if (idx !== -1) {\n        fingers[idx] = null\n        activeCount--\n        var otherIdx = idx === 0 ? 1 : 0\n        var otherTouch = fingers[otherIdx] ? fingers[otherIdx].touch : undefined\n        emitter.emit('lift', removed, otherTouch)\n      }\n    }\n\n    if (!ended && activeCount !== 2) {\n      ended = true\n      emitter.emit('end')\n    }\n  }\n\n  function computeDistance () {\n    if (activeCount < 2) return 0\n    return getDistance(fingers[0].position, fingers[1].position)\n  }\n}\n\nfunction Finger () {\n  this.position = [0, 0]\n  this.touch = null\n}\n","module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}","'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = 96\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['font-size'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'font-size') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  element = element || document.body\n  str = (str || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body \n  }\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n  }\n  return 1\n}","'use strict'\n\nvar toPX = require('to-px')\n\nmodule.exports = mouseWheelListen\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if(typeof element === 'function') {\n    noScroll = !!callback\n    callback = element\n    element = window\n  }\n  var lineHeight = toPX('ex', element)\n  var listener = function(ev) {\n    if(noScroll) {\n      ev.preventDefault()\n    }\n    var dx = ev.deltaX || 0\n    var dy = ev.deltaY || 0\n    var dz = ev.deltaZ || 0\n    var mode = ev.deltaMode\n    var scale = 1\n    switch(mode) {\n      case 1:\n        scale = lineHeight\n      break\n      case 2:\n        scale = window.innerHeight\n      break\n    }\n    dx *= scale\n    dy *= scale\n    dz *= scale\n    if(dx || dy || dz) {\n      return callback(dx, dy, dz, ev)\n    }\n  }\n  element.addEventListener('wheel', listener)\n  return listener\n}\n","var mouseWheel = require('mouse-wheel')\nvar eventOffset = require('mouse-event-offset')\nvar createPinch = require('touch-pinch')\n\nmodule.exports = inputEvents\nfunction inputEvents (opt) {\n  var element = opt.element || window\n  var parent = opt.parent || element\n  var mouseStart = [0, 0]\n  var dragging = false\n  var tmp = [0, 0]\n  var tmp2 = [0, 0]\n  var pinch\n\n  var zoomFn = opt.zoom\n  var rotateFn = opt.rotate\n  var pinchFn = opt.pinch\n  var mouseWheelListener\n  var enabled = false\n  enable()\n\n  return {\n    isDragging: function () {\n      return dragging\n    },\n    isPinching: isPinching,\n    enable: enable,\n    disable: disable\n  }\n\n  function enable () {\n    if (enabled) return\n    enabled = true\n    if (zoomFn) {\n      mouseWheelListener = mouseWheel(element, function (dx, dy) {\n        zoomFn(dy)\n      }, true)\n    }\n\n    if (rotateFn) {\n      element.addEventListener('mousedown', onInputDown, false)\n\n      // for dragging to work outside canvas bounds,\n      // mouse move/up events have to be added to parent, i.e. window\n      parent.addEventListener('mousemove', onInputMove, false)\n      parent.addEventListener('mouseup', onInputUp, false)\n    }\n\n    if (rotateFn || pinchFn) {\n      pinch = createPinch(element)\n\n      // don't allow simulated mouse events\n      element.addEventListener('touchstart', preventDefault, false)\n\n      if (rotateFn) {\n        element.addEventListener('touchmove', onTouchMove, false)\n        pinch.on('place', onPinchPlace)\n        pinch.on('lift', onPinchLift)\n      }\n      if (pinchFn) {\n        pinch.on('change', onPinchChange)\n      }\n    }\n  }\n\n  function disable () {\n    if (!enabled) return\n    enabled = false\n    if (mouseWheelListener) {\n      element.removeEventListener('wheel', mouseWheelListener)\n    }\n    if (pinch) {\n      pinch.disable()\n      element.removeEventListener('touchstart', preventDefault, false)\n      if (rotateFn) {\n        element.removeEventListener('touchmove', onTouchMove, false)\n      }\n    }\n    if (rotateFn) {\n      parent.removeEventListener('mousedown', onInputDown, false)\n      parent.removeEventListener('mousemove', onInputMove, false)\n      parent.removeEventListener('mouseup', onInputUp, false)\n    }\n  }\n\n  function preventDefault (ev) {\n    ev.preventDefault()\n  }\n\n  function onTouchMove (ev) {\n    if (!dragging || isPinching()) return\n\n    // find currently active finger\n    for (var i = 0; i < ev.changedTouches.length; i++) {\n      var changed = ev.changedTouches[i]\n      var idx = pinch.indexOfTouch(changed)\n      // if pinch is disabled but rotate enabled,\n      // only allow first finger to affect rotation\n      var allow = pinchFn ? idx !== -1 : idx === 0\n      if (allow) {\n        onInputMove(changed)\n        break\n      }\n    }\n  }\n\n  function onPinchPlace (newFinger, lastFinger) {\n    dragging = !isPinching()\n    if (dragging) {\n      var firstFinger = lastFinger || newFinger\n      onInputDown(firstFinger)\n    }\n  }\n\n  function onPinchLift (lifted, remaining) {\n    // if either finger is down, consider it dragging\n    var sum = pinch.fingers.reduce(function (sum, item) {\n      return sum + (item ? 1 : 0)\n    }, 0)\n    dragging = pinchFn && sum >= 1\n\n    if (dragging && remaining) {\n      eventOffset(remaining, element, mouseStart)\n    }\n  }\n\n  function isPinching () {\n    return pinch.pinching && pinchFn\n  }\n\n  function onPinchChange (current, prev) {\n    pinchFn(current - prev)\n  }\n\n  function onInputDown (ev) {\n    eventOffset(ev, element, mouseStart)\n    if (insideBounds(mouseStart)) {\n      dragging = true\n    }\n  }\n\n  function onInputUp () {\n    dragging = false\n  }\n\n  function onInputMove (ev) {\n    var end = eventOffset(ev, element, tmp)\n    if (pinch && isPinching()) {\n      mouseStart = end\n      return\n    }\n    if (!dragging) return\n    var rect = getClientSize(tmp2)\n    var dx = (end[0] - mouseStart[0]) / rect[0]\n    var dy = (end[1] - mouseStart[1]) / rect[1]\n    rotateFn(dx, dy)\n    mouseStart[0] = end[0]\n    mouseStart[1] = end[1]\n  }\n\n  function insideBounds (pos) {\n    if (element === window ||\n        element === document ||\n        element === document.body) {\n      return true\n    } else {\n      var rect = element.getBoundingClientRect()\n      return pos[0] >= 0 && pos[1] >= 0 &&\n        pos[0] < rect.width && pos[1] < rect.height\n    }\n  }\n\n  function getClientSize (out) {\n    var source = element\n    if (source === window ||\n        source === document ||\n        source === document.body) {\n      source = document.documentElement\n    }\n    out[0] = source.clientWidth\n    out[1] = source.clientHeight\n    return out\n  }\n}\n","module.exports = clamp\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value)\n}\n","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var defined = require('defined')\nvar clamp = require('clamp')\n\nvar inputEvents = require('./lib/input')\nvar quatFromVec3 = require('quat-from-unit-vec3')\nvar quatInvert = require('gl-quat/invert')\n\nvar glVec3 = {\n  length: require('gl-vec3/length'),\n  add: require('gl-vec3/add'),\n  subtract: require('gl-vec3/subtract'),\n  transformQuat: require('gl-vec3/transformQuat'),\n  copy: require('gl-vec3/copy'),\n  normalize: require('gl-vec3/normalize'),\n  cross: require('gl-vec3/cross')\n}\n\nvar Y_UP = [0, 1, 0]\nvar EPSILON = Math.pow(2, -23)\nvar tmpVec3 = [0, 0, 0]\n\nmodule.exports = createOrbitControls\nfunction createOrbitControls (opt) {\n  opt = opt || {}\n\n  var inputDelta = [0, 0, 0] // x, y, zoom\n  var offset = [0, 0, 0]\n\n  var upQuat = [0, 0, 0, 1]\n  var upQuatInverse = upQuat.slice()\n  var _phi = defined(opt.phi, Math.PI / 2)\n  var _theta = opt.theta || 0\n\n  var controls = {\n    update: update,\n    copyInto: copyInto,\n\n    position: opt.position ? opt.position.slice() : [0, 0, 1],\n    direction: [0, 0, -1],\n    up: opt.up ? opt.up.slice() : [0, 1, 0],\n\n    target: opt.target ? opt.target.slice() : [0, 0, 0],\n    distance: defined(opt.distance, 1),\n    damping: defined(opt.damping, 0.25),\n    rotateSpeed: defined(opt.rotateSpeed, 0.28),\n    zoomSpeed: defined(opt.zoomSpeed, 0.0075),\n    pinchSpeed: defined(opt.pinchSpeed, 0.0075),\n\n    pinch: opt.pinching !== false,\n    zoom: opt.zoom !== false,\n    rotate: opt.rotate !== false,\n\n    phiBounds: opt.phiBounds || [0, Math.PI],\n    thetaBounds: opt.thetaBounds || [-Infinity, Infinity],\n    distanceBounds: opt.distanceBounds || [0, Infinity]\n  }\n\n  // Compute distance if not defined in user options\n  if (typeof opt.distance !== 'number') {\n    glVec3.subtract(tmpVec3, controls.position, controls.target)\n    controls.distance = glVec3.length(tmpVec3)\n  }\n\n  var input = inputEvents({\n    parent: opt.parent || window,\n    element: opt.element,\n    rotate: opt.rotate !== false ? inputRotate : null,\n    zoom: opt.zoom !== false ? inputZoom : null,\n    pinch: opt.pinch !== false ? inputPinch : null\n  })\n\n  controls.enable = input.enable\n  controls.disable = input.disable\n\n  Object.defineProperties(controls, {\n    phi: {\n      get: function () { return _phi },\n      set: function (v) {\n        _phi = v\n        applyPhiTheta()\n      }\n    },\n    theta: {\n      get: function () { return _theta },\n      set: function (v) {\n        _theta = v\n        applyPhiTheta()\n      }\n    },\n    dragging: {\n      get: function () { return input.isDragging() }\n    },\n    pinching: {\n      get: function () { return input.isPinching() }\n    }\n  })\n\n  // Apply an initial phi and theta\n  applyPhiTheta()\n\n  return controls\n\n  function inputRotate (dx, dy) {\n    var PI2 = Math.PI * 2\n    inputDelta[0] -= PI2 * dx * controls.rotateSpeed\n    inputDelta[1] -= PI2 * dy * controls.rotateSpeed\n  }\n\n  function inputZoom (delta) {\n    inputDelta[2] += delta * controls.zoomSpeed\n  }\n\n  function inputPinch (delta) {\n    inputDelta[2] -= delta * controls.pinchSpeed\n  }\n\n  function updateDirection () {\n    var cameraUp = controls.up || Y_UP\n    quatFromVec3(upQuat, cameraUp, Y_UP)\n    quatInvert(upQuatInverse, upQuat)\n\n    var distance = controls.distance\n\n    glVec3.subtract(offset, controls.position, controls.target)\n    glVec3.transformQuat(offset, offset, upQuat)\n\n    var theta = Math.atan2(offset[0], offset[2])\n    var phi = Math.atan2(Math.sqrt(offset[0] * offset[0] + offset[2] * offset[2]), offset[1])\n\n    theta += inputDelta[0]\n    phi += inputDelta[1]\n\n    theta = clamp(theta, controls.thetaBounds[0], controls.thetaBounds[1])\n    phi = clamp(phi, controls.phiBounds[0], controls.phiBounds[1])\n    phi = clamp(phi, EPSILON, Math.PI - EPSILON)\n\n    distance += inputDelta[2]\n    distance = clamp(distance, controls.distanceBounds[0], controls.distanceBounds[1])\n\n    var radius = Math.abs(distance) <= EPSILON ? EPSILON : distance\n    offset[0] = radius * Math.sin(phi) * Math.sin(theta)\n    offset[1] = radius * Math.cos(phi)\n    offset[2] = radius * Math.sin(phi) * Math.cos(theta)\n\n    _phi = phi\n    _theta = theta\n    controls.distance = distance\n\n    glVec3.transformQuat(offset, offset, upQuatInverse)\n    glVec3.add(controls.position, controls.target, offset)\n    camLookAt(controls.direction, cameraUp, controls.position, controls.target)\n  }\n\n  function update () {\n    updateDirection()\n    var damp = typeof controls.damping === 'number' ? controls.damping : 1\n    for (var i = 0; i < inputDelta.length; i++) {\n      inputDelta[i] *= 1 - damp\n    }\n  }\n\n  function copyInto (position, direction, up) {\n    if (position) glVec3.copy(position, controls.position)\n    if (direction) glVec3.copy(direction, controls.direction)\n    if (up) glVec3.copy(up, controls.up)\n  }\n\n  function applyPhiTheta () {\n    var phi = controls.phi\n    var theta = controls.theta\n    theta = clamp(theta, controls.thetaBounds[0], controls.thetaBounds[1])\n    phi = clamp(phi, controls.phiBounds[0], controls.phiBounds[1])\n    phi = clamp(phi, EPSILON, Math.PI - EPSILON)\n\n    var dist = Math.max(EPSILON, controls.distance)\n    controls.position[0] = dist * Math.sin(phi) * Math.sin(theta)\n    controls.position[1] = dist * Math.cos(phi)\n    controls.position[2] = dist * Math.sin(phi) * Math.cos(theta)\n    glVec3.add(controls.position, controls.position, controls.target)\n\n    updateDirection()\n  }\n}\n\nfunction camLookAt (direction, up, position, target) {\n  glVec3.copy(direction, target)\n  glVec3.subtract(direction, direction, position)\n  glVec3.normalize(direction, direction)\n}\n","import {\n    Camera,\n    createMat4,\n    getCameraProjection,\n    GltfScene\n} from \"pure3d\";\nimport * as setupOrbitControls from \"orbit-controls\";\nimport {mat4} from \"gl-matrix\";\n\nexport const createControls = (camera:Camera) => {\n    const orbitControls = setupOrbitControls({\n        position: camera.position,\n        target: Float64Array.from([0,0,-2]) \n    });\n\n    orbitControls.enable();\n\n    const updateCamera = ():Camera => {\n        orbitControls.update();\n        const view = mat4.lookAt(createMat4() as any, \n            orbitControls.position, \n            orbitControls.direction, \n            orbitControls.up\n        );\n\n        //this usually isn't needed, but it helps to debug\n        const projection = getCameraProjection(camera); \n\n        return Object.assign({}, camera, {\n            position: orbitControls.position, \n            view, \n            projection\n        })\n    }\n\n    return {updateCamera};\n}\n","import {\n    WebGlConstants,\n    GltfBridge,\n    Camera,\n    WebGlRenderer,\n    GltfScene\n} from \"pure3d\";\nimport {\n    S,\n} from \"utils/Utils\";\n\nexport interface OutputProps {\n    canvas: HTMLCanvasElement;\n    renderer: WebGlRenderer;\n    gltfBridges: Array<GltfBridge>;\n    renderSkybox: (camera:Camera) => void;\n    camera:Camera;\n}\n\nexport const makeOutput = \n    ({canvas, renderer, camera, gltfBridges, renderSkybox}:OutputProps) => \n    (scenes:Array<GltfScene>) => {\n        const camera = scenes[0].camera; // they're all the same\n        renderer.gl.clear(WebGlConstants.COLOR_BUFFER_BIT | WebGlConstants.DEPTH_BUFFER_BIT); \n        renderSkybox(camera);\n        gltfBridges.forEach((bridge, idx) => bridge.renderScene(scenes[idx]));\n    }\n","import {\n    GLTF_ORIGINAL,\n    GltfIblExtensionName,\n    Camera,\n    GltfLightsExtensionName\n} from \"pure3d\";\nimport {createSkybox} from \"../io/renderers/skybox/Skybox\";\nimport {Future} from \"fluture\";\nimport {S} from \"utils/Utils\";\n\nexport const addGltfExtensions = () => { \n\n    const addExtension = (name:string) => (meta:any) => (gltf:GLTF_ORIGINAL):GLTF_ORIGINAL => \n        Object.assign({}, gltf, {\n            extensionsUsed:\n                gltf.extensionsUsed\n                    ?   gltf.extensionsUsed.concat([name])\n                    :   [name],\n                extensions:\n                    gltf.extensions\n                    ?   Object.assign({}, gltf.extensions, {\n                            [name]: meta\n                        })\n                    :   {\n                            [name]: meta\n                        }\n        });\n\n    const addIbl = (gltf:GLTF_ORIGINAL) => {\n        const meta = {\n            path: \"static/world/world.json\",\n            settings: {\n                scaleDiffBaseMR: Float64Array.from([0.0, 0.0, 0.0, 0.0]),\n                scaleFGDSpec: Float64Array.from([0.0, 0.0, 0.0, 0.0]),\n                scaleIBLAmbient: Float64Array.from([1.0, 1.0, 0.0, 0.0]),\n            }\n        }\n\n        return addExtension (GltfIblExtensionName) (meta) (gltf);\n    }\n\n\n    const addLights = (gltf:GLTF_ORIGINAL) => {\n        const meta = {\n            lights: [\n\n                {\n                    \"color\": [\n                        1.0,\n                        1.0,\n                        1.0\n                    ],\n                    \"type\": \"ambient\"\n                },\n                {\n                    \"spot\": {\n                        \"innerConeAngle\": 0.785398163397448,\n                        \"outerConeAngle\": 1.57079632679,\n                    },\n                    \"color\": [\n                        1.0,\n                        1.0,\n                        1.0\n                    ],\n                    \"type\": \"spot\"\n                },\n                {\n                    \"color\": [\n                        .2,\n                        .2,\n                        .2\n                    ],\n                    \"type\": \"directional\"\n                }\n            ]\n        }\n\n\n        gltf.nodes.push({\n            \"extensions\" : {\n                \"KHR_lights\" : {\n                    \"light\" : 1\n                }\n            }\n        },\n        {\n            \"extensions\" : {\n                \"KHR_lights\" : {\n                    \"light\" : 2\n                }\n            }\n        }\n        )\n\n        if(gltf.scenes) {\n            gltf.scenes[0].nodes.push(gltf.nodes.length-1)\n           \n            if(!gltf.scenes[0].extensions) {\n                gltf.scenes[0].extensions = {}\n            }\n\n            Object.assign(gltf.scenes[0].extensions, {\n                \"KHR_lights\": {\n                    \"light\": 0\n                }\n            });\n        }\n\n        return addExtension (GltfLightsExtensionName) (meta) (gltf);\n    }\n\n    return S.pipe([\n        addIbl,\n        //addLights\n    ])\n    \n}\n","export default \"precision mediump float;\\n\\nvarying vec3 v_TexCoord;\\n\\nuniform samplerCube u_Sampler; \\n\\nvoid main() {\\n    gl_FragColor = textureCube(u_Sampler, v_TexCoord);\\n    //gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\\n}\\n\"","export default \"attribute vec3 a_Vertex;\\n\\nvarying vec3 v_TexCoord;\\n\\nuniform mat4 u_Transform;\\n\\nvoid main() {     \\n    gl_Position = u_Transform * (vec4(a_Vertex,1));\\n\\n    v_TexCoord = a_Vertex;\\n}\\n\"","import { WebGlRenderer, WebGlConstants } from \"pure3d\"\n\n\nexport const GEOMETRY_BUFFER_ID = Symbol(\"boxGeom\");\nexport const ELEMENTS_BUFFER_ID = Symbol(\"boxElements\");\n\nexport const uploadData = (renderer:WebGlRenderer) => (size:number) => {\n    const data = cube(size);\n\n    renderer.buffers.assign(GEOMETRY_BUFFER_ID) ({\n        target: WebGlConstants.ARRAY_BUFFER,\n        usagePattern: WebGlConstants.STATIC_DRAW,\n        data: data.vertexPositions\n    });\n\n    renderer.buffers.assign(ELEMENTS_BUFFER_ID) ({\n        target: WebGlConstants.ELEMENT_ARRAY_BUFFER,\n        usagePattern: WebGlConstants.STATIC_DRAW,\n        data: data.indices\n    });\n\n    return data;\n}\n\n//pulled somewhere off the internet\nconst cube = (side) => {\n   var s = (side || 1)/2;\n   var coords = [];\n   var normals = [];\n   var texCoords = [];\n   var indices = [];\n   function face(xyz, nrm) {\n      var start = coords.length/3;\n      var i;\n      for (i = 0; i < 12; i++) {\n         coords.push(xyz[i]);\n      }\n      for (i = 0; i < 4; i++) {\n         normals.push(nrm[0],nrm[1],nrm[2]);\n      }\n      texCoords.push(0,0,1,0,1,1,0,1);\n      indices.push(start,start+1,start+2,start,start+2,start+3);\n   }\n   face( [-s,-s,s, s,-s,s, s,s,s, -s,s,s], [0,0,1] );\n   face( [-s,-s,-s, -s,s,-s, s,s,-s, s,-s,-s], [0,0,-1] );\n   face( [-s,s,-s, -s,s,s, s,s,s, s,s,-s], [0,1,0] );\n   face( [-s,-s,-s, s,-s,-s, s,-s,s, -s,-s,s], [0,-1,0] );\n   face( [s,-s,-s, s,s,-s, s,s,s, s,-s,s], [1,0,0] );\n   face( [-s,-s,-s, -s,-s,s, -s,s,s, -s,s,-s], [-1,0,0] );\n   return {\n      vertexPositions: new Float32Array(coords),\n      vertexNormals: new Float32Array(normals),\n      vertexTextureCoords: new Float32Array(texCoords),\n      indices: new Uint16Array(indices)\n   }\n}\n","import {\n    WebGlRenderer,\n    activateShader,\n    createShader,\n    Camera,\n    createCubeTextureFromTarget,\n    WebGlConstants\n} from \"pure3d\"\nimport {mat4} from \"gl-matrix\";\nimport { S } from \"utils/Utils\";\nimport {parallel, Future} from \"fluture\";\nimport {fetchImage} from \"fluture-loaders\";\nimport {ELEMENTS_BUFFER_ID, uploadData, GEOMETRY_BUFFER_ID} from \"./Skybox-Data\";\nimport vertexShader from \"./Skybox-Shader-Vertex.glsl\";\nimport fragmentShader from \"./Skybox-Shader-Fragment.glsl\";\n\n\nconst loadSkybox = (renderer:WebGlRenderer) => (urls:Array<string>) => \n    parallel(Infinity, urls.map(fetchImage))\n        .map(imgElements => \n            createCubeTextureFromTarget({\n                gl: renderer.gl,\n                format: WebGlConstants.RGB, \n                setParameters: opts => {\n                    renderer.gl.pixelStorei(WebGlConstants.UNPACK_FLIP_Y_WEBGL, false);\n                    renderer.gl.texParameteri(WebGlConstants.TEXTURE_CUBE_MAP, WebGlConstants.TEXTURE_WRAP_S, WebGlConstants.CLAMP_TO_EDGE);\n                    renderer.gl.texParameteri(WebGlConstants.TEXTURE_CUBE_MAP, WebGlConstants.TEXTURE_WRAP_T, WebGlConstants.CLAMP_TO_EDGE);\n                    renderer.gl.texParameteri(WebGlConstants.TEXTURE_CUBE_MAP, WebGlConstants.TEXTURE_MIN_FILTER, WebGlConstants.LINEAR);\n                    renderer.gl.texParameteri(WebGlConstants.TEXTURE_CUBE_MAP, WebGlConstants.TEXTURE_MAG_FILTER, WebGlConstants.LINEAR);\n                }\n            }) \n            ({\n                posX: imgElements[0], \n                negX: imgElements[1],\n                posY: imgElements[2],\n                negY: imgElements[3],\n                posZ: imgElements[4],\n                negZ: imgElements[5],\n            })\n        )\n\nexport const createSkybox = (renderer:WebGlRenderer) => (urls:Array<string>) => \n    loadSkybox(renderer) (urls)\n        .map(texture => { \n\n\n            const shaderId = Symbol();\n            const vaoId = Symbol();\n            const {gl, buffers} = renderer;\n\n            //This must come first here since we're also working with gltf\n            //See wiki and compare to \"basic vao\" example for per-shader / automatic approach\n            renderer.attributes.globalLocations.add(\"a_Vertex\");\n            \n            const {indices} = uploadData(renderer) (900);\n            \n            const shader = createShader({renderer, shaderId, source: {\n                vertex: vertexShader,\n                fragment: fragmentShader\n            }});\n\n\n\n            const {uniform1i, uniform1f, uniform2fv, uniform3fv, uniform4fv, uniformMatrix4fv} = shader.uniforms.setters;\n            activateShader(shaderId);\n\n\n            renderer.vertexArrays.assign(vaoId) ({\n                elementBufferId: ELEMENTS_BUFFER_ID,\n                data: [\n                    {\n                        location: renderer.attributes.getLocationInRenderer(\"a_Vertex\"),\n                        bufferId: GEOMETRY_BUFFER_ID,\n                        size: 3,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride: 0,\n                        offset: 0\n                    },\n                ]  \n            });\n\n            const render = (camera:Camera) => {\n                activateShader(shaderId);\n\n                renderer.glToggle(WebGlConstants.DEPTH_TEST) (true);\n                renderer.glToggle(WebGlConstants.CULL_FACE) (false);\n\n                renderer.switchCubeTexture(0) (texture);\n                uniform1i(\"u_Sampler\") (0);\n\n\n                //TODO - First get to work, then replace with scene camera\n                const cameraMatrix = mat4.multiply(mat4.create(), camera.projection as any, camera.view as any);\n                uniformMatrix4fv(\"u_Transform\") (false) (cameraMatrix);\n\n                renderer.vertexArrays.activate(vaoId);\n                gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\n            }\n\n            return render;\n        });\n","import {\n    WebGlRenderer, \n    gltf_load,\n    GLTF_ORIGINAL,\n    GltfIblExtensionName,\n    Camera\n} from \"pure3d\";\nimport {createSkybox} from \"../io/renderers/skybox/Skybox\"; \nimport {Future} from \"fluture\";\nimport {addGltfExtensions} from \"./Init-Mixin\";\n\nexport const loadAssets = (renderer:WebGlRenderer) => \n    (createSkybox (renderer) ([\n        \"static/world/environment/environment_right_0.jpg\",\n        \"static/world/environment/environment_left_0.jpg\",\n        \"static/world/environment/environment_top_0.jpg\",\n        \"static/world/environment/environment_bottom_0.jpg\",\n        \"static/world/environment/environment_front_0.jpg\",\n        \"static/world/environment/environment_back_0.jpg\"\n    ]) as Future<any, (camera:Camera) => void>)\n    .map(renderSkybox => ({renderSkybox, gltfBridges: []}))\n    .chain(obj => \n        loadModel (renderer) (\"static/ball/scene.gltf\")\n            .map(bridge => Object.assign({}, obj, {gltfBridges: obj.gltfBridges.concat([bridge])}))\n    )\n    .chain(obj => \n        loadModel (renderer) (\"static/cube/Cube.gltf\")\n            .map(bridge => Object.assign({}, obj, {gltfBridges: obj.gltfBridges.concat([bridge])}))\n    );\n\nconst loadModel = (renderer:WebGlRenderer) => (path:string) => \n    gltf_load({\n        renderer, \n        path,\n        config: { },\n        mapper: addGltfExtensions()\n    });\n\n\n","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;","/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"BEFORE\"] = 0] = \"BEFORE\";\n    Direction[Direction[\"AFTER\"] = 1] = \"AFTER\";\n    Direction[Direction[\"INSIDE_AT_END\"] = 2] = \"INSIDE_AT_END\";\n    Direction[Direction[\"INSIDE_AT_START\"] = 3] = \"INSIDE_AT_START\";\n})(Direction || (Direction = {}));\nvar MultiRootTree = /** @class */ (function () {\n    function MultiRootTree(rootIds, nodes) {\n        if (rootIds === void 0) { rootIds = []; }\n        if (nodes === void 0) { nodes = {}; }\n        this.rootIds = rootIds;\n        this.nodes = nodes;\n        this.initRootIds();\n        this.initNodes();\n    }\n    MultiRootTree.prototype.initRootIds = function () {\n        for (var _i = 0, _a = this.rootIds; _i < _a.length; _i++) {\n            var rootId = _a[_i];\n            this.createEmptyNodeIfNotExist(rootId);\n        }\n    };\n    MultiRootTree.prototype.initNodes = function () {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var _i = 0, _a = this.nodes[nodeKey]; _i < _a.length; _i++) {\n                    var nodeListItem = _a[_i];\n                    this.createEmptyNodeIfNotExist(nodeListItem);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.createEmptyNodeIfNotExist = function (nodeKey) {\n        if (!this.nodes[nodeKey]) {\n            this.nodes[nodeKey] = [];\n        }\n    };\n    MultiRootTree.prototype.getRootIds = function () {\n        var clone = this.rootIds.slice();\n        return clone;\n    };\n    MultiRootTree.prototype.getNodes = function () {\n        var clone = {};\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                clone[nodeKey] = this.nodes[nodeKey].slice();\n            }\n        }\n        return clone;\n    };\n    MultiRootTree.prototype.getObject = function () {\n        return {\n            rootIds: this.getRootIds(),\n            nodes: this.getNodes(),\n        };\n    };\n    MultiRootTree.prototype.toObject = function () {\n        return this.getObject();\n    };\n    MultiRootTree.prototype.flatten = function () {\n        var _this = this;\n        var extraPropsObject = [];\n        for (var i = 0; i < this.rootIds.length; i++) {\n            var rootId = this.rootIds[i];\n            extraPropsObject.push({\n                id: rootId,\n                level: 0,\n                hasParent: false,\n                childrenCount: 0,\n            });\n            traverse(rootId, this.nodes, extraPropsObject, 0);\n        }\n        for (var _i = 0, extraPropsObject_1 = extraPropsObject; _i < extraPropsObject_1.length; _i++) {\n            var o = extraPropsObject_1[_i];\n            o.childrenCount = countChildren(o.id);\n        }\n        return extraPropsObject;\n        function countChildren(id) {\n            if (!_this.nodes[id]) {\n                return 0;\n            }\n            else {\n                var childrenCount = _this.nodes[id].length;\n                return childrenCount;\n            }\n        }\n        function traverse(startId, nodes, returnArray, level) {\n            if (level === void 0) { level = 0; }\n            if (!startId || !nodes || !returnArray || !nodes[startId]) {\n                return;\n            }\n            level++;\n            var idsList = nodes[startId];\n            for (var i = 0; i < idsList.length; i++) {\n                var id = idsList[i];\n                returnArray.push({ id: id, level: level, hasParent: true });\n                traverse(id, nodes, returnArray, level);\n            }\n            level--;\n        }\n    };\n    MultiRootTree.prototype.moveIdBeforeId = function (moveId, beforeId) {\n        return this.moveId(moveId, beforeId, Direction.BEFORE);\n    };\n    MultiRootTree.prototype.moveIdAfterId = function (moveId, afterId) {\n        return this.moveId(moveId, afterId, Direction.AFTER);\n    };\n    MultiRootTree.prototype.moveIdIntoId = function (moveId, insideId, atStart) {\n        if (atStart === void 0) { atStart = true; }\n        if (atStart) {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_START);\n        }\n        else {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_END);\n        }\n    };\n    MultiRootTree.prototype.swapRootIdWithRootId = function (rootId, withRootId) {\n        var leftIndex = this.findRootId(rootId);\n        var rightIndex = this.findRootId(withRootId);\n        this.swapRootPositionWithRootPosition(leftIndex, rightIndex);\n    };\n    MultiRootTree.prototype.swapRootPositionWithRootPosition = function (swapRootPosition, withRootPosition) {\n        var temp = this.rootIds[withRootPosition];\n        this.rootIds[withRootPosition] = this.rootIds[swapRootPosition];\n        this.rootIds[swapRootPosition] = temp;\n    };\n    MultiRootTree.prototype.deleteId = function (id) {\n        this.rootDeleteId(id);\n        this.nodeAndSubNodesDelete(id);\n        this.nodeRefrencesDelete(id);\n    };\n    MultiRootTree.prototype.insertIdBeforeId = function (beforeId, insertId) {\n        var foundRootIdIndex = this.findRootId(beforeId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdAfterId = function (belowId, insertId) {\n        var foundRootIdIndex = this.findRootId(belowId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex + 1);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, belowId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex + 1);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdIntoId = function (insideId, insertId) {\n        this.nodeInsertAtEnd(insideId, insertId);\n        this.nodes[insertId] = [];\n    };\n    MultiRootTree.prototype.insertIdIntoRoot = function (id, position) {\n        if (position === undefined) {\n            this.rootInsertAtEnd(id);\n        }\n        else {\n            if (position < 0) {\n                var length_1 = this.rootIds.length;\n                this.rootIds.splice((position + length_1 + 1), 0, id);\n            }\n            else {\n                this.rootIds.splice(position, 0, id);\n            }\n        }\n        this.nodes[id] = this.nodes[id] || [];\n    };\n    MultiRootTree.prototype.insertIdIntoNode = function (nodeKey, id, position) {\n        this.nodes[nodeKey] = this.nodes[nodeKey] || [];\n        this.nodes[id] = this.nodes[id] || [];\n        if (position === undefined) {\n            this.nodeInsertAtEnd(nodeKey, id);\n        }\n        else {\n            if (position < 0) {\n                var length_2 = this.nodes[nodeKey].length;\n                this.nodes[nodeKey].splice((position + length_2 + 1), 0, id);\n            }\n            else {\n                this.nodes[nodeKey].splice(position, 0, id);\n            }\n        }\n    };\n    MultiRootTree.prototype.moveId = function (moveId, beforeId, direction) {\n        var sourceId = moveId;\n        var sourceRootIndex = this.findRootId(sourceId);\n        var sourceNodeKey;\n        var sourceNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            sourceNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                sourceNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        var targetId = beforeId;\n        var targetRootIndex = this.findRootId(targetId);\n        var targetNodeKey;\n        var targetNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            targetNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                targetNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        if (sourceRootIndex > -1) {\n            if (targetRootIndex > -1) {\n                // moving root to root\n                // console.log(`Moving ROOT to ROOT`);\n                // console.log(`RootIds:`);\n                // console.log(this.rootIds);\n                // console.log(`TargetIndex=${targetRootIndex}, SourceIndex=${sourceRootIndex}`);\n                // console.log(`TargetId=${targetId}, SourceId=${sourceId}`);\n                this.rootDelete(sourceRootIndex); // indexes change now\n                if (targetRootIndex > sourceRootIndex) {\n                    targetRootIndex--;\n                }\n                else {\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving root (source) ABOVE node (target)\n                // will remove one entry from roots\n                this.rootDelete(sourceRootIndex);\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (targetRootIndex > -1) {\n                // moving node (source) ABOVE root (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            // this.nodeInsertId(nodeKey, sourceId, index);\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving node (source) ABOVE node (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.swapArrayElements = function (arr, indexA, indexB) {\n        var temp = arr[indexA];\n        arr[indexA] = arr[indexB];\n        arr[indexB] = temp;\n        return arr;\n    };\n    MultiRootTree.prototype.rootDeleteId = function (id) {\n        var index = this.findRootId(id);\n        if (index > -1) {\n            this.rootDelete(index);\n        }\n    };\n    MultiRootTree.prototype.nodeAndSubNodesDelete = function (nodeKey) {\n        var toDeleteLater = [];\n        for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n            var id = this.nodes[nodeKey][i];\n            this.nodeAndSubNodesDelete(id);\n            toDeleteLater.push(nodeKey);\n        }\n        this.nodeDelete(nodeKey);\n        for (var i = 0; i < toDeleteLater.length; i++) {\n            this.nodeDelete(toDeleteLater[i]);\n        }\n    };\n    MultiRootTree.prototype.nodeRefrencesDelete = function (id) {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n                    var targetId = this.nodes[nodeKey][i];\n                    if (targetId === id) {\n                        this.nodeDeleteAtIndex(nodeKey, i);\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.nodeDelete = function (nodeKey) {\n        delete this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.findRootId = function (id) {\n        return this.rootIds.indexOf(id);\n    };\n    MultiRootTree.prototype.findNodeId = function (nodeKey, id) {\n        return this.nodes[nodeKey].indexOf(id);\n    };\n    MultiRootTree.prototype.findNode = function (nodeKey) {\n        return this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.nodeInsertAtStart = function (nodeKey, id) {\n        this.nodes[nodeKey].unshift(id);\n    };\n    MultiRootTree.prototype.nodeInsertAtEnd = function (nodeKey, id) {\n        this.nodes[nodeKey].push(id);\n    };\n    MultiRootTree.prototype.rootDelete = function (index) {\n        this.rootIds.splice(index, 1);\n    };\n    MultiRootTree.prototype.nodeDeleteAtIndex = function (nodeKey, index) {\n        this.nodes[nodeKey].splice(index, 1);\n    };\n    MultiRootTree.prototype.rootInsertAtStart = function (id) {\n        this.rootIds.unshift(id);\n    };\n    MultiRootTree.prototype.rootInsertAtEnd = function (id) {\n        this.rootIds.push(id);\n    };\n    return MultiRootTree;\n}());\nexports.default = MultiRootTree;\n//# sourceMappingURL=MultiRootTree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList_1 = require(\"./LinkedList\");\nvar Stack = /** @class */ (function () {\n    /**\n     * Creates an empty Stack.\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\n     * element added to the stack will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Stack() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.push = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.add = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Removes the object at the top of this stack and returns that object.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.pop = function () {\n        return this.list.removeElementAtIndex(0);\n    };\n    /**\n     * Looks at the object at the top of this stack without removing it from the\n     * stack.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.peek = function () {\n        return this.list.first();\n    };\n    /**\n     * Returns the number of elements in this stack.\n     * @return {number} the number of elements in this stack.\n     */\n    Stack.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this stack contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this stack contains the specified element,\n     * false otherwise.\n     */\n    Stack.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this stack is empty.\n     * @return {boolean} true if and only if this stack contains no items; false\n     * otherwise.\n     */\n    Stack.prototype.isEmpty = function () {\n        return this.list.isEmpty();\n    };\n    /**\n     * Removes all of the elements from this stack.\n     */\n    Stack.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this stack in\n     * LIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Stack.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Stack;\n}()); // End of stack\nexports.default = Stack;\n//# sourceMappingURL=Stack.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Heap_1 = require(\"./Heap\");\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * Creates an empty priority queue.\n     * @class <p>In a priority queue each element is associated with a \"priority\",\n     * elements are dequeued in highest-priority-first order (the elements with the\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\n     * If the inserted elements are custom objects a compare function must be provided,\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two element priorities. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function PriorityQueue(compareFunction) {\n        this.heap = new Heap_1.default(util.reverseCompareFunction(compareFunction));\n    }\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.add = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Retrieves and removes the highest priority element of this queue.\n     * @return {*} the the highest priority element of this queue,\n     *  or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.heap.size() !== 0) {\n            var el = this.heap.peek();\n            this.heap.removeRoot();\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the highest priority element of this queue.\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.peek = function () {\n        return this.heap.peek();\n    };\n    /**\n     * Returns true if this priority queue contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this priority queue contains the specified element,\n     * false otherwise.\n     */\n    PriorityQueue.prototype.contains = function (element) {\n        return this.heap.contains(element);\n    };\n    /**\n     * Checks if this priority queue is empty.\n     * @return {boolean} true if and only if this priority queue contains no items; false\n     * otherwise.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.heap.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this priority queue.\n     * @return {number} the number of elements in this priority queue.\n     */\n    PriorityQueue.prototype.size = function () {\n        return this.heap.size();\n    };\n    /**\n     * Removes all of the elements from this priority queue.\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.heap.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    PriorityQueue.prototype.forEach = function (callback) {\n        this.heap.forEach(callback);\n    };\n    return PriorityQueue;\n}()); // end of priority queue\nexports.default = PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar arrays = require(\"./arrays\");\nvar MultiDictionary = /** @class */ (function () {\n    /**\n     * Creates an empty multi dictionary.\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\n     * multiple values against each key. Setting a value into the dictionary will\n     * add the value to an array at that key. Getting a key will return an array,\n     * holding all the values set to that key.\n     * You can configure to allow duplicates in the values.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to strings must be\n     * provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n       *  return pet.name;\n       * }\n     * </pre>\n     * <p>If the values are custom objects a function to check equality between values\n     * must be provided. Example:</p>\n     *\n     * <pre>\n     * function petsAreEqualByAge(pet1,pet2) {\n       *  return pet1.age===pet2.age;\n       * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\n     * function to check if two values are equal.\n     *\n     * @param allowDuplicateValues\n     */\n    function MultiDictionary(toStrFunction, valuesEqualsFunction, allowDuplicateValues) {\n        if (allowDuplicateValues === void 0) { allowDuplicateValues = false; }\n        this.dict = new Dictionary_1.default(toStrFunction);\n        this.equalsF = valuesEqualsFunction || util.defaultEquals;\n        this.allowDuplicate = allowDuplicateValues;\n    }\n    /**\n    * Returns an array holding the values to which this dictionary maps\n    * the specified key.\n    * Returns an empty array if this dictionary contains no mappings for this key.\n    * @param {Object} key key whose associated values are to be returned.\n    * @return {Array} an array holding the values to which this dictionary maps\n    * the specified key.\n    */\n    MultiDictionary.prototype.getValue = function (key) {\n        var values = this.dict.getValue(key);\n        if (util.isUndefined(values)) {\n            return [];\n        }\n        return arrays.copy(values);\n    };\n    /**\n     * Adds the value to the array associated with the specified key, if\n     * it is not already present.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value the value to add to the array at the key\n     * @return {boolean} true if the value was not already associated with that key.\n     */\n    MultiDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return false;\n        }\n        var array = this.dict.getValue(key);\n        if (util.isUndefined(array)) {\n            this.dict.setValue(key, [value]);\n            return true;\n        }\n        if (!this.allowDuplicate) {\n            if (arrays.contains(array, value, this.equalsF)) {\n                return false;\n            }\n        }\n        array.push(value);\n        return true;\n    };\n    /**\n     * Removes the specified values from the array of values associated with the\n     * specified key. If a value isn't given, all values associated with the specified\n     * key are removed.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @param {Object=} value optional argument to specify the value to remove\n     * from the array associated with the specified key.\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\n     * if the specified value isn't associated with the specified key.\n     */\n    MultiDictionary.prototype.remove = function (key, value) {\n        if (util.isUndefined(value)) {\n            var v = this.dict.remove(key);\n            return !util.isUndefined(v);\n        }\n        var array = this.dict.getValue(key);\n        if (!util.isUndefined(array) && arrays.remove(array, value, this.equalsF)) {\n            if (array.length === 0) {\n                this.dict.remove(key);\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    MultiDictionary.prototype.keys = function () {\n        return this.dict.keys();\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    MultiDictionary.prototype.values = function () {\n        var values = this.dict.values();\n        var array = [];\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var v = values_1[_i];\n            for (var _a = 0, v_1 = v; _a < v_1.length; _a++) {\n                var w = v_1[_a];\n                array.push(w);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns true if this dictionary at least one value associatted the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary at least one value associatted\n     * the specified key.\n     */\n    MultiDictionary.prototype.containsKey = function (key) {\n        return this.dict.containsKey(key);\n    };\n    /**\n     * Removes all mappings from this dictionary.\n     */\n    MultiDictionary.prototype.clear = function () {\n        this.dict.clear();\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    MultiDictionary.prototype.size = function () {\n        return this.dict.size();\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    MultiDictionary.prototype.isEmpty = function () {\n        return this.dict.isEmpty();\n    };\n    return MultiDictionary;\n}()); // end of multi dictionary\nexports.default = MultiDictionary;\n//# sourceMappingURL=MultiDictionary.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dictionary_1 = require(\"./Dictionary\");\nvar util = require(\"./util\");\n/**\n * This class is used by the LinkedDictionary Internally\n * Has to be a class, not an interface, because it needs to have\n * the 'unlink' function defined.\n */\nvar LinkedDictionaryPair = /** @class */ (function () {\n    function LinkedDictionaryPair(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    LinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return LinkedDictionaryPair;\n}());\n/**\n * The head and tail elements of the list have null key and value properties but they\n * usually link to normal nodes.\n */\nvar HeadOrTailLinkedDictionaryPair = /** @class */ (function () {\n    function HeadOrTailLinkedDictionaryPair() {\n        this.key = null;\n        this.value = null;\n    }\n    HeadOrTailLinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return HeadOrTailLinkedDictionaryPair;\n}());\nfunction isHeadOrTailLinkedDictionaryPair(p) {\n    return p.next === null;\n}\nvar LinkedDictionary = /** @class */ (function (_super) {\n    __extends(LinkedDictionary, _super);\n    function LinkedDictionary(toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.head = new HeadOrTailLinkedDictionaryPair();\n        _this.tail = new HeadOrTailLinkedDictionaryPair();\n        _this.head.next = _this.tail;\n        _this.tail.prev = _this.head;\n        return _this;\n    }\n    /**\n     * Inserts the new node to the 'tail' of the list, updating the\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\n     * to the end.\n     */\n    LinkedDictionary.prototype.appendToTail = function (entry) {\n        var lastNode = this.tail.prev;\n        lastNode.next = entry;\n        entry.prev = lastNode;\n        entry.next = this.tail;\n        this.tail.prev = entry;\n    };\n    /**\n     * Retrieves a linked dictionary from the table internally\n     */\n    LinkedDictionary.prototype.getLinkedDictionaryPair = function (key) {\n        if (util.isUndefined(key)) {\n            return undefined;\n        }\n        var k = '$' + this.toStr(key);\n        var pair = (this.table[k]);\n        return pair;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    LinkedDictionary.prototype.getValue = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * Also, if a value is present for this key, the entry is removed from the\n     * insertion ordering.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    LinkedDictionary.prototype.remove = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            _super.prototype.remove.call(this, key); // This will remove it from the table\n            pair.unlink(); // This will unlink it from the chain\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n    * Removes all mappings from this LinkedDictionary.\n    * @this {collections.LinkedDictionary}\n    */\n    LinkedDictionary.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    };\n    /**\n     * Internal function used when updating an existing KeyValue pair.\n     * It places the new value indexed by key into the table, but maintains\n     * its place in the linked ordering.\n     */\n    LinkedDictionary.prototype.replace = function (oldPair, newPair) {\n        var k = '$' + this.toStr(newPair.key);\n        // set the new Pair's links to existingPair's links\n        newPair.next = oldPair.next;\n        newPair.prev = oldPair.prev;\n        // Delete Existing Pair from the table, unlink it from chain.\n        // As a result, the nElements gets decremented by this operation\n        this.remove(oldPair.key);\n        // Link new Pair in place of where oldPair was,\n        // by pointing the old pair's neighbors to it.\n        newPair.prev.next = newPair;\n        newPair.next.prev = newPair;\n        this.table[k] = newPair;\n        // To make up for the fact that the number of elements was decremented,\n        // We need to increase it by one.\n        ++this.nElements;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * Updating of a key that already exists maintains its place in the\n     * insertion order into the map.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    LinkedDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var existingPair = this.getLinkedDictionaryPair(key);\n        var newPair = new LinkedDictionaryPair(key, value);\n        var k = '$' + this.toStr(key);\n        // If there is already an element for that key, we\n        // keep it's place in the LinkedList\n        if (!util.isUndefined(existingPair)) {\n            this.replace(existingPair, newPair);\n            return existingPair.value;\n        }\n        else {\n            this.appendToTail(newPair);\n            this.table[k] = newPair;\n            ++this.nElements;\n            return undefined;\n        }\n    };\n    /**\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\n     * by insertion order.\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.keys = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(key);\n        });\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\n     * insertion order.\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.values = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(value);\n        });\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this LinkedDictionary. It is done in the order of insertion\n    * into the LinkedDictionary\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    LinkedDictionary.prototype.forEach = function (callback) {\n        var crawlNode = this.head.next;\n        while (!isHeadOrTailLinkedDictionaryPair(crawlNode)) {\n            var ret = callback(crawlNode.key, crawlNode.value);\n            if (ret === false) {\n                return;\n            }\n            crawlNode = crawlNode.next;\n        }\n    };\n    return LinkedDictionary;\n}(Dictionary_1.default)); // End of LinkedDictionary\nexports.default = LinkedDictionary;\n// /**\n//  * Returns true if this dictionary is equal to the given dictionary.\n//  * Two dictionaries are equal if they contain the same mappings.\n//  * @param {collections.Dictionary} other the other dictionary.\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\n//  * function used to check if two values are equal.\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\n//  */\n// collections.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\n// \tconst eqF = valuesEqualFunction || collections.defaultEquals;\n// \tif(!(other instanceof collections.Dictionary)){\n// \t\treturn false;\n// \t}\n// \tif(this.size() !== other.size()){\n// \t\treturn false;\n// \t}\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\n// }\n//# sourceMappingURL=LinkedDictionary.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BSTreeKV_1 = require(\"./BSTreeKV\");\n/**\n * Special-case of the binary search tree in which the search key is equal to the element type.\n * This definition is suitable when the element type can not be split between what defines its order\n * and what does not (eg. primitive types as opposed to indexed records).\n *\n * The table below shows some use-case examples for both interfaces:\n *\n *           element type              |  most suitable interface\n * ------------------------------------|----------------------------\n *    number                           |  BSTree<number>\n *    string                           |  BSTree<string>\n * { order: number, data: string }     |  BSTreeKV<{order: number}, {order: number, data: string}>\n *\n * @see BSTreeKV\n */\nvar BSTree = /** @class */ (function (_super) {\n    __extends(BSTree, _super);\n    function BSTree() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BSTree;\n}(BSTreeKV_1.default));\nexports.default = BSTree;\n//# sourceMappingURL=BSTree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"./util\");\nvar Dictionary_1 = require(\"./Dictionary\");\nvar Set_1 = require(\"./Set\");\nvar Bag = /** @class */ (function () {\n    /**\n     * Creates an empty bag.\n     * @class <p>A bag is a special kind of set in which members are\n     * allowed to appear more than once.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to unique strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Bag(toStrFunction) {\n        this.toStrF = toStrFunction || util.defaultToString;\n        this.dictionary = new Dictionary_1.default(this.toStrF);\n        this.nElements = 0;\n    }\n    /**\n    * Adds nCopies of the specified object to this bag.\n    * @param {Object} element element to add.\n    * @param {number=} nCopies the number of copies to add, if this argument is\n    * undefined 1 copy is added.\n    * @return {boolean} true unless element is undefined.\n    */\n    Bag.prototype.add = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            var node = {\n                value: element,\n                copies: nCopies\n            };\n            this.dictionary.setValue(element, node);\n        }\n        else {\n            this.dictionary.getValue(element).copies += nCopies;\n        }\n        this.nElements += nCopies;\n        return true;\n    };\n    /**\n    * Counts the number of copies of the specified object in this bag.\n    * @param {Object} element the object to search for..\n    * @return {number} the number of copies of the object, 0 if not found\n    */\n    Bag.prototype.count = function (element) {\n        if (!this.contains(element)) {\n            return 0;\n        }\n        else {\n            return this.dictionary.getValue(element).copies;\n        }\n    };\n    /**\n     * Returns true if this bag contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this bag contains the specified element,\n     * false otherwise.\n     */\n    Bag.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n    * Removes nCopies of the specified object to this bag.\n    * If the number of copies to remove is greater than the actual number\n    * of copies in the Bag, all copies are removed.\n    * @param {Object} element element to remove.\n    * @param {number=} nCopies the number of copies to remove, if this argument is\n    * undefined 1 copy is removed.\n    * @return {boolean} true if at least 1 element was removed.\n    */\n    Bag.prototype.remove = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            var node = this.dictionary.getValue(element);\n            if (nCopies > node.copies) {\n                this.nElements -= node.copies;\n            }\n            else {\n                this.nElements -= nCopies;\n            }\n            node.copies -= nCopies;\n            if (node.copies <= 0) {\n                this.dictionary.remove(element);\n            }\n            return true;\n        }\n    };\n    /**\n     * Returns an array containing all of the elements in this big in arbitrary order,\n     * including multiple copies.\n     * @return {Array} an array containing all of the elements in this bag.\n     */\n    Bag.prototype.toArray = function () {\n        var a = [];\n        var values = this.dictionary.values();\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var node = values_1[_i];\n            var element = node.value;\n            var copies = node.copies;\n            for (var j = 0; j < copies; j++) {\n                a.push(element);\n            }\n        }\n        return a;\n    };\n    /**\n     * Returns a set of unique elements in this bag.\n     * @return {collections.Set<T>} a set of unique elements in this bag.\n     */\n    Bag.prototype.toSet = function () {\n        var toret = new Set_1.default(this.toStrF);\n        var elements = this.dictionary.values();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var ele = elements_1[_i];\n            var value = ele.value;\n            toret.add(value);\n        }\n        return toret;\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this bag, including multiple copies.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Bag.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            var value = v.value;\n            var copies = v.copies;\n            for (var i = 0; i < copies; i++) {\n                if (callback(value) === false) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n    /**\n     * Returns the number of elements in this bag.\n     * @return {number} the number of elements in this bag.\n     */\n    Bag.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this bag contains no elements.\n     * @return {boolean} true if this bag contains no elements.\n     */\n    Bag.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Removes all of the elements from this bag.\n     */\n    Bag.prototype.clear = function () {\n        this.nElements = 0;\n        this.dictionary.clear();\n    };\n    return Bag;\n}()); // End of bag\nexports.default = Bag;\n//# sourceMappingURL=Bag.js.map","import { PriorityQueue, Set, BSTree } from 'typescript-collections';\nimport { Semigroup, concat } from 'sanctuary-type-classes';\n\nvar totalRegistrations = 0;\r\nfunction getTotalRegistrations() {\r\n    return totalRegistrations;\r\n}\r\nvar Source = /** @class */ (function () {\r\n    function Source(origin, register_) {\r\n        this.registered = false;\r\n        this.deregister_ = null;\r\n        if (origin === null)\r\n            throw new Error(\"null origin!\");\r\n        this.origin = origin;\r\n        this.register_ = register_;\r\n    }\r\n    Source.prototype.register = function (target) {\r\n        var _this = this;\r\n        if (!this.registered) {\r\n            this.registered = true;\r\n            if (this.register_ !== null)\r\n                this.deregister_ = this.register_();\r\n            else {\r\n                this.origin.increment(target);\r\n                this.deregister_ = function () { return _this.origin.decrement(target); };\r\n            }\r\n        }\r\n    };\r\n    Source.prototype.deregister = function (target) {\r\n        if (this.registered) {\r\n            this.registered = false;\r\n            if (this.deregister_ !== null)\r\n                this.deregister_();\r\n        }\r\n    };\r\n    return Source;\r\n}());\r\nvar Color;\r\n(function (Color) {\r\n    Color[Color[\"black\"] = 0] = \"black\";\r\n    Color[Color[\"gray\"] = 1] = \"gray\";\r\n    Color[Color[\"white\"] = 2] = \"white\";\r\n    Color[Color[\"purple\"] = 3] = \"purple\";\r\n})(Color || (Color = {}));\r\n\r\nvar roots = [];\r\nvar nextID = 0;\r\nvar verbose = false;\r\n\r\n\r\nvar Vertex = /** @class */ (function () {\r\n    function Vertex(name, rank, sources) {\r\n        this.targets = [];\r\n        this.childrn = [];\r\n        this.visited = false;\r\n        // --------------------------------------------------------\r\n        // Synchronous Cycle Collection algorithm presented in \"Concurrent\r\n        // Cycle Collection in Reference Counted Systems\" by David F. Bacon\r\n        // and V.T. Rajan.\r\n        this.color = Color.black;\r\n        this.buffered = false;\r\n        this.refCountAdj = 0;\r\n        this.name = name;\r\n        this.rank = rank;\r\n        this.sources = sources;\r\n        this.id = nextID++;\r\n    }\r\n    Vertex.prototype.refCount = function () { return this.targets.length; };\r\n    \r\n    Vertex.prototype.register = function (target) {\r\n        return this.increment(target);\r\n    };\r\n    Vertex.prototype.deregister = function (target) {\r\n        if (verbose)\r\n            console.log(\"deregister \" + this.descr() + \" => \" + target.descr());\r\n        this.decrement(target);\r\n        Vertex.collectCycles();\r\n    };\r\n    Vertex.prototype.incRefCount = function (target) {\r\n        var anyChanged = false;\r\n        if (this.refCount() == 0) {\r\n            for (var i = 0; i < this.sources.length; i++)\r\n                this.sources[i].register(this);\r\n        }\r\n        this.targets.push(target);\r\n        target.childrn.push(this);\r\n        if (target.ensureBiggerThan(this.rank))\r\n            anyChanged = true;\r\n        totalRegistrations++;\r\n        return anyChanged;\r\n    };\r\n    Vertex.prototype.decRefCount = function (target) {\r\n        if (verbose)\r\n            console.log(\"DEC \" + this.descr());\r\n        var matched = false;\r\n        for (var i = target.childrn.length - 1; i >= 0; i--)\r\n            if (target.childrn[i] === this) {\r\n                target.childrn.splice(i, 1);\r\n            }\r\n        for (var i = 0; i < this.targets.length; i++)\r\n            if (this.targets[i] === target) {\r\n                this.targets.splice(i, 1);\r\n                matched = true;\r\n                break;\r\n            }\r\n        if (matched) {\r\n            if (this.refCount() == 0) {\r\n                for (var i = 0; i < this.sources.length; i++)\r\n                    this.sources[i].deregister(this);\r\n            }\r\n            totalRegistrations--;\r\n        }\r\n    };\r\n    Vertex.prototype.addSource = function (src) {\r\n        this.sources.push(src);\r\n        if (this.refCount() > 0)\r\n            src.register(this);\r\n    };\r\n    Vertex.prototype.ensureBiggerThan = function (limit) {\r\n        if (this.rank > limit || this.visited)\r\n            return false;\r\n        this.visited = true;\r\n        this.rank = limit + 1;\r\n        for (var i = 0; i < this.targets.length; i++)\r\n            this.targets[i].ensureBiggerThan(this.rank);\r\n        this.visited = false;\r\n        return true;\r\n    };\r\n    Vertex.prototype.descr = function () {\r\n        var colStr = null;\r\n        switch (this.color) {\r\n            case Color.black:\r\n                colStr = \"black\";\r\n                break;\r\n            case Color.gray:\r\n                colStr = \"gray\";\r\n                break;\r\n            case Color.white:\r\n                colStr = \"white\";\r\n                break;\r\n            case Color.purple:\r\n                colStr = \"purple\";\r\n                break;\r\n        }\r\n        var str = this.id + \" \" + this.name + \" [\" + this.refCount() + \"/\" + this.refCountAdj + \"] \" + colStr + \" ->\";\r\n        var chs = this.children();\r\n        for (var i = 0; i < chs.length; i++) {\r\n            str = str + \" \" + chs[i].id;\r\n        }\r\n        return str;\r\n    };\r\n    Vertex.prototype.children = function () { return this.childrn; };\r\n    Vertex.prototype.increment = function (referrer) {\r\n        return this.incRefCount(referrer);\r\n    };\r\n    Vertex.prototype.decrement = function (referrer) {\r\n        this.decRefCount(referrer);\r\n        if (this.refCount() == 0)\r\n            this.release();\r\n        else\r\n            this.possibleRoots();\r\n    };\r\n    Vertex.prototype.release = function () {\r\n        this.color = Color.black;\r\n        if (!this.buffered)\r\n            this.free();\r\n    };\r\n    Vertex.prototype.free = function () {\r\n        while (this.targets.length > 0)\r\n            this.decRefCount(this.targets[0]);\r\n    };\r\n    Vertex.prototype.possibleRoots = function () {\r\n        if (this.color != Color.purple) {\r\n            this.color = Color.purple;\r\n            if (!this.buffered) {\r\n                this.buffered = true;\r\n                roots.push(this);\r\n            }\r\n        }\r\n    };\r\n    Vertex.collectCycles = function () {\r\n        if (Vertex.collectingCycles) {\r\n            return;\r\n        }\r\n        try {\r\n            Vertex.collectingCycles = true;\r\n            Vertex.markRoots();\r\n            Vertex.scanRoots();\r\n            Vertex.collectRoots();\r\n        }\r\n        finally {\r\n            Vertex.collectingCycles = false;\r\n        }\r\n    };\r\n    Vertex.markRoots = function () {\r\n        var newRoots = [];\r\n        for (var i = 0; i < roots.length; i++) {\r\n            if (verbose)\r\n                console.log(\"markRoots \" + roots[i].descr()); // ###\r\n            if (roots[i].color == Color.purple) {\r\n                roots[i].markGray();\r\n                newRoots.push(roots[i]);\r\n            }\r\n            else {\r\n                roots[i].buffered = false;\r\n                if (roots[i].color == Color.black && roots[i].refCount() == 0)\r\n                    roots[i].free();\r\n            }\r\n        }\r\n        roots = newRoots;\r\n    };\r\n    Vertex.scanRoots = function () {\r\n        for (var i = 0; i < roots.length; i++)\r\n            roots[i].scan();\r\n    };\r\n    Vertex.collectRoots = function () {\r\n        for (var i = 0; i < roots.length; i++) {\r\n            roots[i].buffered = false;\r\n            roots[i].collectWhite();\r\n        }\r\n        roots = [];\r\n    };\r\n    Vertex.prototype.markGray = function () {\r\n        if (this.color != Color.gray) {\r\n            this.color = Color.gray;\r\n            var chs = this.children();\r\n            for (var i = 0; i < chs.length; i++) {\r\n                chs[i].refCountAdj--;\r\n                if (verbose)\r\n                    console.log(\"markGray \" + this.descr());\r\n                chs[i].markGray();\r\n            }\r\n        }\r\n    };\r\n    Vertex.prototype.scan = function () {\r\n        if (verbose)\r\n            console.log(\"scan \" + this.descr());\r\n        if (this.color == Color.gray) {\r\n            if (this.refCount() + this.refCountAdj > 0)\r\n                this.scanBlack();\r\n            else {\r\n                this.color = Color.white;\r\n                if (verbose)\r\n                    console.log(\"scan WHITE \" + this.descr());\r\n                var chs = this.children();\r\n                for (var i = 0; i < chs.length; i++)\r\n                    chs[i].scan();\r\n            }\r\n        }\r\n    };\r\n    Vertex.prototype.scanBlack = function () {\r\n        this.color = Color.black;\r\n        var chs = this.children();\r\n        for (var i = 0; i < chs.length; i++) {\r\n            chs[i].refCountAdj++;\r\n            if (verbose)\r\n                console.log(\"scanBlack \" + this.descr());\r\n            if (chs[i].color != Color.black)\r\n                chs[i].scanBlack();\r\n        }\r\n    };\r\n    Vertex.prototype.collectWhite = function () {\r\n        if (this.color == Color.white && !this.buffered) {\r\n            if (verbose)\r\n                console.log(\"collectWhite \" + this.descr());\r\n            this.color = Color.black;\r\n            this.refCountAdj = 0;\r\n            var chs = this.children();\r\n            for (var i = 0; i < chs.length; i++)\r\n                chs[i].collectWhite();\r\n            this.free();\r\n        }\r\n    };\r\n    Vertex.NULL = new Vertex(\"user\", 1e12, []);\r\n    Vertex.collectingCycles = false;\r\n    return Vertex;\r\n}());\n\nvar Lambda1 = /** @class */ (function () {\r\n    function Lambda1(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda1;\r\n}());\r\nfunction lambda1(f, deps) {\r\n    return new Lambda1(f, deps);\r\n}\r\nfunction Lambda1_deps(f) {\r\n    if (f instanceof Lambda1)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda1_toFunction(f) {\r\n    if (f instanceof Lambda1)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda2 = /** @class */ (function () {\r\n    function Lambda2(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda2;\r\n}());\r\nfunction lambda2(f, deps) {\r\n    return new Lambda2(f, deps);\r\n}\r\nfunction Lambda2_deps(f) {\r\n    if (f instanceof Lambda2)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda2_toFunction(f) {\r\n    if (f instanceof Lambda2)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda3 = /** @class */ (function () {\r\n    function Lambda3(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda3;\r\n}());\r\nfunction lambda3(f, deps) {\r\n    return new Lambda3(f, deps);\r\n}\r\nfunction Lambda3_deps(f) {\r\n    if (f instanceof Lambda3)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda3_toFunction(f) {\r\n    if (f instanceof Lambda3)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda4 = /** @class */ (function () {\r\n    function Lambda4(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda4;\r\n}());\r\nfunction lambda4(f, deps) {\r\n    return new Lambda4(f, deps);\r\n}\r\nfunction Lambda4_deps(f) {\r\n    if (f instanceof Lambda4)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda4_toFunction(f) {\r\n    if (f instanceof Lambda4)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda5 = /** @class */ (function () {\r\n    function Lambda5(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda5;\r\n}());\r\nfunction lambda5(f, deps) {\r\n    return new Lambda5(f, deps);\r\n}\r\nfunction Lambda5_deps(f) {\r\n    if (f instanceof Lambda5)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda5_toFunction(f) {\r\n    if (f instanceof Lambda5)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nvar Lambda6 = /** @class */ (function () {\r\n    function Lambda6(f, deps) {\r\n        this.f = f;\r\n        this.deps = deps;\r\n    }\r\n    return Lambda6;\r\n}());\r\nfunction lambda6(f, deps) {\r\n    return new Lambda6(f, deps);\r\n}\r\nfunction Lambda6_deps(f) {\r\n    if (f instanceof Lambda6)\r\n        return f.deps;\r\n    else\r\n        return [];\r\n}\r\nfunction Lambda6_toFunction(f) {\r\n    if (f instanceof Lambda6)\r\n        return f.f;\r\n    else\r\n        return f;\r\n}\r\nfunction toSources(deps) {\r\n    var ss = [];\r\n    for (var i = 0; i < deps.length; i++) {\r\n        var dep = deps[i];\r\n        ss.push(new Source(dep.getVertex__(), null));\r\n    }\r\n    return ss;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar Entry = /** @class */ (function () {\r\n    function Entry(rank, action) {\r\n        this.rank = rank;\r\n        this.action = action;\r\n        this.seq = Entry.nextSeq++;\r\n    }\r\n    Entry.prototype.toString = function () {\r\n        return this.seq.toString();\r\n    };\r\n    Entry.nextSeq = 0;\r\n    return Entry;\r\n}());\r\nvar Transaction = /** @class */ (function () {\r\n    function Transaction() {\r\n        this.inCallback = 0;\r\n        this.toRegen = false;\r\n        this.prioritizedQ = new PriorityQueue(function (a, b) {\r\n            // Note: Low priority numbers are treated as \"greater\" according to this\r\n            // comparison, so that the lowest numbers are highest priority and go first.\r\n            if (a.rank.rank < b.rank.rank)\r\n                return 1;\r\n            if (a.rank.rank > b.rank.rank)\r\n                return -1;\r\n            if (a.seq < b.seq)\r\n                return 1;\r\n            if (a.seq > b.seq)\r\n                return -1;\r\n            return 0;\r\n        });\r\n        this.entries = new Set(function (a) { return a.toString(); });\r\n        this.sampleQ = [];\r\n        this.lastQ = [];\r\n        this.postQ = null;\r\n    }\r\n    Transaction.prototype.requestRegen = function () {\r\n        this.toRegen = true;\r\n    };\r\n    Transaction.prototype.prioritized = function (target, action) {\r\n        var e = new Entry(target, action);\r\n        this.prioritizedQ.enqueue(e);\r\n        this.entries.add(e);\r\n    };\r\n    Transaction.prototype.sample = function (h) {\r\n        this.sampleQ.push(h);\r\n    };\r\n    Transaction.prototype.last = function (h) {\r\n        this.lastQ.push(h);\r\n    };\r\n    /**\r\n     * Add an action to run after all last() actions.\r\n     */\r\n    Transaction.prototype.post = function (childIx, action) {\r\n        if (this.postQ == null)\r\n            this.postQ = [];\r\n        // If an entry exists already, combine the old one with the new one.\r\n        while (this.postQ.length <= childIx)\r\n            this.postQ.push(null);\r\n        var existing = this.postQ[childIx], neu = existing === null ? action\r\n            : function () {\r\n                existing();\r\n                action();\r\n            };\r\n        this.postQ[childIx] = neu;\r\n    };\r\n    // If the priority queue has entries in it when we modify any of the nodes'\r\n    // ranks, then we need to re-generate it to make sure it's up-to-date.\r\n    Transaction.prototype.checkRegen = function () {\r\n        if (this.toRegen) {\r\n            this.toRegen = false;\r\n            this.prioritizedQ.clear();\r\n            var es = this.entries.toArray();\r\n            for (var i = 0; i < es.length; i++)\r\n                this.prioritizedQ.enqueue(es[i]);\r\n        }\r\n    };\r\n    Transaction.prototype.isActive = function () {\r\n        return Transaction.currentTransaction ? true : false;\r\n    };\r\n    Transaction.prototype.close = function () {\r\n        while (true) {\r\n            while (true) {\r\n                this.checkRegen();\r\n                if (this.prioritizedQ.isEmpty())\r\n                    break;\r\n                var e = this.prioritizedQ.dequeue();\r\n                this.entries.remove(e);\r\n                e.action();\r\n            }\r\n            var sq = this.sampleQ;\r\n            this.sampleQ = [];\r\n            for (var i = 0; i < sq.length; i++)\r\n                sq[i]();\r\n            if (this.prioritizedQ.isEmpty() && this.sampleQ.length < 1)\r\n                break;\r\n        }\r\n        for (var i = 0; i < this.lastQ.length; i++)\r\n            this.lastQ[i]();\r\n        this.lastQ = [];\r\n        if (this.postQ != null) {\r\n            for (var i = 0; i < this.postQ.length; i++) {\r\n                if (this.postQ[i] != null) {\r\n                    var parent_1 = Transaction.currentTransaction;\r\n                    try {\r\n                        if (i > 0) {\r\n                            Transaction.currentTransaction = new Transaction();\r\n                            try {\r\n                                this.postQ[i]();\r\n                                Transaction.currentTransaction.close();\r\n                            }\r\n                            catch (err) {\r\n                                Transaction.currentTransaction.close();\r\n                                throw err;\r\n                            }\r\n                        }\r\n                        else {\r\n                            Transaction.currentTransaction = null;\r\n                            this.postQ[i]();\r\n                        }\r\n                        Transaction.currentTransaction = parent_1;\r\n                    }\r\n                    catch (err) {\r\n                        Transaction.currentTransaction = parent_1;\r\n                        throw err;\r\n                    }\r\n                }\r\n            }\r\n            this.postQ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Add a runnable that will be executed whenever a transaction is started.\r\n     * That runnable may start transactions itself, which will not cause the\r\n     * hooks to be run recursively.\r\n     *\r\n     * The main use case of this is the implementation of a time/alarm system.\r\n     */\r\n    Transaction.onStart = function (r) {\r\n        Transaction.onStartHooks.push(r);\r\n    };\r\n    Transaction.run = function (f) {\r\n        var transWas = Transaction.currentTransaction;\r\n        if (transWas === null) {\r\n            if (!Transaction.runningOnStartHooks) {\r\n                Transaction.runningOnStartHooks = true;\r\n                try {\r\n                    for (var i = 0; i < Transaction.onStartHooks.length; i++)\r\n                        Transaction.onStartHooks[i]();\r\n                }\r\n                finally {\r\n                    Transaction.runningOnStartHooks = false;\r\n                }\r\n            }\r\n            Transaction.currentTransaction = new Transaction();\r\n        }\r\n        try {\r\n            var a = f();\r\n            if (transWas === null) {\r\n                Transaction.currentTransaction.close();\r\n                Transaction.currentTransaction = null;\r\n            }\r\n            return a;\r\n        }\r\n        catch (err) {\r\n            if (transWas === null) {\r\n                Transaction.currentTransaction.close();\r\n                Transaction.currentTransaction = null;\r\n            }\r\n            throw err;\r\n        }\r\n    };\r\n    Transaction.currentTransaction = null;\r\n    Transaction.onStartHooks = [];\r\n    Transaction.runningOnStartHooks = false;\r\n    return Transaction;\r\n}());\n\nvar CoalesceHandler = /** @class */ (function () {\r\n    function CoalesceHandler(f, out) {\r\n        this.f = Lambda2_toFunction(f);\r\n        this.out = out;\r\n        this.out.getVertex__().sources = this.out.getVertex__().sources.concat(toSources(Lambda2_deps(f)));\r\n        this.accumValid = false;\r\n    }\r\n    CoalesceHandler.prototype.send_ = function (a) {\r\n        var _this = this;\r\n        if (this.accumValid)\r\n            this.accum = this.f(this.accum, a);\r\n        else {\r\n            Transaction.currentTransaction.prioritized(this.out.getVertex__(), function () {\r\n                _this.out.send_(_this.accum);\r\n                _this.accumValid = false;\r\n                _this.accum = null;\r\n            });\r\n            this.accum = a;\r\n            this.accumValid = true;\r\n        }\r\n    };\r\n    return CoalesceHandler;\r\n}());\n\n/**\r\n * A representation for a value that may not be available until the current\r\n * transaction is closed.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(f) {\r\n        this.f = f;\r\n    }\r\n    /**\r\n     * Get the value if available, throwing an exception if not.\r\n     * In the general case this should only be used in subsequent transactions to\r\n     * when the Lazy was obtained.\r\n     */\r\n    Lazy.prototype.get = function () {\r\n        return this.f();\r\n    };\r\n    /**\r\n     * Map the lazy value according to the specified function, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazy's value.\r\n     * @param f Function to apply to the contained value. It must be <em>referentially transparent</em>.\r\n     */\r\n    Lazy.prototype.map = function (f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f()); });\r\n    };\r\n    /**\r\n     * Lift a binary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift = function (b, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f()); });\r\n    };\r\n    /**\r\n     * Lift a ternary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift3 = function (b, c, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f(), c.f()); });\r\n    };\r\n    /**\r\n     * Lift a quaternary function into lazy values, so the returned Lazy reflects\r\n     * the value of the function applied to the input Lazys' values.\r\n     */\r\n    Lazy.prototype.lift4 = function (b, c, d, f) {\r\n        var _this = this;\r\n        return new Lazy(function () { return f(_this.f(), b.f(), c.f(), d.f()); });\r\n    };\r\n    return Lazy;\r\n}());\n\nvar Unit = /** @class */ (function () {\r\n    function Unit() {\r\n    }\r\n    Unit.UNIT = new Unit();\r\n    return Unit;\r\n}());\n\nvar Operational = /** @class */ (function () {\r\n    function Operational() {\r\n    }\r\n    /**\r\n     * A stream that gives the updates/steps for a {@link Cell}.\r\n     * <P>\r\n     * This is an OPERATIONAL primitive, which is not part of the main Sodium\r\n     * API. It breaks the property of non-detectability of cell steps/updates.\r\n     * The rule with this primitive is that you should only use it in functions\r\n     * that do not allow the caller to detect the cell updates.\r\n     */\r\n    Operational.updates = function (c) {\r\n        /*  Don't think this is needed\r\n        const out = new StreamWithSend<A>(null);\r\n        out.setVertex__(new Vertex(\"updates\", 0, [\r\n                new Source(\r\n                    c.getStream__().getVertex__(),\r\n                    () => {\r\n                        return c.getStream__().listen_(out.getVertex__(), (a : A) => {\r\n                            out.send_(a);\r\n                        }, false);\r\n                    }\r\n                ),\r\n                new Source(\r\n                    c.getVertex__(),\r\n                    () => {\r\n                        return () => { };\r\n                    }\r\n                )\r\n            ]\r\n        ));\r\n        return out;\r\n        */\r\n        return c.getStream__();\r\n    };\r\n    /**\r\n     * A stream that is guaranteed to fire once in the transaction where value() is invoked, giving\r\n     * the current value of the cell, and thereafter behaves like {@link updates(Cell)},\r\n     * firing for each update/step of the cell's value.\r\n     * <P>\r\n     * This is an OPERATIONAL primitive, which is not part of the main Sodium\r\n     * API. It breaks the property of non-detectability of cell steps/updates.\r\n     * The rule with this primitive is that you should only use it in functions\r\n     * that do not allow the caller to detect the cell updates.\r\n     */\r\n    Operational.value = function (c) {\r\n        return Transaction.run(function () {\r\n            var sSpark = new StreamWithSend();\r\n            Transaction.currentTransaction.prioritized(sSpark.getVertex__(), function () {\r\n                sSpark.send_(Unit.UNIT);\r\n            });\r\n            var sInitial = sSpark.snapshot1(c);\r\n            return Operational.updates(c).orElse(sInitial);\r\n        });\r\n    };\r\n    /**\r\n     * Push each event onto a new transaction guaranteed to come before the next externally\r\n     * initiated transaction. Same as {@link split(Stream)} but it works on a single value.\r\n     */\r\n    Operational.defer = function (s) {\r\n        return Operational.split(s.map(function (a) {\r\n            return [a];\r\n        }));\r\n    };\r\n    /**\r\n     * Push each event in the list onto a newly created transaction guaranteed\r\n     * to come before the next externally initiated transaction. Note that the semantics\r\n     * are such that two different invocations of split() can put events into the same\r\n     * new transaction, so the resulting stream's events could be simultaneous with\r\n     * events output by split() or {@link defer(Stream)} invoked elsewhere in the code.\r\n     */\r\n    Operational.split = function (s) {\r\n        var out = new StreamWithSend(null);\r\n        out.setVertex__(new Vertex(\"split\", 0, [\r\n            new Source(s.getVertex__(), function () {\r\n                return s.listen_(out.getVertex__(), function (as) {\r\n                    var _loop_1 = function (i) {\r\n                        Transaction.currentTransaction.post(i, function () {\r\n                            Transaction.run(function () {\r\n                                out.send_(as[i]);\r\n                            });\r\n                        });\r\n                    };\r\n                    for (var i = 0; i < as.length; i++) {\r\n                        _loop_1(i);\r\n                    }\r\n                }, false);\r\n            })\r\n        ]));\r\n        return out;\r\n    };\r\n    return Operational;\r\n}());\n\nvar LazySample = /** @class */ (function () {\r\n    function LazySample(cell) {\r\n        this.hasValue = false;\r\n        this.value = null;\r\n        this.cell = cell;\r\n    }\r\n    return LazySample;\r\n}());\r\nvar ApplyState = /** @class */ (function () {\r\n    function ApplyState() {\r\n        this.f = null;\r\n        this.f_present = false;\r\n        this.a = null;\r\n        this.a_present = false;\r\n    }\r\n    return ApplyState;\r\n}());\r\nvar Cell = /** @class */ (function () {\r\n    function Cell(initValue, str) {\r\n        var _this = this;\r\n        this.value = initValue;\r\n        if (!str) {\r\n            this.str = new Stream();\r\n            this.vertex = new Vertex(\"ConstCell\", 0, []);\r\n        }\r\n        else\r\n            Transaction.run(function () { return _this.setStream(str); });\r\n    }\r\n    Cell.prototype.setStream = function (str) {\r\n        var _this = this;\r\n        this.str = str;\r\n        var me = this, src = new Source(str.getVertex__(), function () {\r\n            return str.listen_(me.vertex, function (a) {\r\n                if (me.valueUpdate == null) {\r\n                    Transaction.currentTransaction.last(function () {\r\n                        me.value = me.valueUpdate;\r\n                        me.lazyInitValue = null;\r\n                        me.valueUpdate = null;\r\n                    });\r\n                }\r\n                me.valueUpdate = a;\r\n            }, false);\r\n        });\r\n        this.vertex = new Vertex(\"Cell\", 0, [src]);\r\n        // We do a trick here of registering the source for the duration of the current\r\n        // transaction so that we are guaranteed to catch any stream events that\r\n        // occur in the same transaction.\r\n        this.vertex.register(Vertex.NULL);\r\n        Transaction.currentTransaction.last(function () {\r\n            _this.vertex.deregister(Vertex.NULL);\r\n        });\r\n    };\r\n    Cell.prototype.getVertex__ = function () {\r\n        return this.vertex;\r\n    };\r\n    Cell.prototype.getStream__ = function () {\r\n        return this.str;\r\n    };\r\n    /**\r\n     * Sample the cell's current value.\r\n     * <p>\r\n     * It should generally be avoided in favour of {@link listen(Handler)} so you don't\r\n     * miss any updates, but in many circumstances it makes sense.\r\n     * <p>\r\n     * NOTE: In the Java and other versions of Sodium, using sample() inside map(), filter() and\r\n     * merge() is encouraged. In the Javascript/Typescript version, not so much, for the\r\n     * following reason: The memory management is different in the Javascript version, and this\r\n     * requires us to track all dependencies. In order for the use of sample() inside\r\n     * a closure to be correct, the cell that was sample()d inside the closure would have to be\r\n     * declared explicitly using the helpers lambda1(), lambda2(), etc. Because this is\r\n     * something that can be got wrong, we don't encourage this kind of use of sample() in\r\n     * Javascript. Better and simpler to use snapshot().\r\n     * <p>\r\n     * NOTE: If you need to sample() a cell, you have to make sure it's \"alive\" in terms of\r\n     * memory management or it will ignore updates. To make a cell work correctly\r\n     * with sample(), you have to ensure that it's being used. One way to guarantee this is\r\n     * to register a dummy listener on the cell. It will also work to have it referenced\r\n     * by something that is ultimately being listened to.\r\n     */\r\n    Cell.prototype.sample = function () {\r\n        var _this = this;\r\n        return Transaction.run(function () { return _this.sampleNoTrans__(); });\r\n    };\r\n    Cell.prototype.sampleNoTrans__ = function () {\r\n        return this.value;\r\n    };\r\n    /**\r\n     * A variant of {@link sample()} that works with {@link CellLoop}s when they haven't been looped yet.\r\n     * It should be used in any code that's general enough that it could be passed a {@link CellLoop}.\r\n     * @see Stream#holdLazy(Lazy) Stream.holdLazy()\r\n     */\r\n    Cell.prototype.sampleLazy = function () {\r\n        var me = this;\r\n        return Transaction.run(function () { return me.sampleLazyNoTrans__(); });\r\n    };\r\n    Cell.prototype.sampleLazyNoTrans__ = function () {\r\n        var me = this, s = new LazySample(me);\r\n        Transaction.currentTransaction.sample(function () {\r\n            s.value = me.valueUpdate != null ? me.valueUpdate : me.sampleNoTrans__();\r\n            s.hasValue = true;\r\n            s.cell = null;\r\n        });\r\n        return new Lazy(function () {\r\n            if (s.hasValue)\r\n                return s.value;\r\n            else\r\n                return s.cell.sample();\r\n        });\r\n    };\r\n    /**\r\n     * Transform the cell's value according to the supplied function, so the returned Cell\r\n     * always reflects the value of the function applied to the input Cell's value.\r\n     * @param f Function to apply to convert the values. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.map = function (f) {\r\n        var c = this;\r\n        return Transaction.run(function () {\r\n            return Operational.updates(c).map(f).holdLazy(c.sampleLazy().map(Lambda1_toFunction(f)));\r\n        });\r\n    };\r\n    /**\r\n     * Lift a binary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift = function (b, fn0) {\r\n        var fn = Lambda2_toFunction(fn0), cf = this.map(function (aa) { return function (bb) { return fn(aa, bb); }; });\r\n        return Cell.apply(cf, b, toSources(Lambda2_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a ternary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift3 = function (b, c, fn0) {\r\n        var fn = Lambda3_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return fn(aa, bb, cc); }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(cf, b), c, toSources(Lambda3_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a quaternary function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift4 = function (b, c, d, fn0) {\r\n        var fn = Lambda4_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return fn(aa, bb, cc, dd); }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(cf, b), c), d, toSources(Lambda4_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a 5-argument function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift5 = function (b, c, d, e, fn0) {\r\n        var fn = Lambda5_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return function (ee) { return fn(aa, bb, cc, dd, ee); }; }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(Cell.apply(cf, b), c), d), e, toSources(Lambda5_deps(fn0)));\r\n    };\r\n    /**\r\n     * Lift a 6-argument function into cells, so the returned Cell always reflects the specified\r\n     * function applied to the input cells' values.\r\n     * @param fn Function to apply. It must be <em>referentially transparent</em>.\r\n     */\r\n    Cell.prototype.lift6 = function (b, c, d, e, f, fn0) {\r\n        var fn = Lambda6_toFunction(fn0), mf = function (aa) { return function (bb) { return function (cc) { return function (dd) { return function (ee) { return function (ff) { return fn(aa, bb, cc, dd, ee, ff); }; }; }; }; }; }, cf = this.map(mf);\r\n        return Cell.apply(Cell.apply(Cell.apply(Cell.apply(Cell.apply(cf, b), c), d), e), f, toSources(Lambda6_deps(fn0)));\r\n    };\r\n    /**\r\n     * Apply a value inside a cell to a function inside a cell. This is the\r\n     * primitive for all function lifting.\r\n     */\r\n    Cell.apply = function (cf, ca, sources) {\r\n        return Transaction.run(function () {\r\n            var state = new ApplyState(), out = new StreamWithSend(), cf_value = Operational.value(cf), ca_value = Operational.value(ca), src1 = new Source(cf_value.getVertex__(), function () {\r\n                return cf_value.listen_(out.getVertex__(), function (f) {\r\n                    state.f = f;\r\n                    state.f_present = true;\r\n                    if (state.a_present)\r\n                        out.send_(state.f(state.a));\r\n                }, false);\r\n            }), src2 = new Source(ca_value.getVertex__(), function () {\r\n                return ca_value.listen_(out.getVertex__(), function (a) {\r\n                    state.a = a;\r\n                    state.a_present = true;\r\n                    if (state.f_present)\r\n                        out.send_(state.f(state.a));\r\n                }, false);\r\n            });\r\n            out.setVertex__(new Vertex(\"apply\", 0, [src1, src2].concat(sources ? sources : [])));\r\n            return out.coalesce__(function (l, r) { return r; }).holdLazy(new Lazy(function () {\r\n                return cf.sampleNoTrans__()(ca.sampleNoTrans__());\r\n            }));\r\n        });\r\n    };\r\n    /**\r\n     * Unwrap a cell inside another cell to give a time-varying cell implementation.\r\n     */\r\n    Cell.switchC = function (cca) {\r\n        return Transaction.run(function () {\r\n            var za = cca.sampleLazy().map(function (ba) { return ba.sample(); }), out = new StreamWithSend();\r\n            var last_ca = null;\r\n            var cca_value = Operational.value(cca), src = new Source(cca_value.getVertex__(), function () {\r\n                var kill2 = last_ca === null ? null :\r\n                    Operational.value(last_ca).listen_(out.getVertex__(), function (a) { return out.send_(a); }, false);\r\n                var kill1 = cca_value.listen_(out.getVertex__(), function (ca) {\r\n                    // Note: If any switch takes place during a transaction, then the\r\n                    // coalesce__() below will always cause a sample to be fetched\r\n                    // from the one we just switched to. So anything from the old input cell\r\n                    // that might have happened during this transaction will be suppressed.\r\n                    last_ca = ca;\r\n                    if (kill2 !== null)\r\n                        kill2();\r\n                    kill2 = Operational.value(ca).listen_(out.getVertex__(), function (a) { return out.send_(a); }, false);\r\n                }, false);\r\n                return function () { kill1(); kill2(); };\r\n            });\r\n            out.setVertex__(new Vertex(\"switchC\", 0, [src]));\r\n            return out.coalesce__(function (l, r) { return r; }).holdLazy(za);\r\n        });\r\n    };\r\n    /**\r\n     * Unwrap a stream inside a cell to give a time-varying stream implementation.\r\n     */\r\n    Cell.switchS = function (csa) {\r\n        return Transaction.run(function () {\r\n            var out = new StreamWithSend(), h2 = function (a) {\r\n                out.send_(a);\r\n            }, src = new Source(csa.getVertex__(), function () {\r\n                var kill2 = csa.sampleNoTrans__().listen_(out.getVertex__(), h2, false);\r\n                var kill1 = csa.getStream__().listen_(out.getVertex__(), function (sa) {\r\n                    kill2();\r\n                    kill2 = sa.listen_(out.getVertex__(), h2, true);\r\n                }, false);\r\n                return function () { kill1(); kill2(); };\r\n            });\r\n            out.setVertex__(new Vertex(\"switchS\", 0, [src]));\r\n            return out;\r\n        });\r\n    };\r\n    /**\r\n     * Listen for updates to the value of this cell. This is the observer pattern. The\r\n     * returned {@link Listener} has a {@link Listener#unlisten()} method to cause the\r\n     * listener to be removed. This is an OPERATIONAL mechanism is for interfacing between\r\n     * the world of I/O and for FRP.\r\n     * @param h The handler to execute when there's a new value.\r\n     *   You should make no assumptions about what thread you are called on, and the\r\n     *   handler should not block. You are not allowed to use {@link CellSink#send(Object)}\r\n     *   or {@link StreamSink#send(Object)} in the handler.\r\n     *   An exception will be thrown, because you are not meant to use this to create\r\n     *   your own primitives.\r\n     */\r\n    Cell.prototype.listen = function (h) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return Operational.value(_this).listen(h);\r\n        });\r\n    };\r\n    /**\r\n     * Fantasy-land Algebraic Data Type Compatability.\r\n     * Cell satisfies the Monad and Comonad Categories (and hence Functor, Apply, Applicative, and Extend as well)\r\n     * @see {@link https://github.com/fantasyland/fantasy-land} for more info\r\n     */\r\n    //of :: Applicative f => a -> f a\r\n    Cell['fantasy-land/of'] = function (a) {\r\n        return new Cell(a);\r\n    };\r\n    //map :: Functor f => f a ~> (a -> b) -> f b\r\n    Cell.prototype['fantasy-land/map'] = function (f) {\r\n        return this.map(f);\r\n    };\r\n    //ap :: Apply f => f a ~> f (a -> b) -> f b\r\n    Cell.prototype['fantasy-land/ap'] = function (cf) {\r\n        return Cell.apply(cf, this);\r\n    };\r\n    //chain :: Chain m => m a ~> (a -> m b) -> m b\r\n    Cell.prototype['fantasy-land/chain'] = function (f) {\r\n        return Cell.switchC(this.map(f));\r\n    };\r\n    //extend :: Extend w => w a ~> (w a -> b) -> w b\r\n    Cell.prototype['fantasy-land/extend'] = function (f) {\r\n        return new Cell(f(this));\r\n    };\r\n    //extract :: Comonad w => w a ~> () -> a\r\n    Cell.prototype['fantasy-land/extract'] = function () {\r\n        return this.sample();\r\n    };\r\n    return Cell;\r\n}());\n\nvar Listener = /** @class */ (function () {\r\n    function Listener(h, target) {\r\n        this.h = h;\r\n        this.target = target;\r\n    }\r\n    return Listener;\r\n}());\n\nvar LazyCell = /** @class */ (function (_super) {\r\n    __extends(LazyCell, _super);\r\n    function LazyCell(lazyInitValue, str) {\r\n        var _this = _super.call(this, null, null) || this;\r\n        Transaction.run(function () {\r\n            if (str)\r\n                _this.setStream(str);\r\n            _this.lazyInitValue = lazyInitValue;\r\n        });\r\n        return _this;\r\n    }\r\n    LazyCell.prototype.sampleNoTrans__ = function () {\r\n        if (this.value == null && this.lazyInitValue != null) {\r\n            this.value = this.lazyInitValue.get();\r\n            this.lazyInitValue = null;\r\n        }\r\n        return this.value;\r\n    };\r\n    return LazyCell;\r\n}(Cell));\n\n//import { StreamLoop } from \"./StreamLoop\";\r\nvar Stream = /** @class */ (function () {\r\n    function Stream(vertex) {\r\n        this.listeners = [];\r\n        this.firings = [];\r\n        this.vertex = vertex ? vertex : new Vertex(\"Stream\", 0, []);\r\n    }\r\n    Stream.prototype.getVertex__ = function () {\r\n        return this.vertex;\r\n    };\r\n    /**\r\n     * Transform the stream's event values according to the supplied function, so the returned\r\n     * Stream's event values reflect the value of the function applied to the input\r\n     * Stream's event values.\r\n     * @param f Function to apply to convert the values. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.map = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda1_toFunction(f);\r\n        out.vertex = new Vertex(\"map\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a));\r\n                }, false);\r\n            })\r\n        ].concat(toSources(Lambda1_deps(f))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Transform the stream's event values into the specified constant value.\r\n     * @param b Constant value.\r\n     */\r\n    Stream.prototype.mapTo = function (b) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"mapTo\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(b);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Variant of {@link Stream#merge(Stream, Lambda2)} that merges two streams and will drop an event\r\n     * in the simultaneous case.\r\n     * <p>\r\n     * In the case where two events are simultaneous (i.e. both\r\n     * within the same transaction), the event from <em>this</em> will take precedence, and\r\n     * the event from <em>s</em> will be dropped.\r\n     * If you want to specify your own combining function, use {@link Stream#merge(Stream, Lambda2)}.\r\n     * s1.orElse(s2) is equivalent to s1.merge(s2, (l, r) -&gt; l).\r\n     * <p>\r\n     * The name orElse() is used instead of merge() to make it really clear that care should\r\n     * be taken, because events can be dropped.\r\n     */\r\n    Stream.prototype.orElse = function (s) {\r\n        return this.merge(s, function (left, right) {\r\n            return left;\r\n        });\r\n    };\r\n    Stream.prototype.merge_ = function (s) {\r\n        var _this = this;\r\n        var out = new StreamWithSend();\r\n        var left = new Vertex(\"merge\", 0, []);\r\n        left.sources.push(new Source(this.vertex, function () {\r\n            return _this.listen_(left, function (a) {\r\n                out.send_(a);\r\n            }, false);\r\n        }));\r\n        out.vertex.sources = out.vertex.sources.concat([\r\n            new Source(left, function () {\r\n                left.register(out.vertex);\r\n                return function () { left.deregister(out.vertex); };\r\n            }),\r\n            new Source(s.vertex, function () {\r\n                return s.listen_(out.vertex, function (a) {\r\n                    out.send_(a);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    Stream.prototype.coalesce__ = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend();\r\n        var coalescer = new CoalesceHandler(f, out);\r\n        out.vertex.sources = out.vertex.sources.concat([\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    coalescer.send_(a);\r\n                }, false);\r\n            })\r\n        ]).concat(toSources(Lambda2_deps(f)));\r\n        return out;\r\n    };\r\n    /**\r\n     * Merge two streams of the same type into one, so that events on either input appear\r\n     * on the returned stream.\r\n     * <p>\r\n     * If the events are simultaneous (that is, one event from this and one from <em>s</em>\r\n     * occurring in the same transaction), combine them into one using the specified combining function\r\n     * so that the returned stream is guaranteed only ever to have one event per transaction.\r\n     * The event from <em>this</em> will appear at the left input of the combining function, and\r\n     * the event from <em>s</em> will appear at the right.\r\n     * @param f Function to combine the values. It may construct FRP logic or use\r\n     *    {@link Cell#sample()}. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.merge = function (s, f) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return _this.merge_(s).coalesce__(f);\r\n        });\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events for which the predicate returns true.\r\n     */\r\n    Stream.prototype.filter = function (f) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda1_toFunction(f);\r\n        out.vertex = new Vertex(\"filter\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    if (ff(a))\r\n                        out.send_(a);\r\n                }, false);\r\n            })\r\n        ].concat(toSources(Lambda1_deps(f))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events that have present\r\n     * values, discarding null values.\r\n     */\r\n    Stream.prototype.filterNotNull = function () {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"filterNotNull\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    if (a !== null)\r\n                        out.send_(a);\r\n                }, false);\r\n            })\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream that only outputs events from the input stream\r\n     * when the specified cell's value is true.\r\n     */\r\n    Stream.prototype.gate = function (c) {\r\n        return this.snapshot(c, function (a, pred) {\r\n            return pred ? a : null;\r\n        }).filterNotNull();\r\n    };\r\n    /**\r\n     * Variant of {@link snapshot(Cell, Lambda2)} that captures the cell's value\r\n     * at the time of the event firing, ignoring the stream's value.\r\n     */\r\n    Stream.prototype.snapshot1 = function (c) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        out.vertex = new Vertex(\"snapshot1\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(c.sampleNoTrans__());\r\n                }, false);\r\n            }),\r\n            new Source(c.getVertex__(), null)\r\n        ]);\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cell at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, {@link Stream#snapshot(Cell, Lambda2)}\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot = function (b, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda2_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null)\r\n        ].concat(toSources(Lambda2_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot3 = function (b, c, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda3_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null)\r\n        ].concat(toSources(Lambda3_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot4 = function (b, c, d, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda4_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null)\r\n        ].concat(toSources(Lambda4_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot5 = function (b, c, d, e, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda5_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__(), e.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null),\r\n            new Source(e.getVertex__(), null)\r\n        ].concat(toSources(Lambda5_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Return a stream whose events are the result of the combination using the specified\r\n     * function of the input stream's event value and the value of the cells at that time.\r\n     * <P>\r\n     * There is an implicit delay: State updates caused by event firings being held with\r\n     * {@link Stream#hold(Object)} don't become visible as the cell's current value until\r\n     * the following transaction. To put this another way, snapshot()\r\n     * always sees the value of a cell as it was before any state changes from the current\r\n     * transaction.\r\n     */\r\n    Stream.prototype.snapshot6 = function (b, c, d, e, f, f_) {\r\n        var _this = this;\r\n        var out = new StreamWithSend(null);\r\n        var ff = Lambda6_toFunction(f_);\r\n        out.vertex = new Vertex(\"snapshot\", 0, [\r\n            new Source(this.vertex, function () {\r\n                return _this.listen_(out.vertex, function (a) {\r\n                    out.send_(ff(a, b.sampleNoTrans__(), c.sampleNoTrans__(), d.sampleNoTrans__(), e.sampleNoTrans__(), f.sampleNoTrans__()));\r\n                }, false);\r\n            }),\r\n            new Source(b.getVertex__(), null),\r\n            new Source(c.getVertex__(), null),\r\n            new Source(d.getVertex__(), null),\r\n            new Source(e.getVertex__(), null),\r\n            new Source(f.getVertex__(), null)\r\n        ].concat(toSources(Lambda6_deps(f_))));\r\n        return out;\r\n    };\r\n    /**\r\n     * Create a {@link Cell} with the specified initial value, that is updated\r\n     * by this stream's event values.\r\n     * <p>\r\n     * There is an implicit delay: State updates caused by event firings don't become\r\n     * visible as the cell's current value as viewed by {@link Stream#snapshot(Cell, Lambda2)}\r\n     * until the following transaction. To put this another way,\r\n     * {@link Stream#snapshot(Cell, Lambda2)} always sees the value of a cell as it was before\r\n     * any state changes from the current transaction.\r\n     */\r\n    Stream.prototype.hold = function (initValue) {\r\n        return new Cell(initValue, this);\r\n    };\r\n    /**\r\n     * A variant of {@link hold(Object)} with an initial value captured by {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.holdLazy = function (initValue) {\r\n        return new LazyCell(initValue, this);\r\n    };\r\n    /**\r\n     * Transform an event with a generalized state loop (a Mealy machine). The function\r\n     * is passed the input and the old state and returns the new state and output value.\r\n     * @param f Function to apply to update the state. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.collect = function (initState, f) {\r\n        return this.collectLazy(new Lazy(function () { return initState; }), f);\r\n    };\r\n    /**\r\n     * A variant of {@link collect(Object, Lambda2)} that takes an initial state returned by\r\n     * {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.collectLazy = function (initState, f) {\r\n        var ea = this;\r\n        return Transaction.run(function () {\r\n            var es = new StreamLoop(), s = es.holdLazy(initState), ebs = ea.snapshot(s, f), eb = ebs.map(function (bs) { return bs.a; }), es_out = ebs.map(function (bs) { return bs.b; });\r\n            es.loop(es_out);\r\n            return eb;\r\n        });\r\n    };\r\n    /**\r\n     * Accumulate on input event, outputting the new state each time.\r\n     * @param f Function to apply to update the state. It may construct FRP logic or use\r\n     *    {@link Cell#sample()} in which case it is equivalent to {@link Stream#snapshot(Cell)}ing the\r\n     *    cell. Apart from this the function must be <em>referentially transparent</em>.\r\n     */\r\n    Stream.prototype.accum = function (initState, f) {\r\n        return this.accumLazy(new Lazy(function () { return initState; }), f);\r\n    };\r\n    /**\r\n     * A variant of {@link accum(Object, Lambda2)} that takes an initial state returned by\r\n     * {@link Cell#sampleLazy()}.\r\n     */\r\n    Stream.prototype.accumLazy = function (initState, f) {\r\n        var ea = this;\r\n        return Transaction.run(function () {\r\n            var es = new StreamLoop(), s = es.holdLazy(initState), es_out = ea.snapshot(s, f);\r\n            es.loop(es_out);\r\n            return es_out.holdLazy(initState);\r\n        });\r\n    };\r\n    /**\r\n     * Return a stream that outputs only one value: the next event of the\r\n     * input stream, starting from the transaction in which once() was invoked.\r\n     */\r\n    Stream.prototype.once = function () {\r\n        /*\r\n            return Transaction.run(() => {\r\n                const ev = this,\r\n                    out = new StreamWithSend<A>();\r\n                let la : () => void = null;\r\n                la = ev.listen_(out.vertex, (a : A) => {\r\n                    if (la !== null) {\r\n                        out.send_(a);\r\n                        la();\r\n                        la = null;\r\n                    }\r\n                }, false);\r\n                return out;\r\n            });\r\n            */\r\n        // We can't use the implementation above, beacuse deregistering\r\n        // listeners triggers the exception\r\n        // \"send() was invoked before listeners were registered\"\r\n        // We can revisit this another time. For now we will use the less\r\n        // efficient implementation below.\r\n        var me = this;\r\n        return Transaction.run(function () { return me.gate(me.mapTo(false).hold(true)); });\r\n    };\r\n    Stream.prototype.listen = function (h) {\r\n        var _this = this;\r\n        return Transaction.run(function () {\r\n            return _this.listen_(Vertex.NULL, h, false);\r\n        });\r\n    };\r\n    Stream.prototype.listen_ = function (target, h, suppressEarlierFirings) {\r\n        var _this = this;\r\n        if (this.vertex.register(target))\r\n            Transaction.currentTransaction.requestRegen();\r\n        var listener = new Listener(h, target);\r\n        this.listeners.push(listener);\r\n        if (!suppressEarlierFirings && this.firings.length != 0) {\r\n            var firings_1 = this.firings.slice();\r\n            Transaction.currentTransaction.prioritized(target, function () {\r\n                // Anything sent already in this transaction must be sent now so that\r\n                // there's no order dependency between send and listen.\r\n                for (var i = 0; i < firings_1.length; i++)\r\n                    h(firings_1[i]);\r\n            });\r\n        }\r\n        return function () {\r\n            var removed = false;\r\n            for (var i = 0; i < _this.listeners.length; i++) {\r\n                if (_this.listeners[i] == listener) {\r\n                    _this.listeners.splice(i, 1);\r\n                    removed = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (removed)\r\n                _this.vertex.deregister(target);\r\n        };\r\n    };\r\n    /**\r\n     * Fantasy-land Algebraic Data Type Compatability.\r\n     * Stream satisfies the Functor and Monoid Categories (and hence Semigroup)\r\n     * @see {@link https://github.com/fantasyland/fantasy-land} for more info\r\n     */\r\n    //map :: Functor f => f a ~> (a -> b) -> f b\r\n    Stream.prototype['fantasy-land/map'] = function (f) {\r\n        return this.map(f);\r\n    };\r\n    //concat :: Semigroup a => a ~> a -> a\r\n    Stream.prototype['fantasy-land/concat'] = function (a) {\r\n        return this.merge(a, function (left, right) {\r\n            return (Semigroup.test(left)) ? concat(left, right) : left;\r\n        });\r\n    };\r\n    //empty :: Monoid m => () -> m\r\n    Stream.prototype['fantasy-land/empty'] = function () {\r\n        return new Stream();\r\n    };\r\n    return Stream;\r\n}());\r\nvar StreamWithSend = /** @class */ (function (_super) {\r\n    __extends(StreamWithSend, _super);\r\n    function StreamWithSend(vertex) {\r\n        return _super.call(this, vertex) || this;\r\n    }\r\n    StreamWithSend.prototype.setVertex__ = function (vertex) {\r\n        this.vertex = vertex;\r\n    };\r\n    StreamWithSend.prototype.send_ = function (a) {\r\n        var _this = this;\r\n        // We throw this error if we send into FRP logic that has been constructed\r\n        // but nothing is listening to it yet. We need to do it this way because\r\n        // it's the only way to manage memory in a language with no finalizers.\r\n        if (this.vertex.refCount() == 0)\r\n            throw new Error(\"send() was invoked before listeners were registered\");\r\n        if (this.firings.length == 0)\r\n            Transaction.currentTransaction.last(function () {\r\n                _this.firings = [];\r\n            });\r\n        this.firings.push(a);\r\n        var listeners = this.listeners.slice();\r\n        var _loop_1 = function (i) {\r\n            var h = listeners[i].h;\r\n            Transaction.currentTransaction.prioritized(listeners[i].target, function () {\r\n                Transaction.currentTransaction.inCallback++;\r\n                try {\r\n                    h(a);\r\n                    Transaction.currentTransaction.inCallback--;\r\n                }\r\n                catch (err) {\r\n                    Transaction.currentTransaction.inCallback--;\r\n                    throw err;\r\n                }\r\n            });\r\n        };\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    return StreamWithSend;\r\n}(Stream));\r\n/**\r\n * A forward reference for a {@link Stream} equivalent to the Stream that is referenced.\r\n */\r\nvar StreamLoop = /** @class */ (function (_super) {\r\n    __extends(StreamLoop, _super);\r\n    function StreamLoop() {\r\n        var _this = _super.call(this) || this;\r\n        _this.assigned__ = false; // to do: Figure out how to hide this\r\n        _this.vertex.name = \"StreamLoop\";\r\n        if (Transaction.currentTransaction === null)\r\n            throw new Error(\"StreamLoop/CellLoop must be used within an explicit transaction\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * Resolve the loop to specify what the StreamLoop was a forward reference to. It\r\n     * must be invoked inside the same transaction as the place where the StreamLoop is used.\r\n     * This requires you to create an explicit transaction with {@link Transaction#run(Lambda0)}\r\n     * or {@link Transaction#runVoid(Runnable)}.\r\n     */\r\n    StreamLoop.prototype.loop = function (sa_out) {\r\n        var _this = this;\r\n        if (this.assigned__)\r\n            throw new Error(\"StreamLoop looped more than once\");\r\n        this.assigned__ = true;\r\n        this.vertex.addSource(new Source(sa_out.getVertex__(), function () {\r\n            return sa_out.listen_(_this.vertex, function (a) {\r\n                _this.send_(a);\r\n            }, false);\r\n        }));\r\n    };\r\n    return StreamLoop;\r\n}(StreamWithSend));\n\n/**\r\n * A stream that allows values to be pushed into it, acting as an interface between the\r\n * world of I/O and the world of FRP. Code that exports StreamSinks for read-only use\r\n * should downcast to {@link Stream}.\r\n */\r\nvar StreamSink = /** @class */ (function (_super) {\r\n    __extends(StreamSink, _super);\r\n    function StreamSink(f) {\r\n        var _this = _super.call(this) || this;\r\n        if (!f)\r\n            f = (function (l, r) {\r\n                throw new Error(\"send() called more than once per transaction, which isn't allowed. Did you want to combine the events? Then pass a combining function to your StreamSink constructor.\");\r\n            });\r\n        _this.coalescer = new CoalesceHandler(f, _this);\r\n        return _this;\r\n    }\r\n    StreamSink.prototype.send = function (a) {\r\n        var _this = this;\r\n        Transaction.run(function () {\r\n            if (Transaction.currentTransaction.inCallback > 0)\r\n                throw new Error(\"You are not allowed to use send() inside a Sodium callback\");\r\n            _this.coalescer.send_(a);\r\n        });\r\n    };\r\n    return StreamSink;\r\n}(StreamWithSend));\n\n/**\r\n * A forward reference for a {@link Cell} equivalent to the Cell that is referenced.\r\n */\r\nvar CellLoop = /** @class */ (function (_super) {\r\n    __extends(CellLoop, _super);\r\n    function CellLoop() {\r\n        return _super.call(this, null, new StreamLoop()) || this;\r\n    }\r\n    /**\r\n     * Resolve the loop to specify what the CellLoop was a forward reference to. It\r\n     * must be invoked inside the same transaction as the place where the CellLoop is used.\r\n     * This requires you to create an explicit transaction with {@link Transaction#run(Lambda0)}\r\n     * or {@link Transaction#runVoid(Runnable)}.\r\n     */\r\n    CellLoop.prototype.loop = function (a_out) {\r\n        var me = this;\r\n        Transaction.run(function () {\r\n            me.getStream__().loop(a_out.getStream__());\r\n            me.lazyInitValue = a_out.sampleLazy();\r\n        });\r\n    };\r\n    CellLoop.prototype.sampleNoTrans__ = function () {\r\n        if (!this.getStream__().assigned__)\r\n            throw new Error(\"CellLoop sampled before it was looped\");\r\n        return _super.prototype.sampleNoTrans__.call(this);\r\n    };\r\n    return CellLoop;\r\n}(LazyCell));\n\n/**\r\n * A cell that allows values to be pushed into it, acting as an interface between the\r\n * world of I/O and the world of FRP. Code that exports CellSinks for read-only use\r\n * should downcast to {@link Cell}.\r\n */\r\nvar CellSink = /** @class */ (function (_super) {\r\n    __extends(CellSink, _super);\r\n    /**\r\n     * Construct a writable cell with the specified initial value. If multiple values are\r\n     * sent in the same transaction, the specified function is used to combine them.\r\n     *\r\n     * If the function is not supplied, then an exception will be thrown in this case.\r\n     */\r\n    function CellSink(initValue, f) {\r\n        return _super.call(this, initValue, new StreamSink(f)) || this;\r\n    }\r\n    /**\r\n     * Send a value, modifying the value of the cell. send(A) may not be used inside\r\n     * handlers registered with {@link Stream#listen(Handler)} or {@link Cell#listen(Handler)}.\r\n     * An exception will be thrown, because CellSink is for interfacing I/O to FRP only.\r\n     * You are not meant to use this to define your own primitives.\r\n     * @param a Value to push into the cell.\r\n     */\r\n    CellSink.prototype.send = function (a) {\r\n        this.getStream__().send(a);\r\n    };\r\n    return CellSink;\r\n}(Cell));\n\nvar Tuple2 = /** @class */ (function () {\r\n    function Tuple2(a, b) {\r\n        this.a = a;\r\n        this.b = b;\r\n    }\r\n    return Tuple2;\r\n}());\n\n/**\r\n * An interface for implementations of FRP timer systems.\r\n */\r\nvar TimerSystemImpl = /** @class */ (function () {\r\n    function TimerSystemImpl() {\r\n    }\r\n    return TimerSystemImpl;\r\n}());\r\nvar nextSeq = 0;\r\nvar Event = /** @class */ (function () {\r\n    function Event(t, sAlarm) {\r\n        this.t = t;\r\n        this.sAlarm = sAlarm;\r\n        this.seq = ++nextSeq;\r\n    }\r\n    return Event;\r\n}());\r\nvar TimerSystem = /** @class */ (function () {\r\n    function TimerSystem(impl) {\r\n        var _this = this;\r\n        this.eventQueue = new BSTree(function (a, b) {\r\n            if (a.t < b.t)\r\n                return -1;\r\n            if (a.t > b.t)\r\n                return 1;\r\n            if (a.seq < b.seq)\r\n                return -1;\r\n            if (a.seq > b.seq)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        Transaction.run(function () {\r\n            _this.impl = impl;\r\n            _this.tMinimum = 0;\r\n            var timeSnk = new CellSink(impl.now());\r\n            _this.time = timeSnk;\r\n            // A dummy listener to time to keep it alive even when there are no other listeners.\r\n            _this.time.listen(function (t) { });\r\n            Transaction.onStart(function () {\r\n                // Ensure the time is always increasing from the FRP's point of view.\r\n                var t = _this.tMinimum = Math.max(_this.tMinimum, impl.now());\r\n                var _loop_1 = function () {\r\n                    var ev = null;\r\n                    if (!_this.eventQueue.isEmpty()) {\r\n                        var mev = _this.eventQueue.minimum();\r\n                        if (mev.t <= t) {\r\n                            ev = mev;\r\n                            // TO DO: Detect infinite loops!\r\n                        }\r\n                    }\r\n                    if (ev != null) {\r\n                        timeSnk.send(ev.t);\r\n                        Transaction.run(function () { return ev.sAlarm.send_(ev.t); });\r\n                    }\r\n                    else\r\n                        return \"break\";\r\n                };\r\n                // Pop and execute all events earlier than or equal to t (the current time).\r\n                while (true) {\r\n                    var state_1 = _loop_1();\r\n                    if (state_1 === \"break\")\r\n                        break;\r\n                }\r\n                timeSnk.send(t);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * A timer that fires at the specified time, which can be null, meaning\r\n     * that the alarm is not set.\r\n     */\r\n    TimerSystem.prototype.at = function (tAlarm) {\r\n        var _this = this;\r\n        var current = null, cancelCurrent = null, active = false, tAl = null, sampled = false;\r\n        var sAlarm = new StreamWithSend(null), updateTimer = function () {\r\n            if (cancelCurrent !== null) {\r\n                cancelCurrent();\r\n                _this.eventQueue.remove(current);\r\n            }\r\n            cancelCurrent = null;\r\n            current = null;\r\n            if (active) {\r\n                if (!sampled) {\r\n                    sampled = true;\r\n                    tAl = tAlarm.sampleNoTrans__();\r\n                }\r\n                if (tAl !== null) {\r\n                    current = new Event(tAl, sAlarm);\r\n                    _this.eventQueue.add(current);\r\n                    cancelCurrent = _this.impl.setTimer(tAl, function () {\r\n                        // Correction to ensure the clock time appears to be >= the\r\n                        // alarm time. It can be a few milliseconds early, and\r\n                        // this breaks things otherwise, because it doesn't think\r\n                        // it's time to fire the alarm yet.\r\n                        _this.tMinimum = Math.max(_this.tMinimum, tAl);\r\n                        // Open and close a transaction to trigger queued\r\n                        // events to run.\r\n                        Transaction.run(function () { });\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        sAlarm.setVertex__(new Vertex(\"at\", 0, [\r\n            new Source(tAlarm.getVertex__(), function () {\r\n                active = true;\r\n                sampled = false;\r\n                Transaction.currentTransaction.prioritized(sAlarm.getVertex__(), updateTimer);\r\n                var kill = tAlarm.getStream__().listen_(sAlarm.getVertex__(), function (oAlarm) {\r\n                    tAl = oAlarm;\r\n                    sampled = true;\r\n                    updateTimer();\r\n                }, false);\r\n                return function () {\r\n                    active = false;\r\n                    updateTimer();\r\n                    kill();\r\n                };\r\n            })\r\n        ]));\r\n        return sAlarm;\r\n    };\r\n    return TimerSystem;\r\n}());\n\n/**\r\n * A timer system implementation using seconds as the time unit.\r\n */\r\nvar SecondsTimerSystem = /** @class */ (function (_super) {\r\n    __extends(SecondsTimerSystem, _super);\r\n    function SecondsTimerSystem() {\r\n        return _super.call(this, new SecondsTimerSystemImpl()) || this;\r\n    }\r\n    return SecondsTimerSystem;\r\n}(TimerSystem));\r\nvar SecondsTimerSystemImpl = /** @class */ (function (_super) {\r\n    __extends(SecondsTimerSystemImpl, _super);\r\n    function SecondsTimerSystemImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Set a timer that will execute the specified callback at the specified time.\r\n     * @return A function that can be used to cancel the timer.\r\n     */\r\n    SecondsTimerSystemImpl.prototype.setTimer = function (t, callback) {\r\n        var timeout = setTimeout(callback, Math.max((t - this.now()) * 1000, 0));\r\n        return function () { clearTimeout(timeout); };\r\n    };\r\n    /**\r\n     * Return the current clock time.\r\n     */\r\n    SecondsTimerSystemImpl.prototype.now = function () {\r\n        return Date.now() * 0.001;\r\n    };\r\n    return SecondsTimerSystemImpl;\r\n}(TimerSystemImpl));\n\n/**\r\n * A timer system implementation using milliseconds as the time unit.\r\n */\r\nvar MillisecondsTimerSystem = /** @class */ (function (_super) {\r\n    __extends(MillisecondsTimerSystem, _super);\r\n    function MillisecondsTimerSystem() {\r\n        return _super.call(this, new MillisecondsTimerSystemImpl()) || this;\r\n    }\r\n    return MillisecondsTimerSystem;\r\n}(TimerSystem));\r\nvar MillisecondsTimerSystemImpl = /** @class */ (function (_super) {\r\n    __extends(MillisecondsTimerSystemImpl, _super);\r\n    function MillisecondsTimerSystemImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Set a timer that will execute the specified callback at the specified time.\r\n     * @return A function that can be used to cancel the timer.\r\n     */\r\n    MillisecondsTimerSystemImpl.prototype.setTimer = function (t, callback) {\r\n        var timeout = setTimeout(callback, Math.max(t - this.now(), 0));\r\n        return function () { clearTimeout(timeout); };\r\n    };\r\n    /**\r\n     * Return the current clock time.\r\n     */\r\n    MillisecondsTimerSystemImpl.prototype.now = function () {\r\n        return Date.now();\r\n    };\r\n    return MillisecondsTimerSystemImpl;\r\n}(TimerSystemImpl));\n\nvar IOAction = /** @class */ (function () {\r\n    function IOAction() {\r\n    }\r\n    /*!\r\n     * Convert a function that performs asynchronous I/O taking input A\r\n     * and returning a value of type B into an I/O action of type\r\n     * (sa : Stream<A>) => Stream<B>\r\n     */\r\n    IOAction.fromAsync = function (performIO) {\r\n        return function (sa) {\r\n            var out = new StreamWithSend(null);\r\n            out.setVertex__(new Vertex(\"map\", 0, [\r\n                new Source(sa.getVertex__(), function () {\r\n                    return sa.listen_(out.getVertex__(), function (a) {\r\n                        performIO(a, function (b) {\r\n                            Transaction.run(function () {\r\n                                out.send_(b);\r\n                            });\r\n                        });\r\n                    }, false);\r\n                })\r\n            ]));\r\n            return out;\r\n        };\r\n    };\r\n    return IOAction;\r\n}());\n\nexport { lambda1, lambda2, lambda3, lambda4, lambda5, lambda6, Stream, StreamLoop, StreamSink, Cell, CellLoop, CellSink, Transaction, Tuple2, Unit, Operational, getTotalRegistrations, Vertex, TimerSystemImpl, TimerSystem, SecondsTimerSystem, MillisecondsTimerSystem, IOAction };\n//# sourceMappingURL=sodium.esm.js.map\n","import * as React from \"react\";\n\nconst style = {\n    color: \"#fff\",\n    fontFamily: \"Verdana, Arial\",\n    fontSize: \"40px\",\n    width: \"100%\",\n    cursor: \"pointer\",\n    borderRadius: \"15px\",\n    margin: \"10px\",\n    padding: \"5px\",\n    textAlign: \"center\",\n    border: \"4px solid #fff\"\n}\n\nconst styleGreen = Object.assign({}, style, {backgroundColor: \"green\" }); \nconst styleRed = Object.assign({}, style, {backgroundColor: \"red\"}); \n\n\nexport const Waiting = ({onClick}) => (\n    <div style={styleGreen} onClick={onClick} >Drop</div>\n);\n\nexport const Bouncing = ({onClick}) => (\n    <div style={styleRed} onClick={onClick} >Pause</div>\n)\n","import * as React from \"react\";\nimport {Waiting, Bouncing} from \"dom/view/TopMenu-View\";\nimport {RootContext} from \"dom/context/Root-Context\";\nimport {WorkerCommands} from \"types/Worker-Types\";\ninterface State {\n    phase: PHASE;\n}\n\nenum PHASE {\n    WAITING,\n    BOUNCING\n}\nexport class TopMenu extends React.Component<{}, State> {\n    readonly state:State = {phase: PHASE.WAITING}\n\n    render() {\n\n        return (\n            <RootContext.Consumer>\n            {worker => {\n                switch(this.state.phase) {\n                    case PHASE.WAITING:\n                        return <Waiting \n                            onClick={() => {\n                                this.setState({phase: PHASE.BOUNCING});\n                                worker.postMessage({\n                                    cmd: WorkerCommands.BALL_START,\n                                });\n                            }}\n                        />;\n                    case PHASE.BOUNCING:\n                        return <Bouncing \n                            onClick={() => {\n                                this.setState({phase: PHASE.WAITING});\n                                worker.postMessage({\n                                    cmd: WorkerCommands.BALL_STOP\n                                });\n                            }}\n                        />;\n                }\n            }}\n            \n            </RootContext.Consumer>\n        )\n    }\n}\n","import * as React from \"react\";\n\nconst style = {\n    color: \"#fff\",\n    fontFamily: \"Verdana, Arial\",\n    fontSize: \"70px\",\n    width: \"100%\"\n\n}\n\nexport const Loading = () => (\n    <div style={style} >Loading ...</div>\n);\n","/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n","import * as React from \"react\";\nimport {Loading} from \"dom/view/Loading-View\";\nimport {TopMenu} from \"dom/components/TopMenu-Component\";\nimport {sLoadingFinished} from \"frp/Init-Sinks-FRP\";\nimport {RootContext} from \"dom/context/Root-Context\";\n\ninterface Props {\n    worker: any;\n}\n\ninterface State {\n    isLoading: boolean;\n}\n\nexport class Root extends React.Component<Props, State> {\n    private unlistener:() => void;\n    \n    readonly state: State = { isLoading: true };\n\n    componentDidMount() {\n        this.unlistener = sLoadingFinished.listen(() => {\n            this.setState({isLoading: false}, this.unlistener)\n        })\n    }\n\n    render() {\n        return (\n            <RootContext.Provider value={this.props.worker}>\n                {this.state.isLoading \n                    ?   <Loading />\n                    :   <TopMenu />\n                }\n            </RootContext.Provider>\n        );\n    }\n}\n","import {\n    createWebGlRenderer,\n    PerspectiveCameraSettings,\n    CameraKind,\n    getCameraProjection,\n    createMat4\n} from \"pure3d\";\nimport {mat4} from \"gl-matrix\";\nimport { S } from \"utils/Utils\";\nimport {parallel, Future} from \"fluture\";\nimport {fetchImage} from \"fluture-loaders\";\nimport {Root} from \"dom/components/Root-Component\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nexport const prepReact = (worker:any) => {\n\n    const div = document.createElement(\"div\");\n    div.style.position = \"absolute\";\n    div.style.top = \"0px\";\n    div.style.left = \"0px\";\n    document.getElementById(\"app\").appendChild(div);\n\n    ReactDOM.render(<Root worker={worker} />, div);\n}\n\nexport const prepCanvas = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"absolute\";\n    canvas.style.top = \"0px\";\n    canvas.style.left = \"0px\";\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.style.backgroundColor = \"#2a2a2a\";\n\n    document.getElementById(\"app\").appendChild(canvas);\n\n    return canvas;\n}\n\nexport const prepRenderer = (canvas:HTMLCanvasElement) => {\n        const renderer = createWebGlRenderer({\n            canvas,\n            version: 1\n        });\n        renderer.gl.clearColor(0.2, 0.2, 0.2, 1.0);\n\n        renderer.resize({ width: window.innerWidth, height: window.innerHeight });\n\n        return renderer;\n}\n\nexport const prepCamera = () => {\n    const settings:PerspectiveCameraSettings = {\n        kind: CameraKind.PERSPECTIVE,\n        yfov: 45.0 * Math.PI / 180,\n        aspectRatio: window.innerWidth / window.innerHeight,\n        znear: .01,\n        zfar: 1000\n    }\n\n    const position = Float64Array.from([0,0,5]);\n    const cameraLook = Float64Array.from([0,0,0]);\n    const cameraUp = Float64Array.from([0,1,0]);\n   \n    const projection = getCameraProjection(settings); \n\n    const view = mat4.lookAt(createMat4() as any, position as any, cameraLook as any,cameraUp as any);\n\n    return {\n        ...settings,\n        position,\n        view,\n        projection\n    }\n}\n\n\n\n\n","import {Quadratic, } from \"./Quadratic\";\n\n/* \n * CORE\n */\n//missing displacement, get velocity\nexport const Kinematic1 = (v0:number) => (acc:number) => (t:number) =>{\n    const v = v0 + acc * t;\n    return v;\n}\n\n//missing acceleration, get displacement\nexport const Kinematic2 = (v0:number) => (v:number) => (t:number) => {\n    const dx = ((v + v0)/2) * t;\n    return dx;\n}\n\n//missing final velocity, get displacement\nexport const Kinematic3 = (v0:number) => (acc:number) => (t:number) => {\n    const dx = ((.5 * acc) * (t * t)) + (v0 * t);\n    return dx;\n}\n\n//missing time, get final velocity\nexport const Kinematic4 = (v0:number) => (acc:number) => (dx:number) => {\n    const vSquared = (v0 * v0) + 2 * acc * dx;\n    return Math.sqrt(vSquared);\n}\n\n/*\n * HELPERS (building off core)\n */\n\n//missing final velocity (K3), get time\n//note - it's quadratic and returns the positive root \nexport const Kinematic5 = (v0:number) => (acc:number) => (dx:number) => {\n    const [root1, root2] = Quadratic (.5 * acc) (v0) (-dx);\n\n    return Math.max(root1, root2);\n}\n\n//missing time (K4), get displacement\nexport const Kinematic6 = (v0:number) => (acc:number) => (v:number) => {\n    return ((v0 * v0) - (v * v))/(2 * acc) * -1;\n}\n\n//missing displacement (K1), get time\nexport const Kinematic7 = (v0: number) => (acc:number) => (v:number) => {\n    return v / (v0 + acc); \n}\n","(function(f){\n\n  'use strict';\n\n  /*istanbul ignore next*/\n  if(typeof module === 'object' && typeof module.exports === 'object'){\n    module.exports = f(require('sanctuary-type-classes'), require('sanctuary-type-identifiers'));\n  }else{\n    self.concurrify = f(self.sanctuaryTypeClasses, self.sanctuaryTypeIdentifiers);\n  }\n\n}(function(Z, type){\n\n  'use strict';\n\n  var $alt = 'fantasy-land/alt';\n  var $ap = 'fantasy-land/ap';\n  var $map = 'fantasy-land/map';\n  var $of = 'fantasy-land/of';\n  var $zero = 'fantasy-land/zero';\n  var $$type = '@@type';\n  var ordinal = ['first', 'second', 'third', 'fourth', 'fifth'];\n\n  function isFunction(f){\n    return typeof f === 'function';\n  }\n\n  function isBinary(f){\n    return f.length >= 2;\n  }\n\n  function isApplicativeRepr(Repr){\n    try{\n      return Z.Applicative.test(Z.of(Repr));\n    }catch(_){\n      return false;\n    }\n  }\n\n  function invalidArgument(it, at, expected, actual){\n    throw new TypeError(\n      it\n      + ' expects its '\n      + ordinal[at]\n      + ' argument to '\n      + expected\n      + '\\n  Actual: '\n      + Z.toString(actual)\n    );\n  }\n\n  function invalidContext(it, actual, an){\n    throw new TypeError(\n      it + ' was invoked outside the context of a ' + an + '. \\n  Called on: ' + Z.toString(actual)\n    );\n  }\n\n  //       getTypeIdentifier :: TypeRepresentative -> TypeIdentifier\n  function getTypeIdentifier(Repr){\n    return Repr[$$type] || Repr.name || 'Anonymous';\n  }\n\n  //       generateTypeIdentifier :: TypeIdentifier -> TypeIdentifier\n  function generateTypeIdentifier(identifier){\n    var o = type.parse(identifier);\n    return (o.namespace || 'concurrify') + '/Concurrent' + o.name + '@' + o.version;\n  }\n\n  //concurrify :: Applicative m\n  //           => (TypeRep m, m a, (m a, m a) -> m a, (m a, m (a -> b)) -> m b)\n  //           -> Concurrently m\n  return function concurrify(Repr, zero, alt, ap){\n\n    var INNERTYPE = getTypeIdentifier(Repr);\n    var OUTERTYPE = generateTypeIdentifier(INNERTYPE);\n    var INNERNAME = type.parse(INNERTYPE).name;\n    var OUTERNAME = type.parse(OUTERTYPE).name;\n\n    function Concurrently(sequential){\n      this.sequential = sequential;\n    }\n\n    function isInner(x){\n      return x instanceof Repr\n      || (Boolean(x) && x.constructor === Repr)\n      || type(x) === Repr[$$type];\n    }\n\n    function isOuter(x){\n      return x instanceof Concurrently\n      || (Boolean(x) && x.constructor === Concurrently)\n      || type(x) === OUTERTYPE;\n    }\n\n    function construct(x){\n      if(!isInner(x)) invalidArgument(OUTERNAME, 0, 'be of type \"' + INNERNAME + '\"', x);\n      return new Concurrently(x);\n    }\n\n    if(!isApplicativeRepr(Repr)) invalidArgument('concurrify', 0, 'represent an Applicative', Repr);\n    if(!isInner(zero)) invalidArgument('concurrify', 1, 'be of type \"' + INNERNAME + '\"', zero);\n    if(!isFunction(alt)) invalidArgument('concurrify', 2, 'be a function', alt);\n    if(!isBinary(alt)) invalidArgument('concurrify', 2, 'be binary', alt);\n    if(!isFunction(ap)) invalidArgument('concurrify', 3, 'be a function', ap);\n    if(!isBinary(ap)) invalidArgument('concurrify', 3, 'be binary', ap);\n\n    var proto = Concurrently.prototype = construct.prototype = {constructor: construct};\n\n    construct[$$type] = OUTERTYPE;\n\n    var mzero = new Concurrently(zero);\n\n    construct[$zero] = function Concurrently$zero(){\n      return mzero;\n    };\n\n    construct[$of] = function Concurrently$of(value){\n      return new Concurrently(Z.of(Repr, value));\n    };\n\n    proto[$map] = function Concurrently$map(mapper){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#map', this, OUTERNAME);\n      if(!isFunction(mapper)) invalidArgument(OUTERNAME + '#map', 0, 'be a function', mapper);\n      return new Concurrently(Z.map(mapper, this.sequential));\n    };\n\n    proto[$ap] = function Concurrently$ap(m){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#ap', this, OUTERNAME);\n      if(!isOuter(m)) invalidArgument(OUTERNAME + '#ap', 0, 'be a ' + OUTERNAME, m);\n      return new Concurrently(ap(this.sequential, m.sequential));\n    };\n\n    proto[$alt] = function Concurrently$alt(m){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#alt', this, OUTERNAME);\n      if(!isOuter(m)) invalidArgument(OUTERNAME + '#alt', 0, 'be a ' + OUTERNAME, m);\n      return new Concurrently(alt(this.sequential, m.sequential));\n    };\n\n    proto.toString = function Concurrently$toString(){\n      if(!isOuter(this)) invalidContext(OUTERNAME + '#toString', this, OUTERNAME);\n      return OUTERNAME + '(' + Z.toString(this.sequential) + ')';\n    };\n\n    return construct;\n\n  };\n\n}));\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array) {\n  this._head = 0;\n  this._tail = 0;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peakAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","(function(f) {\n\n  'use strict';\n\n  /*istanbul ignore next*/\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = f();\n  }else{\n    self.inspectf = f();\n  }\n\n}(function() {\n\n  'use strict';\n\n  function checkn(n) {\n    if(typeof n !== 'number') {\n      throw new TypeError(\n        'inspectf expects its first argument to be a number'\n      );\n    }\n  }\n\n  function checkf(f) {\n    if(typeof f !== 'function') {\n      throw new TypeError(\n        'inspectf expects its second argument to be a function'\n      );\n    }\n  }\n\n  var RSPACE = /^ */;\n  var RCODE = /\\s*[^\\s]/;\n  var RTABS = /\\t/g;\n  var REOL = /\\n\\r?/;\n\n  function isCode(line) {\n    return RCODE.test(line);\n  }\n\n  function getPadding(line) {\n    return line.match(RSPACE)[0].length;\n  }\n\n  function guessIndentation(lines) {\n    var filtered = lines.filter(isCode);\n    var paddings = filtered.map(getPadding);\n    var depth = paddings.reduce(Math.min, Infinity);\n    var tabsize = paddings\n    .map(function(x) { return x - depth; })\n    .find(function(x) { return x > 1; }) || 2;\n    return {depth: depth, tabsize: tabsize};\n  }\n\n  function pad(n) {\n    return (new Array(n + 1)).join(' ');\n  }\n\n  function show(f, indentation) {\n    return f.toString().replace(RTABS, indentation);\n  }\n\n  function toLines(s) {\n    return s.split(REOL);\n  }\n\n  function fixIndentation(lines, indentation) {\n    var info = guessIndentation(lines.slice(1));\n    var RPAD = new RegExp(pad(info.tabsize), 'g');\n    return lines.map(function(line) {\n      return line.slice(Math.min(info.depth, getPadding(line)))\n      .replace(RPAD, '\\t').replace(RTABS, indentation);\n    }).join('\\n');\n  }\n\n  return function inspectf(n, f) {\n    checkn(n);\n\n    if(arguments.length < 2) {\n      return function inspectf$partial(f) { return inspectf(n, f); };\n    }\n\n    checkf(f);\n    if(f.toString !== Function.prototype.toString) { return f.toString(); }\n    var i = pad(n), shown = show(f, i), lines = toLines(shown, i);\n    if(lines.length < 2) { return shown; }\n    return fixIndentation(lines, i);\n  };\n\n}));\n","import {Future} from \"fluture\";\nimport {WorkerCommands} from \"types/Worker-Types\";\n\nexport const MESSAGE = \"message\";\n\n/*\n * these loaders resolve _after_ communication is established\n */\n//Loaded by main thread \nexport const loadWorker = (worker:any) => Future<any, Worker>((reject, resolve) => {\n    const onInitial = (e: MessageEvent) => {\n        if(e.data.cmd === WorkerCommands.READY) {\n            worker.removeEventListener(MESSAGE, onInitial);\n            resolve(worker);\n        }\n    }\n    worker.addEventListener(MESSAGE, onInitial);\n\n    worker.postMessage({ cmd: WorkerCommands.INIT});\n});\n\n//Loaded by worker thread\nexport const initWorker = () => Future<any, any>((reject, resolve) => {\n\n    const onInitial = (e: MessageEvent) => {\n        console.log(e);\n\n        if(e.data.cmd === WorkerCommands.INIT) {\n            (self as any).removeEventListener(MESSAGE, onInitial);\n            (self as any).postMessage({cmd: WorkerCommands.READY});\n            resolve(self);\n        }\n    }\n    (self as any).addEventListener(MESSAGE, onInitial);\n});\n\n","\nexport const getCompileFlags = () => {\n    const buildMode = process.env['NODE_ENV'];\n    const buildVersion =  process.env['BUILD_VERSION'];\n    const isProduction = buildMode === \"production\" ? true : false;\n\n    return {buildMode, buildVersion, isProduction}\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","import {Maybe} from \"./Sanctuary-Typings\";\n\nimport {create, env} from 'sanctuary';\n\nconst checkTypes = false; //process.env.BUILD_TYPE !== 'build';\n\nexport const S = create({checkTypes, env});\n\nconst mapMaybe = <A>(f:((a:A) => any)) => (m:Maybe<A>):Maybe<A> => S.map(f) (m);","export * from \"./Sanctuary-Typings\";\nexport * from \"./Sanctuary-Instance\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"7ae20c5dc406d88b3d54.worker.js\");\n};","import MyWorker = require('worker-loader!./Worker');\nimport { WebGlConstants } from \"pure3d\";\nimport { getCompileFlags, loadWorker, S, MESSAGE, } from \"utils/Utils\";\nimport {prepRenderer, prepCanvas, prepCamera, prepReact} from \"./main/init/Init-Prep\";\nimport {loadAssets} from \"./main/init/Init-Loader\";\nimport {makeOutput} from \"./main/io/Output\";\nimport {createControls} from \"./main/io/Controls\";\nimport {sLoadingFinished} from \"frp/Init-Sinks-FRP\";\nimport {WorkerCommands} from \"./types/Worker-Types\";\n\nconst {buildMode, buildVersion, isProduction} = getCompileFlags();\nconsole.log(`%c Ball Bounce FRP ${buildVersion} (productionMode: ${isProduction})`, 'color: #4286f4; font-size: large; font-family: \"Comic Sans MS\", cursive, sans-serif');\n\n/*\n * Everything here is generic boilerplate... the details are in the imports\n */\n\nconst worker:Worker = new (MyWorker as any)();\n\n\nloadWorker(worker)\n    .chain(worker => {\n        const canvas = prepCanvas();\n        const renderer = prepRenderer(canvas);\n        prepReact(worker);\n    \n        return loadAssets(renderer)\n            .map(obj => Object.assign({}, obj, {canvas, renderer, worker}))\n    })\n    .fork(\n        console.error,\n        ({worker, ...props}) => {\n            let readyForUpdate = false;\n\n            const camera = prepCamera();\n            const controls = createControls(camera);\n            const output = makeOutput({camera, ...props});\n\n            worker.addEventListener(MESSAGE, (e:MessageEvent) => {\n                switch(e.data.cmd) {\n                    case WorkerCommands.RENDER: \n                        output(e.data.scenes);\n                        readyForUpdate = true;\n                }\n            });\n\n            const tick = (frameTs:number) => {\n                if(readyForUpdate) {\n                    readyForUpdate = false;\n                    worker.postMessage({\n                        cmd: WorkerCommands.TICK, \n                        frameTs, \n                        camera: controls.updateCamera()\n                    });\n                }\n\n                requestAnimationFrame(tick);\n            }\n\n            requestAnimationFrame(tick);\n\n\n            worker.postMessage({\n                cmd: WorkerCommands.WORLD_START,\n                scenes: props.gltfBridges.map(bridge => bridge.getOriginalScene(camera) (0))\n            });\n\n            sLoadingFinished.send(null);\n        }\n    );\n\n\n\n"],"sourceRoot":""}